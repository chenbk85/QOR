//QGSession.cpp

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "Qurses/GUI/QGSession.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"
#include "Qurses/curses.h"

//--------------------------------------------------------------------------------
namespace nsQurses
{
	__QOR_IMPLEMENT_OCLASS_LUID( CQGSession );

	//--------------------------------------------------------------------------------
	CQGSession::CQGSession()
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::CQGSession" );
		m_pRootWindow = initscr();
		m_Palette.Initialise();

		m_pDesktop = new CQGWindow( m_pRootWindow );

		cbreak();
		noecho();
		curs_set(0);

		refresh();	// refresh stdscr so that reading from it will not cause it to overwrite the other windows that are being created
	}

	//--------------------------------------------------------------------------------
	CQGSession::~CQGSession()
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::~CQGSession" );
		m_pDesktop->Detach();
		delete m_pDesktop;
		endwin();
	}

	//--------------------------------------------------------------------------------
	CQGPalette::refType CQGSession::Palette( void )
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::Palette" );
		return m_Palette.Ref();
	}

	//--------------------------------------------------------------------------------
	CQGWindow::refType CQGSession::Desktop( void )
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::Desktop" );
		return m_pDesktop->Ref();
	}

	//--------------------------------------------------------------------------------
	CQGWindow::refType CQGSession::CreateWindow( int iLines, int iCols, int iXPos, int iYPos )
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::CreateWindow" );
		return CQGWindow::refType( new CQGWindow( 0, iLines, iCols, iXPos, iYPos ), true );
	}

	//--------------------------------------------------------------------------------
	CQGPanel::refType CQGSession::CreatePanel( int iLines, int iCols, int iXPos, int iYPos )
	{
		__QCS_MEMBER_FCONTEXT( "CQGSession::CreatePanel" );
		return CQGPanel::refType( new CQGPanel( iLines, iCols, iXPos, iYPos ), true );
	}

}//nsQurses
