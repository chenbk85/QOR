//Basespawn.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/Basespawn.h"
#include <errno.h>
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID( Cspawn );

	//--------------------------------------------------------------------------------
	Cspawn::Cspawn()
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::Cspawn" );
	}

	//--------------------------------------------------------------------------------
	Cspawn::~Cspawn()
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::~Cspawn" );
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn( pid_t* , const char* , const posix_spawn_file_actions_t*, const posix_spawnattr_t* , char* const[], char* const[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn_file_actions_addclose( posix_spawn_file_actions_t*, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn_file_actions_addclose" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn_file_actions_adddup2( posix_spawn_file_actions_t*, int, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn_file_actions_adddup2" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn_file_actions_addopen( posix_spawn_file_actions_t* , int, const char* , int, mode_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn_file_actions_addopen" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn_file_actions_destroy( posix_spawn_file_actions_t* )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn_file_actions_destroy" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawn_file_actions_init( posix_spawn_file_actions_t* )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawn_file_actions_init" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_destroy( posix_spawnattr_t* )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_destroy" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getflags( const posix_spawnattr_t* , short*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getflags" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getpgroup( const posix_spawnattr_t* , pid_t*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getpgroup" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getschedparam( const posix_spawnattr_t* , sched_param*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getschedparam" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getschedpolicy( const posix_spawnattr_t* , int*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getschedpolicy" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getsigdefault( const posix_spawnattr_t* , sigset_t*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getsigdefault" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_getsigmask( const posix_spawnattr_t* , sigset_t*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_getsigmask" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_init( posix_spawnattr_t* )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_init" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setflags( posix_spawnattr_t*, short )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setflags" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setpgroup( posix_spawnattr_t*, pid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setpgroup" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setschedparam( posix_spawnattr_t* , const sched_param*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setschedparam" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setschedpolicy( posix_spawnattr_t*, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setschedpolicy" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setsigdefault( posix_spawnattr_t* , const sigset_t*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setsigdefault" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnattr_setsigmask( posix_spawnattr_t* , const sigset_t*  )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnattr_setsigmask" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cspawn::posix_spawnp( pid_t* , const char* , const posix_spawn_file_actions_t*, const posix_spawnattr_t* , char* const[], char* const[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cspawn::posix_spawnp" );
		errno = ENOSYS;
		return 0;
	}

}//nsBaseCRT
