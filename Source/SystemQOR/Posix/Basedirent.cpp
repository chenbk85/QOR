// Basedirent.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/Basedirent.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"
#include <errno.h>
#include <string.h>

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID(Cdirent);

	//--------------------------------------------------------------------------------
    Cdirent::Cdirent()
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::Cdirent" );
	}

	//--------------------------------------------------------------------------------
    Cdirent::~Cdirent()
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::~Cdirent" );
	}

	//Platform generic implementations of dirent functions
	//--------------------------------------------------------------------------------
	int Cdirent::alphasort( const dirent** d1, const dirent** d2 )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::alphasort" );
		return strcoll( (*d1)->d_name, (*d2)->d_name ); 
	}

	//--------------------------------------------------------------------------------
    int Cdirent::closedir( DIR* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::closedir" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cdirent::dirfd( DIR* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::dirfd" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	DIR* Cdirent::fdopendir( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::fdopendir" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    DIR* Cdirent::opendir( const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::opendir" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    dirent* Cdirent::readdir( DIR* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::readdir" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cdirent::readdir_r( DIR* __QCMP_RESTRICT, dirent* __QCMP_RESTRICT, dirent** __QCMP_RESTRICT )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::readdir_r" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    void Cdirent::rewinddir( DIR* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::rewinddir" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
    int Cdirent::scandir( const char*, dirent***, int (*)( const dirent* ), int (*)( const dirent**, const dirent** ) )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::scandir" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    void Cdirent::seekdir( DIR*, long )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::seekdir" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
    long Cdirent::telldir( DIR* )
	{
		__QCS_MEMBER_FCONTEXT( "Cdirent::telldir" );
		errno = ENOSYS;
		return 0;
	}

}//nsBaseCRT
