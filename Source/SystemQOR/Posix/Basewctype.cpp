//Basewctype.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/Basewctype.h"
#include <errno.h>
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID( Cwctype );

	//--------------------------------------------------------------------------------
	Cwctype::Cwctype()
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::Cwctype");
	}

	//--------------------------------------------------------------------------------
	Cwctype::~Cwctype()
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::~Cwctype");
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswascii( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswascii");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswalnum( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswalnum");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswalnum_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswalnum_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswalpha( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswalpha");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswalpha_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswalpha_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswblank( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswblank");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswblank_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswblank_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswcntrl( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswcntrl");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswcntrl_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswcntrl_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswdigit( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswdigit");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswdigit_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswdigit_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswgraph( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswgraph");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswgraph_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswgraph_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswlower( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswlower");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswlower_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswlower_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswprint( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswprint");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswprint_l( wint_t, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswprint_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswpunct( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswpunct");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswpunct_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswpunct_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswspace( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswspace");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswspace_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswspace_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswupper( wint_t wc ) 
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswupper");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswupper_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswupper_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswxdigit( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswxdigit");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswxdigit_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswxdigit_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cwctype::iswctype( wint_t wc, wctype_t desc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswctype");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cwctype::iswctype_l( wint_t wc, wctype_t desc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::iswctype_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    wint_t Cwctype::towctrans( wint_t wc, wctrans_t desc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towctrans");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwctype::towctrans_l( wint_t wc, wctrans_t desc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towctrans_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    wint_t Cwctype::towlower( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towlower");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	wint_t Cwctype::towlower_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towlower_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    wint_t Cwctype::towupper( wint_t wc )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towupper");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    wint_t Cwctype::towupper_l( wint_t wc, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::towupper_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    wctrans_t Cwctype::wctrans( const char* pProperty )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::wctrans");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	wctrans_t Cwctype::wctrans_l( const char* pProperty, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::wctrans_l");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	wctype_t Cwctype::wctype( const char* pProperty )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::wctype");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	wctype_t Cwctype::wctype_l( const char*, locale_t )
	{
		__QCS_MEMBER_FCONTEXT("Cwctype::wctype_l");
		errno = ENOSYS;
		return 0;
	}

}//nsBaseCRT
