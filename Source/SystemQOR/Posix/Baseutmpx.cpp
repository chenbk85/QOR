//Baseutmpx.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/Baseutmpx.h"
#include <errno.h>
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID( Cutmpx );

	//--------------------------------------------------------------------------------
	Cutmpx::Cutmpx()
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::Cutmpx");
	}

	//--------------------------------------------------------------------------------
	Cutmpx::~Cutmpx()
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::~Cutmpx");
	}

	//--------------------------------------------------------------------------------
	void Cutmpx::endutxent( void )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::endutxent");
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
    utmpx* Cutmpx::getutxent( void )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::getutxent");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    utmpx* Cutmpx::getutxid( const utmpx* )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::getutxid");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    utmpx* Cutmpx::getutxline( const utmpx* )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::getutxline");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    utmpx* Cutmpx::pututxline( const utmpx* )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::pututxline");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    void Cutmpx::setutxent( void )
	{
		__QCS_MEMBER_FCONTEXT("Cutmpx::setutxent");
		errno = ENOSYS;
	}

}//nsBaseCRT
