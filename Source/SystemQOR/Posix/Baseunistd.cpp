//Baseunistd.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/Baseunistd.h"
#include <errno.h>
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID( Cunistd );

	//--------------------------------------------------------------------------------
	Cunistd::Cunistd()
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::Cunistd" );
	}

	//--------------------------------------------------------------------------------
	Cunistd::~Cunistd()
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::~Cunistd" );
	}

	//--------------------------------------------------------------------------------
    int Cunistd::access( const char*, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    unsigned Cunistd::alarm( unsigned )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::chdir( const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::chown( const char*, uid_t, gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::close( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    size_t Cunistd::confstr( int, char*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    char* Cunistd::crypt( const char*, const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    char* Cunistd::ctermid( char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::dup( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::dup2( int, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	void Cunistd::encrypt( char[ 64 ], int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execl( const char*, const char*, ... )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execle( const char*, const char*, ... )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execlp( const char*, const char*, ... )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execv( const char*, char* const[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execve( const char*, char* const[], char* const[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::execvp( const char*, char* const[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	void Cunistd::_exit( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::fchown( int, uid_t, gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::fchdir( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[SIO]
	int Cunistd::fdatasync( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	pid_t Cunistd::fork( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	long Cunistd::fpathconf( int, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[FSC]
	int Cunistd::fsync( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::ftruncate( int, off_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	char* Cunistd::getcwd( char*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	gid_t Cunistd::getegid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	uid_t Cunistd::geteuid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	gid_t Cunistd::getgid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::getgroups( int, gid_t[] )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	long Cunistd::gethostid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::gethostname( char*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    char* Cunistd::getlogin( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::getlogin_r( char*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    int Cunistd::getopt( int, char* const [ ], const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	//[XSI]
	pid_t Cunistd::getpgid( pid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------	
	pid_t Cunistd::getpgrp( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	pid_t Cunistd::getpid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	pid_t Cunistd::getppid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	pid_t Cunistd::getsid( pid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	uid_t Cunistd::getuid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	char* Cunistd::getwd( char* ) //(LEGACY )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------	
	int Cunistd::isatty( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	int Cunistd::lchown( const char*, uid_t, gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::link( const char*, const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	int Cunistd::lockf( int, int, off_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	off_t Cunistd::lseek( int, off_t, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	int Cunistd::nice( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	long Cunistd::pathconf( const char*, int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::pause( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::pipe( int[ 2 ] )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	ssize_t Cunistd::pread( int, void*, size_t, off_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	ssize_t Cunistd::pwrite( int, const void*, size_t, off_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	ssize_t Cunistd::read( int, void*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	ssize_t Cunistd::readlink( const char* __QCMP_RESTRICT, char* __QCMP_RESTRICT, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::rmdir( const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setegid( gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::seteuid( uid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setgid( gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setpgid( pid_t, pid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	pid_t Cunistd::setpgrp( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setregid( gid_t, gid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setreuid( uid_t, uid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------	
	pid_t Cunistd::setsid( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::setuid( uid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	unsigned Cunistd::sleep( unsigned )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::access" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	void Cunistd::swab( const void* __QCMP_RESTRICT, void* __QCMP_RESTRICT, ssize_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::swab" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::symlink( const char*, const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::symlink" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	void Cunistd::sync( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::sync" );
		errno = ENOSYS;
	}

	//--------------------------------------------------------------------------------
	long Cunistd::sysconf( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::sysconf" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	pid_t Cunistd::tcgetpgrp( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::tcgetpgrp" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::tcsetpgrp( int, pid_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::tcsetpgrp" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	int Cunistd::truncate( const char*, off_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::truncate" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	char* Cunistd::ttyname( int )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::ttyname" );
			errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::ttyname_r( int, char*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::ttyname_r" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	useconds_t Cunistd::ualarm( useconds_t, useconds_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::ualarm" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Cunistd::unlink( const char* )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::unlink" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
    //[XSI]
	int Cunistd::usleep( useconds_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::usleep" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	pid_t Cunistd::vfork( void )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::vfork" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	ssize_t Cunistd::write( int, const void*, size_t )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::write" );
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	//extensions for UNIX compatibility
	void* Cunistd::sbrk( intptr_t delta )
	{
		__QCS_MEMBER_FCONTEXT( "Cunistd::sbrk" );
		errno = ENOSYS;
		return 0;
	}
	
}//nsBaseCRT
