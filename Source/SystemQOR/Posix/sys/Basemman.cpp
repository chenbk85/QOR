//Basemman.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR/Posix/sys/Basemman.h"
#include <errno.h>
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	__QOR_IMPLEMENT_OCLASS_LUID( Csys_mman );

	//--------------------------------------------------------------------------------
	Csys_mman::Csys_mman()
	{
		__QCS_FCONTEXT("Csys_mman::Csys_mman");
	}

	//--------------------------------------------------------------------------------
	Csys_mman::~Csys_mman()
	{
		__QCS_FCONTEXT("Csys_mman::~Csys_mman");
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::mlock( const void*, size_t )
	{
		__QCS_FCONTEXT("Csys_mman::mlock");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::mlockall( int )
	{
		__QCS_FCONTEXT("Csys_mman::mlockall");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	void* Csys_mman::mmap( void*, size_t, int, int, int, off_t )
	{
		__QCS_FCONTEXT("Csys_mman::mmap");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::mprotect( void*, size_t, int )
	{
		__QCS_FCONTEXT("Csys_mman::mprotect");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::msync( void*, size_t, int )
	{
		__QCS_FCONTEXT("Csys_mman::msync");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::munlock( const void*, size_t )
	{
		__QCS_FCONTEXT("Csys_mman::munlock");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::munlockall( void )
	{
		__QCS_FCONTEXT("Csys_mman::munlockall");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::munmap( void*, size_t )
	{
		__QCS_FCONTEXT("Csys_mman::munmap");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::posix_madvise( void*, size_t, int )
	{
		__QCS_FCONTEXT("Csys_mman::posix_madvise");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::posix_mem_offset( const void* __QCMP_RESTRICT, size_t, off_t* __QCMP_RESTRICT, size_t* __QCMP_RESTRICT, int* __QCMP_RESTRICT )
	{
		__QCS_FCONTEXT("Csys_mman::posix_mem_offset");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::posix_typed_mem_get_info( int, posix_typed_mem_info* )
	{
		__QCS_FCONTEXT("Csys_mman::posix_typed_mem_get_info");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::posix_typed_mem_open( const char*, int, int )
	{
		__QCS_FCONTEXT("Csys_mman::posix_typed_mem_open");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::shm_open( const char*, int, mode_t )
	{
		__QCS_FCONTEXT("Csys_mman::shm_open");
		errno = ENOSYS;
		return 0;
	}

	//--------------------------------------------------------------------------------
	int Csys_mman::shm_unlink( const char* )
	{
		__QCS_FCONTEXT("Csys_mman::shm_unlink");
		errno = ENOSYS;
		return 0;
	}

}//nsBaseCRT
