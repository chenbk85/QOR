// DllMain.cpp : Defines the entry point for a shared library

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "BootStrap.h"
#include "SystemQOR/SharedBootStrap.h"
#include <stdlib.h>

__QCMP_STARTLINKAGE_C

	int __stdcall QORSanShared( void* hDllHandle, unsigned long ulReason, void* pReserved );

	//------------------------------------------------------------------------------
	//The external initial entry point for this SanOS DLL

    //------------------------------------------------------------------------------
	__QCMP_NOINLINE int __stdcall _DllMainCRTStartup( void* hDllHandle, unsigned long ulReason, void* pReserved )
	{
		return QORSanShared( hDllHandle, ulReason, pReserved );
	}

	//------------------------------------------------------------------------------
	//The external initial entry point for this Windows DLL
    int __stdcall DllMainCRTStartup( void* hDllHandle, unsigned long dwReason, void* lpreserved )
    {
        return _DllMainCRTStartup( hDllHandle, dwReason, lpreserved );
    }

	//------------------------------------------------------------------------------
	int __stdcall QORSanShared( void* hDllHandle, unsigned long ulReason, void* pReserved )
	{
		switch( ulReason )
		{
		case CSanQORSharedBootStrap::eProcessAttach:	//Start-up code. A process has loaded this module
			{
				//Create Dll bootstrap object on process global heap and increment process attachment notification
				g_pBootStrap = new CSanQORSharedBootStrap();
				break;
			}

		case CSanQORSharedBootStrap::eProcessDetach:	//Shutdown code. A process is unloading this module
			{
				// decrement process attach notification and free bootstrap object when count goes to 0
				if ( g_pBootStrap && g_pBootStrap->ProcessAttached() && ( g_pBootStrap->ProcessDetach() == 0 ) )
				{
					delete ( reinterpret_cast< CSanQORSharedBootStrap* >( g_pBootStrap ) );//cast ensures we call custom delete matching new above
					g_pBootStrap = 0;
				}
				else
				{
					return 0;	// no prior process attach, just return
				}
				break;
			}
		case CSanQORSharedBootStrap::eThreadAttach:
			{
				break;
			}

		case CSanQORSharedBootStrap::eThreadDetach:
			{
				break;
			}
		}
		return 1;
	}

	//------------------------------------------------------------------------------
	__QCMP_EXPORT int QORinit( void )
	{

		if( !g_pBootStrap )
		{
			g_pBootStrap = new CSanQORSharedBootStrap();
		}

		if( g_pBootStrap )
		{
			g_pBootStrap->InitStatic();
		}

#ifdef	__GNUC__
      __main ();
#endif

		return 0;
	}

__QCMP_ENDLINKAGE_C



