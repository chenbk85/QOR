//BootStrap.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef SANUSREXEBOOT_BOOTSTRAP_H_1
#define SANUSREXEBOOT_BOOTSTRAP_H_1

#include "SanQL/SanQLProcessBootstrap.h"


__QCMP_STARTLINKAGE_C
extern int __cdecl mainCRTStartup( void );
__QCMP_ENDLINKAGE_C

//--------------------------------------------------------------------------------
//This class exists as a container for the parts of the SanOS Process startup and shutdown that must be in the main executable binary module 
//These things cannot be in SanQL because it's packaged as a shared library.
class CBootStrap : public nsSanOS::CProcessBootStrap
{
public:

	//These reserve space in the binary image of the executable for static initializers

	// C initializers
#	pragma __QCMP_DATA_SEGMENT(".CRT$XIA")
static __attribute__((section (".CRT$XIA" ))) InitFunc CInit_a[];
#	pragma __QCMP_DATA_SEGMENT(".CRT$XIZ")
static __attribute__((section (".CRT$XIZ" ))) InitFunc CInit_z[] ;

	// C++ initializers
#	pragma __QCMP_DATA_SEGMENT(".CRT$XCA")
static __attribute__((section (".CRT$XCA" ))) InitFunc CppInit_a[];
#	pragma __QCMP_DATA_SEGMENT(".CRT$XCZ")
static __attribute__((section (".CRT$XCZ" ))) InitFunc CppInit_z[];

#	pragma __QCMP_DATA_SEGMENT()

	CBootStrap();				//Bootstrap construction sets up the framework
	~CBootStrap();
	
	int Execute( void );		//Execute the bootstrap and hence the application

};

#endif//SANUSREXEBOOT_BOOTSTRAP_H_1

