//WinPosumProcess.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Posum Process for Windows

#include "PosumQOR.h"
#include "SystemQOR.h"
#include "PosumQOR/MSWindows/WinProcess.h"
#include "WinQL/Application/Process/WinQLProcess.h"

//--------------------------------------------------------------------------------
namespace nsWinPosum
{
	__QOR_IMPLEMENT_OCLASS_LUID( CProcess );

__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usage: stored in member for use later" );
	//--------------------------------------------------------------------------------
	CProcess::CProcess( ) : nsPosum::CProcess( this )
	{
	}

__QCMP_WARNING_POP

	//--------------------------------------------------------------------------------
	CProcess::~CProcess()
	{
	}

	//--------------------------------------------------------------------------------
	//Get the user Id of the process
	uid_t CProcess::GetEffectiveUserID( void )
	{
		return 0;//	TODO: Replace this with a 'real' user ID
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetID()
	{
		pid_t Result = static_cast< pid_t >( nsWin32::CProcess::GetCurrentId() );
		return Result;
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetGroupID( pid_t ProcessID )
	{
		//TODO: This needs changing to take account of Console Process Groups and Job Objects
		pid_t Result = static_cast< pid_t >( nsWin32::CProcess::GetCurrentId() );
		return Result;
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetSessionLeaderID( pid_t ProcessID )
	{
		//TODO: This needs to take account of Console Process Groups and Job Objects
		pid_t Result = static_cast< pid_t >( nsWin32::CProcess::GetCurrentId() );
		return Result;
	}

}//nsWinPosum
