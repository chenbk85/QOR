//WinQLSystem.cpp

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Windows specific implementation of the generic System concept modelling the operating system.

#include "WinQL/WinQL.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "SystemQOR/System.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/System/WinQLSystem.h"
#include "WinQL/Application/Process/WinQLProcess.h"
#include "CQOR.h"
#include "WinQAPI/Kernel32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	CSystem OperatingSystem;				//Represents the Windows instance

	__QOR_IMPLEMENT_OCLASS_LUID( CSystem );

	//--------------------------------------------------------------------------------
	CSystem::CSystem()
	{
		_WINQ_FCONTEXT( "CSystem::CSystem" );
		Machine.Configure( TheMachine() );
	}

	//--------------------------------------------------------------------------------
	CSystem::~CSystem()
	{
		_WINQ_FCONTEXT( "CSystem::~CSystem" );
	}

	//--------------------------------------------------------------------------------
	void CSystem::SystemInit()
	{		
	}

	//--------------------------------------------------------------------------------
	CSystem& CSystem::Instance( void )
	{
		return OperatingSystem;
	}
/*
	//--------------------------------------------------------------------------------
	__QOR_INTERFACE( __WINQL ) CSystem& System( void )
	{
		return reinterpret_cast< CSystem& >( nsSystemQOR::System() );
	}
*/
	//--------------------------------------------------------------------------------
	/*
	int CSystem::MulDiv( int nNumber, int nNumerator, int nDenominator )
	{
		return nsWinQAPI::CKernel32::MulDiv( nNumber, nNumerator, nDenominator );
	}*/

	//--------------------------------------------------------------------------------
	CKeyboard::refType CSystem::Keyboard(unsigned int uiUnit)
	{
		return CKeyboard::refType( 0 );
		//return Devices(QOR_PP_SHARED_OBJECT_ACCESS).RegisteredLocalInterfaceClasses()[CDeviceInterfaceClassCollection::GUID_DEVINTERFACE_KEYBOARD]->Interfaces()[uiUnit].As< CKeyboard >()->Ref();
	}

	//--------------------------------------------------------------------------------
	CMouse::refType CSystem::Mouse(unsigned int uiUnit)
	{
		return CMouse::refType( 0 );
		//return Devices(QOR_PP_SHARED_OBJECT_ACCESS).RegisteredLocalInterfaceClasses()[CDeviceInterfaceClassCollection::GUID_DEVINTERFACE_MOUSE]->Interfaces()[uiUnit].As< CMouse >()->Ref();
	}

}//nsWin32


