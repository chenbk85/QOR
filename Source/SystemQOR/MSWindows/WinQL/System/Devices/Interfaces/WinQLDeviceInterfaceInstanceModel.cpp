//WinQLDeviceInterfaceInstanceModel.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/WinQLPolicy.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/CodeServices/Text/WinString.h"
#include "WinQL/System/Devices/Interfaces/WinQLDeviceInterface.h"
#include "WinQL/System/Devices/Interfaces/WinQLDeviceInterfaceClass.h"
#include "WinQL/System/Devices/Instances/WinQLDeviceInstance.h"
#include "WinQL/System/Devices/WinQLIODevice.h"
#include "WinQL/Definitions/Constants.h"
#include "WinQL/GUI/Window.h"
#include "WinQL/System/WinQLSystem.h"
#include "WinQAPI/Kernel32.h"
#include "WinQAPI/SetupAPI.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	//--------------------------------------------------------------------------------
	__QOR_IMPLEMENT_OCLASS_LUID( CDeviceInterfaceInstanceModel );

	//--------------------------------------------------------------------------------
	CDeviceInterfaceInstanceModel::CDeviceInterfaceInstanceModel( nsMammut::CModel* pContainer ) : nsMammut::CPropertySet( pContainer )
	,	m_Class			( this, _TXT( "DeviceInterfaceClass" )		, 0				)
	,	m_Instance		( this, _TXT( "DeviceInstance" )			, 0				)
	,	m_bActive		( this, _TXT( "Active" )					, false			)
	,	m_bDefault		( this, _TXT( "Default" )					, false			)
	,	m_bRemoved		( this, _TXT( "Removed" )					, false			)
	,	m_Path			( this, _TXT( "Path" )						, CTString( "" ))
	,	m_ulIndex		( this, _TXT( "Index" )						, (unsigned long)(-1))
	,	m_ulUsageCount	( this, _TXT( "UsageCount" )				, 0				)
	{
	}

	//--------------------------------------------------------------------------------
	CDeviceInterfaceInstanceModel::CDeviceInterfaceInstanceModel( const CDeviceInterfaceInstanceModel& src) : nsMammut::CPropertySet( src.m_pContainer )
	,	m_Class			( src.m_Class			)
	,	m_Instance		( src.m_Instance		)
	,	m_bActive		( src.m_bActive			)
	,	m_bDefault		( src.m_bActive			)
	,	m_bRemoved		( src.m_bRemoved		)
	,	m_Path			( src.m_Path			)
	,	m_ulIndex		( src.m_ulIndex			)
	,	m_ulUsageCount	( src.m_ulUsageCount	)
	{		
	}

	//--------------------------------------------------------------------------------
	CDeviceInterfaceInstanceModel& CDeviceInterfaceInstanceModel::operator = ( const CDeviceInterfaceInstanceModel& src )
	{
		if( &src != this )
		{
			nsMammut::CPropertySet::operator=( src );
		}
		return *this;
	}

	//--------------------------------------------------------------------------------
	CDeviceInterfaceInstanceModel::~CDeviceInterfaceInstanceModel()
	{
	}

}//nsWin32
