//WinQLRegistryHelper.cpp

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/System/Registry/WinQLRegistryHelper.h"
#include "WinQAPI/User32.h"
#include "WinQAPI/AdvAPI32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_OCLASS_LUID( CRegistryHelper );

	//--------------------------------------------------------------------------------
	CRegistryHelper::CRegistryHelper() : m_AdvAPI32Library( CAdvAPI32::Instance() )
	{
        _WINQ_FCONTEXT( "CRegistryHelper::CRegistryHelper" );
	}

	//--------------------------------------------------------------------------------
	CRegistryHelper::~CRegistryHelper()
	{
        _WINQ_FCONTEXT( "CRegistryHelper::~CRegistryHelper" );
	}

	//--------------------------------------------------------------------------------
	long CRegistryHelper::DisablePredefinedCache( void )
	{
        _WINQ_FCONTEXT( "CRegistryHelper::DisablePredefinedCache" );
		long lResult = 0;
		lResult = m_AdvAPI32Library.RegDisablePredefinedCache();
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CRegistryHelper::DisablePredefinedCacheAll( void )
	{
        _WINQ_FCONTEXT( "CRegistryHelper::DisablePredefinedCacheAll" );
		long lResult = 0;
		lResult = m_AdvAPI32Library.RegDisablePredefinedCacheEx();
		return lResult;
	}

	//--------------------------------------------------------------------------------
	unsigned int CRegistryHelper::GetPrivateProfileIntT( const TCHAR* lpAppName, const TCHAR* lpKeyName, int nDefault, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetPrivateProfileInt" );
		UINT uiResult = 0;
		__QOR_PROTECT
		{
			uiResult = CKernel32::GetPrivateProfileInt( lpAppName, lpKeyName, nDefault, lpFileName );
		}__QOR_ENDPROTECT
		return uiResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long CRegistryHelper::GetPrivateProfileSectionT( const TCHAR* lpAppName, TCHAR* lpReturnedString, unsigned long nSize, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetPrivateProfileSection" );
		DWORD dwResult = 0;
		__QOR_PROTECT
		{
			dwResult = CKernel32::GetPrivateProfileSection( lpAppName, lpReturnedString, nSize, lpFileName );
		}__QOR_ENDPROTECT
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long CRegistryHelper::GetPrivateProfileSectionNamesT( TCHAR* lpszReturnBuffer, unsigned long nSize, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetPrivateProfileSectionNames" );
		DWORD dwResult = 0;
		__QOR_PROTECT
		{
			dwResult = CKernel32::GetPrivateProfileSectionNames( lpszReturnBuffer, nSize, lpFileName );
		}__QOR_ENDPROTECT
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long CRegistryHelper::GetPrivateProfileStringT( const TCHAR* lpAppName, const TCHAR* lpKeyName, const TCHAR* lpDefault, TCHAR* lpReturnedString, unsigned long nSize, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetPrivateProfileString" );
		DWORD dwResult = 0;
		__QOR_PROTECT
		{
			dwResult = CKernel32::GetPrivateProfileString( lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName );
		}__QOR_ENDPROTECT
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::GetPrivateProfileStructT( const TCHAR* lpszSection, const TCHAR* lpszKey, void* lpStruct, unsigned int uSizeStruct, const TCHAR* szFile )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetPrivateProfileStruct" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::GetPrivateProfileStruct( lpszSection, lpszKey, lpStruct, uSizeStruct, szFile ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	unsigned int CRegistryHelper::GetProfileIntT( const TCHAR* lpAppName, const TCHAR* lpKeyName, int nDefault )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetProfileInt" );
		UINT uiResult = 0;
		__QOR_PROTECT
		{
			uiResult = CKernel32::GetProfileInt( lpAppName, lpKeyName, nDefault );
		}__QOR_ENDPROTECT
		return uiResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long CRegistryHelper::GetProfileSectionT( const TCHAR* lpAppName, TCHAR* lpReturnedString, unsigned long  nSize )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetProfileSection" );
		DWORD dwResult = 0;
		__QOR_PROTECT
		{
			dwResult = CKernel32::GetProfileSection( lpAppName, lpReturnedString, nSize );
		}__QOR_ENDPROTECT
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	unsigned long CRegistryHelper::GetProfileStringT( const TCHAR* lpAppName, const TCHAR* lpKeyName, const TCHAR* lpDefault, TCHAR* lpReturnedString, unsigned long nSize )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::GetProfileString" );
		DWORD dwResult = 0;
		__QOR_PROTECT
		{
			dwResult = CKernel32::GetProfileString( lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize );
		}__QOR_ENDPROTECT
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::WritePrivateProfileSectionT( const TCHAR* lpAppName, const TCHAR* lpString, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::WritePrivateProfileSection" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::WritePrivateProfileSection( lpAppName, lpString, lpFileName ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::WritePrivateProfileStringT( const TCHAR* lpAppName, const TCHAR* lpKeyName, const TCHAR* lpString, const TCHAR* lpFileName )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::WritePrivateProfileString" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::WritePrivateProfileString( lpAppName, lpKeyName, lpString, lpFileName ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::WritePrivateProfileStructT( const TCHAR* lpszSection, const TCHAR* lpszKey, void* lpStruct, unsigned int uSizeStruct, const TCHAR* szFile )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::WritePrivateProfileStruct" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::WritePrivateProfileStruct( lpszSection, lpszKey, lpStruct, uSizeStruct, szFile ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::WriteProfileSectionT( const TCHAR* lpAppName, const TCHAR* lpString )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::WriteProfileSection" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::WriteProfileSection( lpAppName, lpString ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CRegistryHelper::WriteProfileStringT( const TCHAR* lpAppName, const TCHAR* lpKeyName, const TCHAR* lpString )
	{
		_WINQ_FCONTEXT( "CRegistryHelper::WriteProfileString" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = CKernel32::WriteProfileString( lpAppName, lpKeyName, lpString ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

}//nsWin32
