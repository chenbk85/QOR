//WinQLTime.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQAPI/Kernel32.h"
#include "WinQL/CodeServices/ErrorSystem/Error.h"
#include "WinQL/CodeServices/Time.h"

//------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	// {13DEB21C-1ABB-4B09-82CF-6053BEE8FCB1}
	
	__QOR_IMPLEMENT_OCLASS_GUID( CTimeHelper, 0x13deb21c, 0x1abb, 0x4b09, 0x82, 0xcf, 0x60, 0x53, 0xbe, 0xe8, 0xfc, 0xb1 )

	//--------------------------------------------------------------------------------
	CTimeHelper::CTimeHelper()
	{
		_WINQ_FCONTEXT( "CTimeHelper::CTimeHelper" );
	}

	//--------------------------------------------------------------------------------
	CTimeHelper::~CTimeHelper()
	{
		_WINQ_FCONTEXT( "CTimeHelper::~CTimeHelper" );
	}

	//--------------------------------------------------------------------------------
	void CTimeHelper::GetSystemTimeAsFileTime( nsWin32::LPFILETIME lpSystemTimeAsFileTime )
	{
		_WINQ_FCONTEXT( "CTimeHelper::GetSystemTimeAsFileTime" );
		CKernel32::GetSystemTimeAsFileTime( reinterpret_cast< ::LPFILETIME >( lpSystemTimeAsFileTime ) );
	}
	
	//--------------------------------------------------------------------------------
	unsigned long CTimeHelper::GetTickCount()
	{
		_WINQ_FCONTEXT( "CTimeHelper::GetTickCount" );
		return CKernel32::GetTickCount();
	}
	
}//nsWin32
