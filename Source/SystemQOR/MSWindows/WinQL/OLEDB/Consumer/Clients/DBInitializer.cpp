//DBInitializer.cpp

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/OLEDB/Consumer/Clients/DBInitializer.h"
#include "WinQL/OLEDB/Consumer/Clients/DBProperties.h"
#include "WinQL/GUI/Window.h"
#include "WinQAPI/OLE32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	extern const DBID DB_NULLID;
	extern const GUID DBPROPSET_DBINIT;

	__QOR_IMPLEMENT_OCLASS_LUID( CDBInitializer );

	//--------------------------------------------------------------------------------
	CDBInitializer::CDBInitializer( IUnknown* pIUnknown ) : CComPtr< IDBInitialize >()
	{
		if( pIUnknown )
		{
			pIUnknown->QueryInterface( IDBInitialize_IID, reinterpret_cast<void**>( &m_p ) );
		}
	}

	//--------------------------------------------------------------------------------
	CDBInitializer::~CDBInitializer()
	{
	}

	//--------------------------------------------------------------------------------
	long CDBInitializer::Initialize()
	{
		long hr = E_Fail;
		if( !IsNull() && ( SetProperties() == S_OK ) )
		{
			hr = m_p->Initialize();
		}
		return hr;
	}

	//--------------------------------------------------------------------------------
	void CDBInitializer::AddProperty( DBPROP* pProp, unsigned long dwPropertyID, unsigned short vtType, long lValue, DBPROPOPTIONS dwOptions )
	{
		// Set up the property structure.
		pProp->dwPropertyID = dwPropertyID;
		pProp->dwOptions = dwOptions;
		pProp->dwStatus = DBPROPSTATUS_OK;
		pProp->colid = DB_NULLID;
		pProp->vValue.vt = vtType;

		// Since VARIANT data is a union, we can place the value in any
		// member (except for VT_DECIMAL, which is a union with the whole
		// VARIANT structure -- but we know we're not passing VT_DECIMAL).
		pProp->vValue.lVal = lValue;
	}

	//--------------------------------------------------------------------------------
	long CDBInitializer::SetProperties( void )
	{
		long hr = E_Fail;
		if( !IsNull() )
		{
			CDesktopWindow DesktopWindow;
			const unsigned long cProperties = 2;
			DBPROP rgProperties[ cProperties ];
			DBPROPSET rgPropSets[ 1 ];

			// To initialize the data source object, most providers require some initialization properties to be set by the consumer. 
			// For example, these might include the data source to connect to and the user ID and password to use to establish identity. 
			// We will ask the provider to prompt the user for this required information by setting the following properties:

			AddProperty( &rgProperties[ 0 ], DBPROP_INIT_PROMPT, VT_I2, DBPROMPT_COMPLETE );
			AddProperty( &rgProperties[ 1 ], DBPROP_INIT_HWND, VT_I4, reinterpret_cast< long >( DesktopWindow.Handle()->AsHandle().Use() ) );

			rgPropSets[ 0 ].rgProperties = rgProperties;
			rgPropSets[ 0 ].cProperties = cProperties;
			rgPropSets[ 0 ].guidPropertySet = DBPROPSET_DBINIT;
			CDBProperties DBProperties( m_p );

			hr = DBProperties->SetProperties( 1, rgPropSets );
		}
		return hr;
	}

}//nsWin32
