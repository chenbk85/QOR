//WinQLLayoutController.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/GUI/Controllers/LayoutController.h"
#include "WinQL/GUI/Window.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	/*
	//--------------------------------------------------------------------------------
	bool CLayoutController::ProcessMessage( COSWindow* pWindow, WindowHandle hWnd, Cmp_long_ptr& lResult, unsigned int uMsg, Cmp_uint_ptr wParam, Cmp_long_ptr lParam )
	{
		bool bProcessed = ProcessHook( pWindow, hWnd, lResult, uMsg, wParam, lParam );

		switch ( uMsg )
		{
		case COSWindow::wmSize:
			{
				lResult = pWindow->DefProc( uMsg, wParam, lParam );
				unsigned short wWidth = LoWord( lParam );
				unsigned short wHeight = HiWord( lParam );
				OnSize( wParam, wWidth, wHeight );
				bProcessed = true;					
			}
			break;

		default:
			break;

		}

		return bProcessed;
	}

	//--------------------------------------------------------------------------------
	void CLayoutController::OnSize( unsigned int nType, unsigned short wX, unsigned short wY )
	{
	}
	*/

}//nsWin32
