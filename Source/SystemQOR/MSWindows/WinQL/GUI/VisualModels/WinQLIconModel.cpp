//WinQLIconModel.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Model for Icons

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usage: this stored in members for later usage" )
#include "WinQL/GUI/VisualModels/IconModel.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	__QOR_IMPLEMENT_OCLASS_LUID( CIconModel );

	//--------------------------------------------------------------------------------
	//default construct
	CIconModel::CIconModel( CModel* pContainer ) : nsMammut::CPropertySet( pContainer )
	,	m_Type			(	this, _TXT( "Type" ).str()			,	eByNameIcon		)
	,	m_presbits		(	this, _TXT( "ResourceBits" ).str()	,	0				)
	,	m_dwResSize		(	this, _TXT( "ByteCount" ).str()		,	0				)
	,	m_bIcon			(	this, _TXT( "IsIcon" ).str()			,	true			)
	,	m_dwVersion		(	this, _TXT( "Version" ).str()			,	0				)
	,	m_iHeight		(	this, _TXT( "Height" ).str()			,	32				)
	,	m_iWidth		(	this, _TXT( "Width" ).str()			,	32				)
	,	m_cBitsPerPixel	(	this, _TXT( "BitsPerPixel" ).str()	,	1				)
	,	m_pANDBits		(	this, _TXT( "ANDBits" ).str()			,	0				)
	,	m_pORBits		(	this, _TXT( "ORBits" ).str()			,	0				)
	,	m_cPlanes		(	this, _TXT( "Planes" ).str()			,	1				)
	,	m_uiFlags		(	this, _TXT( "Flags" ).str()			,	0				)
	,	m_szName		(	this, _TXT( "Name" ).str()			,	0				)
	,	m_pModule		(	this, _TXT( "Module" ).str()			,	0				)
	{
	}

	//--------------------------------------------------------------------------------
	//copy construct
	CIconModel::CIconModel( const CIconModel& src ) : nsMammut::CPropertySet( src )
	,	m_Type			( this, src.m_Type )
	,	m_presbits		( this, src.m_presbits )
	,	m_dwResSize		( this, src.m_dwResSize )
	,	m_bIcon			( this, src.m_bIcon )
	,	m_dwVersion		( this, src.m_dwVersion )
	,	m_iHeight		( this, src.m_iHeight )
	,	m_iWidth		( this, src.m_iWidth )
	,	m_cBitsPerPixel	( this, src.m_cBitsPerPixel )
	,	m_pANDBits		( this, src.m_pANDBits )
	,	m_pORBits		( this, src.m_pORBits )
	,	m_cPlanes		( this, src.m_cPlanes )
	,	m_uiFlags		( this, src.m_uiFlags )
	,	m_szName		( this, src.m_szName )
	,	m_pModule		( this, src.m_pModule )
	{
	}

	//--------------------------------------------------------------------------------
	//Construct from a generic PropertySet
	CIconModel::CIconModel( nsMammut::CPropertySet& src ) : CPropertySet( src )
	,	m_Type			( this, _TXT( "Type" ).str()			,	src[ _TXT( "Type" ).str()			] )
	,	m_presbits		( this, _TXT( "ResourceBits" ).str()	,	src[ _TXT( "ResourceBits" ).str()	] )
	,	m_dwResSize		( this, _TXT( "ByteCount" ).str()		,	src[ _TXT( "ByteCount" ).str()	] )	
	,	m_bIcon			( this, _TXT( "IsIcon" ).str()		,	src[ _TXT( "IsIcon" ).str()		] )
	,	m_dwVersion		( this, _TXT( "Version" ).str()		,	src[ _TXT( "Version" ).str()		] )
	,	m_iHeight		( this, _TXT( "Height" ).str()		,	src[ _TXT( "Height" ).str()		] )
	,	m_iWidth		( this, _TXT( "Width" ).str()			,	src[ _TXT( "Width" ).str()		] )	
	,	m_cBitsPerPixel	( this, _TXT( "BitsPerPixel" ).str()	,	src[ _TXT( "BitsPerPixel" ).str()	] )
	,	m_pANDBits		( this, _TXT( "ANDBits" ).str()		,	src[ _TXT( "ANDBits" ).str()		] )
	,	m_pORBits		( this, _TXT( "ORBits" ).str()		,	src[ _TXT( "ORBits" ).str()		] )
	,	m_cPlanes		( this, _TXT( "Planes" ).str()		,	src[ _TXT( "Planes" ).str()		] )
	,	m_uiFlags		( this, _TXT( "Flags" ).str()			,	src[ _TXT( "Flags" ).str()		] )	
	,	m_szName		( this, _TXT( "Name" ).str()			,	src[ _TXT( "Name" ).str()			] )
	,	m_pModule		( this, _TXT( "Module" ).str()		,	src[ _TXT( "Module" ).str()		] )
	{
	}

__QCMP_WARNING_POP
	//--------------------------------------------------------------------------------
	//assign from another CIconModel
	CIconModel& CIconModel::operator = ( const CIconModel& src )
	{
		if( &src != this )
		{
			nsMammut::CPropertySet::operator=( src );
			m_Type = src.m_Type;
			m_presbits = src.m_presbits;
			m_dwResSize = src.m_dwResSize;
			m_bIcon = src.m_bIcon;
			m_dwVersion = src.m_dwVersion;
			m_iHeight = src.m_iHeight;
			m_iWidth = src.m_iWidth;
			m_cBitsPerPixel = src.m_cBitsPerPixel;
			m_pANDBits = src.m_pANDBits;
			m_pORBits = src.m_pORBits;
			m_cPlanes = src.m_cPlanes;
			m_uiFlags = src.m_uiFlags;
			m_szName = src.m_szName;
			m_pModule = src.m_pModule;			
		}
		return *this;
	}

	//--------------------------------------------------------------------------------
	//assign from a generic property set
	CIconModel& CIconModel::operator = ( const nsMammut::CPropertySet& src )
	{
		if( &src != this )
		{
			m_Type				=	src[ _TXT( "Type" ).str()			];
			m_presbits			=	src[ _TXT( "ResourceBits" ).str()	];
			m_dwResSize			=	src[ _TXT( "ByteCount" ).str()	];
			m_bIcon				=	src[ _TXT( "IsIcon" ).str()		];
			m_dwVersion			=	src[ _TXT( "Version" ).str()		];
			m_iHeight			=	src[ _TXT( "Height" ).str()		];
			m_iWidth			=	src[ _TXT( "Width" ).str()		];
			m_cBitsPerPixel		=	src[ _TXT( "BitsPerPixel" ).str()	];
			m_pANDBits			=	src[ _TXT( "ANDBits" ).str()		];
			m_pORBits			=	src[ _TXT( "ORBits" ).str()		];
			m_cPlanes			=	src[ _TXT( "Planes" ).str()		];
			m_uiFlags			=	src[ _TXT( "Flags" ).str()		];
			m_szName			=	src[ _TXT( "Name" ).str()			];
			m_pModule			=	src[ _TXT( "Module" ).str()		];
		}
		return *this;
	}

	//--------------------------------------------------------------------------------
	CIconModel::~CIconModel()
	{
	}

}//nsWin32
