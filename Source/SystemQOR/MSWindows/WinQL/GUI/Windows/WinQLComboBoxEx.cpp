//WinQLComboBoxEx.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usage: stored in member for later use" )
#include "WinQL/GUI/Windows/ComboBoxEx.h"
__QCMP_WARNING_POP

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CComboBoxExClass );

	//--------------------------------------------------------------------------------
	CComboBoxExClass::CComboBoxExClass() : m_ComCtrl32( CCommonCtrl::CCUSEREX_CLASSES )
	{
		_WINQ_FCONTEXT( "CComboBoxExClass::CComboBoxExClass" );
	}

	//--------------------------------------------------------------------------------
	CComboBoxExClass::~CComboBoxExClass()
	{ 
		_WINQ_FCONTEXT( "CComboBoxExClass::~CComboBoxExClass" );
	}

	//--------------------------------------------------------------------------------
	const TCHAR* CComboBoxExClass::Name()
	{ 
		_WINQ_FCONTEXT( "CComboBoxExClass::Name" );
		return _TXT( "ComboBoxEx32" ); 
	}



	//--------------------------------------------------------------------------------
	__QOR_IMPLEMENT_OCLASS_LUID( CComboBoxExFactory );

	//--------------------------------------------------------------------------------
	CComboBoxExFactory::CComboBoxExFactory() : CWindowFactory()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::CComboBoxExFactory" );
	}

	//--------------------------------------------------------------------------------
	CComboBoxEx* CComboBoxExFactory::Create()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::Instance" );
		return new CComboBoxEx;//PreCreateWindow< CComboBoxEx, CComboBoxExClass >();
	}

	//--------------------------------------------------------------------------------
	CComboBoxExFactory::~CComboBoxExFactory()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::~CComboBoxExFactory" );
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetNoEditImage()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetNoEditImage" );
		return GetStyleExBits( CBES_EX_NOEDITIMAGE );
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetNoEditImage( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetNoEditImage" );
		SetStyleExBits( CBES_EX_NOEDITIMAGE, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetNoEditImageIndent()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetNoImageIndent" );
		return GetStyleExBits( CBES_EX_NOEDITIMAGEINDENT );
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetNoEditImageIndent( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetNoImageIndent" );
		SetStyleExBits( CBES_EX_NOEDITIMAGEINDENT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetPathWordBreakProc()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetPathWordBreakProc" );
		return GetStyleExBits( CBES_EX_PATHWORDBREAKPROC );
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetPathWordBreakProc( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetPathWordBreakProc" );
		SetStyleExBits( CBES_EX_PATHWORDBREAKPROC, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetNoSizeLimit()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetNoSizeLimit" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = GetStyleExBits( CBES_EX_NOSIZELIMIT );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetNoSizeLimit( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetNoSizeLimit" );
#if		( _WIN32_IE >= 0x0400 )
		SetStyleExBits( CBES_EX_NOSIZELIMIT, bFlag );
#endif//( _WIN32_IE >= 0x0400 )
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetCaseSensitive()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetCaseSensitive" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = GetStyleExBits( CBES_EX_CASESENSITIVE );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetCaseSensitive( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetCaseSensitive" );
#if		( _WIN32_IE >= 0x0400 )
		SetStyleExBits( CBES_EX_CASESENSITIVE, bFlag );
#endif//( _WIN32_IE >= 0x0400 )
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxExFactory::GetTextEndEllipsis()
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::GetTextEndEllipsis" );
		bool bResult = false;
#if		( _WIN32_WINNT >= 0x0600 )
		bResult = GetStyleExBits( CBES_EX_TEXTENDELLIPSIS );
#endif//( _WIN32_WINNT >= 0x0600 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxExFactory::SetTextEndEllipsis( bool bFlag )
	{
		_WINQ_FCONTEXT( "CComboBoxExFactory::SetTextEndElipsis" );
#if		( _WIN32_WINNT >= 0x0600 )
		SetStyleExBits( CBES_EX_TEXTENDELLIPSIS, bFlag );
#else
		__QCMP_UNREF( bFlag );
#endif//( _WIN32_WINNT >= 0x0600 )
	}




	//--------------------------------------------------------------------------------
	__QOR_IMPLEMENT_OCLASS_LUID( CComboBoxEx );

	//--------------------------------------------------------------------------------
	CComboBoxEx::CComboBoxEx() : CComboBox()
	{	
		_WINQ_FCONTEXT( "CComboBoxEx::CComboBoxEx" );
	}

	//--------------------------------------------------------------------------------
	CComboBoxEx::~CComboBoxEx()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::~CComboBoxEx" );
	}

	//--------------------------------------------------------------------------------
	long CComboBoxEx::OnNotify( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnNotify" );

		long lResult = 0;

		if( pHdr != 0 )
		{
			switch ( pHdr->m_uiCode )
			{
			case CBEN_BEGINEDIT:
				{
					OnBeginEdit( pHdr );
					lResult = 0;
				}
				break;
			case CBEN_DELETEITEM:
				{
					OnDeleteItem( reinterpret_cast< NMCOMBOBOXEX* >( pHdr ) );
					lResult = 0;
				}
				break;
#if		( _WIN32_IE >= 0x0400 )
			case CBEN_DRAGBEGIN:
				{
					OnBeginDrag( reinterpret_cast< NMCBEDRAGBEGIN* >( pHdr ) );
				}
				break;
#endif//( _WIN32_IE >= 0x0400 )
			case CBEN_ENDEDIT:
				{
					lResult = OnEndEdit( reinterpret_cast< NMCBEENDEDIT* >( pHdr ) );
				}
				break;
			case CBEN_GETDISPINFO:
				{
					OnGetDispInfo( reinterpret_cast< NMCOMBOBOXEX* >( pHdr ) );
					lResult = 0;
				}
				break;
			case CBEN_INSERTITEM:
				{
					OnInsertItem( reinterpret_cast< NMCOMBOBOXEX* >( pHdr ) );
				}
				break;
#if		( _WIN32_IE >= 0x0400 )
			case NM_SETCURSOR:
				{
					lResult = OnNotifySetCursor( reinterpret_cast< NMMOUSE* >( pHdr ) );
				}
				break;
#endif//( _WIN32_IE >= 0x0400 )
			}
		}
		return lResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxEx::OnBeginEdit( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnBeginEdit" );
	}

	//--------------------------------------------------------------------------------
	void CComboBoxEx::OnDeleteItem( NMCOMBOBOXEX* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnDeleteItem" );
	}

#if		( _WIN32_IE >= 0x0400 )
	//--------------------------------------------------------------------------------
	void CComboBoxEx::OnBeginDrag( NMCBEDRAGBEGIN* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnBeginDrag" );
	}
#endif//( _WIN32_IE >= 0x0400 )

	//--------------------------------------------------------------------------------
	long CComboBoxEx::OnEndEdit( NMCBEENDEDIT* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnEdit" );
		long lResult = 0;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxEx::OnGetDispInfo( NMCOMBOBOXEX* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnGetDispInfo" );
	}

	//--------------------------------------------------------------------------------
	void CComboBoxEx::OnInsertItem( NMCOMBOBOXEX* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnInsertItem" );
	}

#if		( _WIN32_IE >= 0x0400 )
	//--------------------------------------------------------------------------------
	long CComboBoxEx::OnNotifySetCursor( NMMOUSE* pHdr )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::OnNotifySetCursor" );
		long lResult = 1;
		return lResult;
	}
#endif//( _WIN32_IE >= 0x0400 )

	//--------------------------------------------------------------------------------
	long CComboBoxEx::DeleteItem( Cmp_uint_ptr Index )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::DeleteItem" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_DELETEITEM, Index, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	CComboBox::refType CComboBoxEx::GetComboControl()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetComboControl" );
		CWindowHandle Handle( 0, (void*)( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETCOMBOCONTROL, 0, 0 ) ) );
		return CComboBox::refType( CComboBox::FromHandle( CWindowHandle::refType( &Handle, false ) ), false );
	}

	//--------------------------------------------------------------------------------
	CEdit::refType CComboBoxEx::GetEditControl()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetEditControl" );
		CWindowHandle Handle( 0, (void*)( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETEDITCONTROL, 0, 0 ) ) );
		return CEdit::refType( CEdit::FromHandle( CWindowHandle::refType( &Handle, false ) ), false );
	}

	//--------------------------------------------------------------------------------
	long CComboBoxEx::GetExtendedStyle()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetExtendedStyle" );
		long lResult = 0;
#if		( _WIN32_IE >= 0x0400 )
		lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETEXTENDEDSTYLE, 0, 0 );
#endif//( _WIN32_IE >= 0x0400 )
		return lResult;
	}

	//--------------------------------------------------------------------------------
	CImageList::refType CComboBoxEx::GetImageList()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetImageList" );
		CImageListHandle Handle( 0, (void*)( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETIMAGELIST, 0, 0 ) ) );
		return CImageList::refType( CImageList::FromHandle( CImageListHandle::refType( &Handle , false ) ), false );
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxEx::GetItem( COMBOBOXEXITEM& Item )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetItem" );
		bool bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETITEM, 0, reinterpret_cast< Cmp_long_ptr >( &Item ) ) ? true : false );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxEx::GetUnicodeFormat()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::GetUnicodeFormat" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_GETUNICODEFORMAT, 0, 0 ) ? true : false );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxEx::HasEditChanged()
	{
		_WINQ_FCONTEXT( "CComboBoxEx::HasEditChanged" );
		bool bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_HASEDITCHANGED, 0, 0 ) ? true : false );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	long CComboBoxEx::InsertItem( COMBOBOXEXITEM& Item )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::InsertItem" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_INSERTITEM, 0, reinterpret_cast< Cmp_long_ptr >( &Item ) );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	/*
	void KillFocus()
	{
		m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_KILLCOMBOFOCUS, 0, 0 );
	}

	//--------------------------------------------------------------------------------
	void SetFocus()
	{
		m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETCOMBOFOCUS, 0, 0 );
	}
	*/
	//--------------------------------------------------------------------------------
	long CComboBoxEx::SetExtendedStyle( unsigned long dwMask, unsigned long dwExStyle )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::SetExtendedStyle" );
		long lResult = 0;
#if		( _WIN32_IE >= 0x0400 )
		lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETEXTENDEDSTYLE, static_cast< Cmp_uint_ptr >( dwMask ), static_cast< Cmp_long_ptr >( dwExStyle ) );
#endif//( _WIN32_IE >= 0x0400 )
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CComboBoxEx::SetImageList( CImageListHandle::refType hIml )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::SetImageList" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETIMAGELIST, 0, reinterpret_cast< Cmp_long_ptr >( hIml->Use() ) );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxEx::SetItem( COMBOBOXEXITEM& Item )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::SetItem" );
		bool bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETITEM, 0, reinterpret_cast< Cmp_long_ptr >( &Item ) ) ? true : false );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CComboBoxEx::SetUnicodeFormat( bool bUnicode )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::SetUnicodeFormat" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETUNICODEFORMAT, static_cast< Cmp_uint_ptr >( bUnicode ? 1 : 0 ), 0 ) ? true : false );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CComboBoxEx::SetWindowTheme( wchar_t* wstrStyle )
	{
		_WINQ_FCONTEXT( "CComboBoxEx::SetWindowTheme" );
#if		( _WIN32_WINNT >= 0x0501 )
		m_Win32MsgHandler.Send( Ref(), (unsigned int) CBEM_SETWINDOWTHEME, 0, reinterpret_cast< Cmp_long_ptr >( wstrStyle ) );
#endif//( _WIN32_WINNT >= 0x0501 )
	}


}//nsWin32

