//WinQLStatic.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usafe: stored in member for later use" );
#include "WinQL/GUI/Windows/Static.h"
__QCMP_WARNING_POP

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CStaticClass );

	//--------------------------------------------------------------------------------
	CStaticClass::CStaticClass()
	{ 
		_WINQ_FCONTEXT( "CStaticClass::CStaticClass" );
	}

	//--------------------------------------------------------------------------------
	CStaticClass::~CStaticClass()
	{ 
		_WINQ_FCONTEXT( "CStaticClass::~CStaticClass" );
	}

	//--------------------------------------------------------------------------------
	bool CStaticClass::Preregistered()
	{ 
		_WINQ_FCONTEXT( "CStaticClass::Preregistered" );
		return true; 
	}

	//--------------------------------------------------------------------------------
	const TCHAR* CStaticClass::Name()
	{ 
		_WINQ_FCONTEXT( "CStaticClass::Name" );
		return _TXT( "STATIC" ); 
	}


		
		
		
		
	__QOR_IMPLEMENT_OCLASS_LUID( CStaticFactory );

	//--------------------------------------------------------------------------------
	CStaticFactory::CStaticFactory() : CWindowFactory()
	{
		_WINQ_FCONTEXT( "CStaticFactory::CStaticFactory" );
	}

	//--------------------------------------------------------------------------------
	CStaticFactory::~CStaticFactory()
	{	
		_WINQ_FCONTEXT( "CStaticFactory::~CStaticFactory" );
	}

	//--------------------------------------------------------------------------------
	CStatic* CStaticFactory::Create()
	{
		_WINQ_FCONTEXT( "CStaticFactory::Instance" );
		return new CStatic();
		//return PreCreateWindow< CStatic, CStaticClass >();
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetLeft()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetLeft" );
		return !GetStyleBits( SS_RIGHT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetLeft( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetLeft" );
		SetStyleBits( SS_RIGHT, !bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetCenter()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetCenter" );
		return GetStyleBits( SS_CENTER );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetCenter( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetCenter" );
		SetStyleBits( SS_CENTER, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetRight()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetRight" );
		return GetStyleBits( SS_RIGHT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetRight( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetRight" );
		SetStyleBits( SS_RIGHT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetIcon()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetIcon" );
		return GetStyleBits( SS_ICON );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetIcon( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetIcon" );
		SetStyleBits( SS_ICON, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetBlackRect()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetBlackRect" );
		return GetStyleBits( SS_BLACKRECT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetBlackRect( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetBlackRect" );
		SetStyleBits( SS_BLACKRECT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetGrayRect()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetGrayRect" );
		return GetStyleBits( SS_GRAYRECT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetGrayRect( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetGrayRect" );
		SetStyleBits( SS_GRAYRECT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetWhiteRect()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetWhiteRect" );
		return GetStyleBits( SS_WHITERECT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetWhiteRect( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetWhiteRect" );
		SetStyleBits( SS_WHITERECT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetBlackFrame()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetBlackFrame" );
		return GetStyleBits( SS_BLACKFRAME );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetBlackFrame( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetBlackFrame" );
		SetStyleBits( SS_BLACKFRAME, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetGrayFrame()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetGrayFrame" );
		return GetStyleBits( SS_GRAYFRAME );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetGrayFrame( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetGrayFrame" );
		SetStyleBits( SS_GRAYFRAME, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetWhiteFrame()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetWhiteFrame" );
		return GetStyleBits( SS_WHITEFRAME );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetWhiteFrame( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetWhiteFrame" );
		SetStyleBits( SS_WHITEFRAME, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetUserItem()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetUserItem" );
		return GetStyleBits( SS_USERITEM );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetUserItem( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetUserItem" );
		SetStyleBits( SS_USERITEM, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetSimple()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetSimple" );
		return GetStyleBits( SS_SIMPLE );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetSimple( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetSimple" );
		SetStyleBits( SS_SIMPLE, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetLeftNoWordWrap()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetLeftNoWordWrap" );
		return GetStyleBits( SS_LEFTNOWORDWRAP );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetLeftNoWordWrap( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetLeftNoWordWrap" );
		SetStyleBits( SS_LEFTNOWORDWRAP, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetOwnerDraw()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetOwnerDraw" );
		return GetStyleBits( SS_OWNERDRAW );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetOwnerDraw( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetOwnerDraw" );
		SetStyleBits( SS_OWNERDRAW, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetBitmap()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetBitmap" );
		return GetStyleBits( SS_BITMAP );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetBitmap( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetBitmap" );
		SetStyleBits( SS_BITMAP, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEnhMetaFile()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetEnhMetaFile" );
		return GetStyleBits( SS_ENHMETAFILE );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEnhMetaFile( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEnhMetaFile" );
		SetStyleBits( SS_ENHMETAFILE, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEtchedHorz()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetEtchedHorz" );
		return GetStyleBits( SS_ETCHEDHORZ );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEtchedHorz( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEtchedHorz" );
		SetStyleBits( SS_ETCHEDHORZ, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEtchedVert()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetEtchedVert" );
		return GetStyleBits( SS_ETCHEDVERT );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEtchedVert( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEtchedVert" );
		SetStyleBits( SS_ETCHEDVERT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEtchedFrame()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetEtchedFrame" );
		return GetStyleBits( SS_ETCHEDFRAME );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEtchedFrame( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEtchedFrame" );
		SetStyleBits( SS_ETCHEDFRAME, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetTypeMask()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetTypeMask" );
		return GetStyleBits( SS_TYPEMASK );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetTypeMask( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetTypeMask" );
		SetStyleBits( SS_TYPEMASK, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetRealSize()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetRealSize" );
#if		( WINVER >= 0x0501 )
		return GetStyleBits( SS_REALSIZECONTROL );
#else
		return false;
#endif//( WINVER >= 0x0501 )
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetRealSize( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetRealSize" );
#if		( WINVER >= 0x0501 )
		SetStyleBits( SS_REALSIZECONTROL, bFlag );
#else
		__QCMP_UNREF( bFlag );
#endif//( WINVER >= 0x0501 )
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetNoPrefix()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetNoPrefix" );
		return GetStyleBits( SS_NOPREFIX );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetNoPrefix( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetNoPrefix" );
		SetStyleBits( SS_NOPREFIX, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetNotify()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetNotify" );
		return GetStyleBits( SS_NOTIFY );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetNotify( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetNotify" );
		SetStyleBits( SS_NOTIFY, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetCenterImage()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetCenterImage" );
		return GetStyleBits( SS_CENTERIMAGE );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetCenterImage( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetCenterImage" );
		SetStyleBits( SS_CENTERIMAGE, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetRightJustify()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetRightJustify" );
		return GetStyleBits( SS_RIGHTJUST );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetRightJustify( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetRightJustify" );
		SetStyleBits( SS_RIGHTJUST, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetRealSizeImage()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetRealSizeImage" );
		return GetStyleBits( SS_REALSIZEIMAGE );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetRealSizeImage( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetRealSizeImage" );
		SetStyleBits( SS_REALSIZEIMAGE, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetSunken()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetSunken" );
		return GetStyleBits( SS_SUNKEN );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetSunken( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetSunken" );
		SetStyleBits( SS_SUNKEN, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEditControl()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetEditControl" );
		return GetStyleBits( SS_EDITCONTROL );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEditControl( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEditControl" );
		SetStyleBits( SS_EDITCONTROL, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetEndEllipsis()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetWordEllipsis" );
		return GetStyleBits( SS_ENDELLIPSIS );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetEndEllipsis( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetEndEllipsis" );
		SetStyleBits( SS_ENDELLIPSIS, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetPathEllipsis()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetPathEllipsis" );
		return GetStyleBits( SS_PATHELLIPSIS );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetPathEllipsis( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetPathEllipsis" );
		SetStyleBits( SS_PATHELLIPSIS, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CStaticFactory::GetWordEllipsis()
	{
		_WINQ_FCONTEXT( "CStaticFactory::GetWordEllipsis" );
		return GetStyleBits( SS_WORDELLIPSIS );
	}

	//--------------------------------------------------------------------------------
	void CStaticFactory::SetWordEllipsis( bool bFlag )
	{
		_WINQ_FCONTEXT( "CStaticFactory::SetWordEllipsis" );
		SetStyleBits( SS_WORDELLIPSIS, bFlag );
	}









	//--------------------------------------------------------------------------------
	__QOR_IMPLEMENT_OCLASS_LUID( CStatic );

	//--------------------------------------------------------------------------------
	CStatic::CStatic() : CWinCtrlWindow()
	{	
		_WINQ_FCONTEXT( "CStatic::CStatic" );
	}

	//--------------------------------------------------------------------------------
	CStatic::~CStatic()
	{
		_WINQ_FCONTEXT( "CStatic::~CStatic" );
	}

	//--------------------------------------------------------------------------------
	void CStatic::OnCommand( unsigned short wCtrlID, unsigned short wCode )
	{
		_WINQ_FCONTEXT( "CStatic::OnCommand" );
		switch ( wCode )
		{
		case STN_CLICKED:
			{
				OnClicked();
			}
			break;
		case STN_DBLCLK:
			{
				OnDblClick();
			}
			break;
		case STN_ENABLE:
			{
				OnEnable();
			}
			break;
		case STN_DISABLE:
			{
				OnDisable();
			}
			break;
		}
	}

	//--------------------------------------------------------------------------------
	void CStatic::OnClicked()
	{
		_WINQ_FCONTEXT( "CStatic::OnClicked" );
	}

	//--------------------------------------------------------------------------------
	void CStatic::OnDblClick()
	{
		_WINQ_FCONTEXT( "CStatic::OnDblClick" );
	}

	//--------------------------------------------------------------------------------
	void CStatic::OnEnable()
	{
		_WINQ_FCONTEXT( "CStatic::OnEnable" );
	}

	//--------------------------------------------------------------------------------
	void CStatic::OnDisable()
	{
		_WINQ_FCONTEXT( "CStatic::OnDisable" );
	}

	//--------------------------------------------------------------------------------
	long CStatic::GetIcon()
	{
		_WINQ_FCONTEXT( "CStatic::GetIcon" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) STM_GETICON, 0, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CStatic::GetImage( Cmp_uint_ptr ImageType )
	{
		_WINQ_FCONTEXT( "CStatic::GetImage" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) STM_GETIMAGE, ImageType, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CStatic::SetIcon( CIconHandle::refType hIcon )
	{
		_WINQ_FCONTEXT( "CStatic::SetIcon" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) STM_SETICON, reinterpret_cast< Cmp_uint_ptr >( hIcon->Use() ), 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CStatic::SetImage( Cmp_uint_ptr ImageType, Cmp_long_ptr ImageHandle )
	{
		_WINQ_FCONTEXT( "CStatic::SetImage" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) STM_SETIMAGE, ImageType, ImageHandle );
		return lResult;
	}


}//nsWin32

