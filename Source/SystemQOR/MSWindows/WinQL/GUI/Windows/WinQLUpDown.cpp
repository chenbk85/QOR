//WinQLUpDown.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"
__QCMP_WARNING_PUSH
__QCMP_WARNING_DISABLE( __QCMP_WARN_THIS_USED_IN_BASE_INIT_LIST, "Safe usafe: stored in member for later use" );
#include "WinQL/GUI/Windows/UpDown.h"
__QCMP_WARNING_POP

//--------------------------------------------------------------------------------
namespace nsWin32
{
	__QOR_IMPLEMENT_OCLASS_LUID( CUpDownClass );

	//--------------------------------------------------------------------------------
	CUpDownClass::CUpDownClass() : CCommonCtrlClass( CCommonCtrl::CCDATE_CLASSES, _TXT( "msctls_updown32" ) )
	{
		_WINQ_FCONTEXT( "CUpDownClass::CUpDownClass" );
	}

	//--------------------------------------------------------------------------------
	CUpDownClass::~CUpDownClass()
	{
		_WINQ_FCONTEXT( "CUpDownClass::~CUpDownClass" );
	}





	__QOR_IMPLEMENT_OCLASS_LUID( CUpDownFactory );

	//--------------------------------------------------------------------------------
	CUpDownFactory::CUpDownFactory() : CCommonCtrlFactory< CUpDown >()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::CUpDownFactory" );
	}

	//--------------------------------------------------------------------------------
	CUpDownFactory::~CUpDownFactory()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::~CUpDownFactory" );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetWrap()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetWrap" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_WRAP );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetWrap( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetWrap" );
		SetStyleBits( UDS_WRAP, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetBuddyInt()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetBuddyInt" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_SETBUDDYINT );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetBuddyInt( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetBuddyInt" );
		SetStyleBits( UDS_SETBUDDYINT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetAlignRight()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetAlignRight" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_ALIGNRIGHT );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetAlignRight( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetAlignRight" );
		SetStyleBits( UDS_ALIGNRIGHT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetAlignLeft()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetAlignLeft" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_ALIGNLEFT );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetAlignLeft( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetAlignLeft" );
		SetStyleBits( UDS_ALIGNLEFT, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetAutoBuddy()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetAutoBuddy" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_AUTOBUDDY );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetAutoBuddy( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetAutoBuddy" );
		SetStyleBits( UDS_AUTOBUDDY, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetArrowKeys()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetArrowKeys" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_ARROWKEYS );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetArrowKeys( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetArrowKeys" );
		SetStyleBits( UDS_ARROWKEYS, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetHorizontal()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetHorizotal" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_HORZ );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetHorizontal( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetHorizontal" );
		SetStyleBits( UDS_HORZ, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetNoThousands()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetNoThousands" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_NOTHOUSANDS );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetNoThousands( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetNoThousands" );
		SetStyleBits( UDS_NOTHOUSANDS, bFlag );
	}

	//--------------------------------------------------------------------------------
	bool CUpDownFactory::GetHotTrack()
	{
		_WINQ_FCONTEXT( "CUpDownFactory::GetHotTrack" );
		bool bResult = false;
		bResult = GetStyleBits( UDS_HOTTRACK );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDownFactory::SetHotTrack( bool bFlag )
	{
		_WINQ_FCONTEXT( "CUpDownFactory::SetHotTrack" );
		SetStyleBits( UDS_HOTTRACK, bFlag );
	}





	__QOR_IMPLEMENT_OCLASS_LUID( CUpDown );

	//--------------------------------------------------------------------------------
	CUpDown::CUpDown() : CWinCtrlWindow()
	{				
		_WINQ_FCONTEXT( "CUpDown::CUpDown" );
	}

	//--------------------------------------------------------------------------------
	CUpDown::~CUpDown()
	{
		_WINQ_FCONTEXT( "CUpDown::~CUpDown" );
	}

	//--------------------------------------------------------------------------------
	long CUpDown::OnNotify( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CUpDown::OnNotify" );

		long lResult = 0;

		if( pHdr != 0 )
		{
			switch ( pHdr->m_uiCode )
			{
#if		( _WIN32_IE >= 0x0400 )
			case NM_RELEASEDCAPTURE:
				{
					OnReleasedCapture( pHdr );
				}
				break;
#endif//( _WIN32_IE >= 0x0400 )
			case UDN_DELTAPOS:
				{
					lResult = static_cast< long >( OnDeltaPos( reinterpret_cast< NMUPDOWN* >( pHdr ) ) ? 0 : 1 );
				}
				break;
			default:
				{
					lResult = OnUnknownNotification( pHdr );
				}
				break;
			}
		}
		return lResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDown::OnReleasedCapture( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CUpDown::OnReleasedCapture" );
		QOR_PP_UNREF( pHdr );
	}

	//--------------------------------------------------------------------------------		
	bool CUpDown::OnDeltaPos( NMUPDOWN* pHdr )
	{
		_WINQ_FCONTEXT( "CUpDown::OnDeltaPos" );
		QOR_PP_UNREF( pHdr );
		return true;
	}

	//--------------------------------------------------------------------------------		
	long CUpDown::OnUnknownNotification( NotificationMessageHeader* pHdr )
	{
		_WINQ_FCONTEXT( "CUpDown::OnUnknownNotification" );
		QOR_PP_UNREF( pHdr );
		long lResult = 0;
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::GetAccelerators( int iSize, UDACCEL* paAccel )
	{				
		_WINQ_FCONTEXT( "CUpDown::GetAccelerators" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETACCEL, 
			static_cast< Cmp_uint_ptr >( iSize ), reinterpret_cast< Cmp_long_ptr >( paAccel ) );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::GetBase()
	{				
		_WINQ_FCONTEXT( "CUpDown::GetBase" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETBASE, 0, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	COSWindow::refType CUpDown::GetBuddy()
	{				
		_WINQ_FCONTEXT( "CUpDown::GetBuddy" );
		CWindowHandle hBuddy( 0, (void*)( m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETBUDDY, 0, 0 ) ) );
		return COSWindow::FromHandle( CWindowHandle::refType( &hBuddy ) );
	}

	//--------------------------------------------------------------------------------
	long CUpDown::GetPos()
	{				
		_WINQ_FCONTEXT( "CUpDown::GetPos" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETPOS, 0, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::GetPos32( int* pbError )
	{				
		_WINQ_FCONTEXT( "CUpDown::GetPos32" );
		long lResult = 0;
#if		( _WIN32_IE >= 0x0500 )
		lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETPOS32, 0, 
			reinterpret_cast< Cmp_long_ptr >( pbError ) );
#else
		__QCMP_UNREF( pbError );
#endif//( _WIN32_IE >= 0x0500 )
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::GetRange()
	{				
		_WINQ_FCONTEXT( "CUpDown::GetRange" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETRANGE, 0, 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	void CUpDown::GetRange32( int* pLow, int* pHigh )
	{				
		_WINQ_FCONTEXT( "CUpDown::GetRange32" );
#if		( _WIN32_IE >= 0x0400 )
		m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETRANGE32, 
			reinterpret_cast< Cmp_uint_ptr >( pLow ), reinterpret_cast< Cmp_long_ptr >( pHigh ) );
#else
		__QCMP_UNREF( pLow );
		__QCMP_UNREF( pHigh );
#endif//( _WIN32_IE >= 0x0400 )
	}

	//--------------------------------------------------------------------------------
	bool CUpDown::GetUnicodeFormat()
	{				
		_WINQ_FCONTEXT( "CUpDown::GetUnicodeFormat" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_GETUNICODEFORMAT, 0, 0 ) ? true : false );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CUpDown::SetAccelerators( UDACCEL* paAccel, int iSize )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetAccelerators" );
		bool bResult = false;
		bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETACCEL, 
			static_cast< Cmp_uint_ptr >( iSize ), reinterpret_cast< Cmp_long_ptr >( paAccel ) ) ? true : false );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::SetBase( int nSize )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetBase" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETBASE, 
			static_cast< Cmp_uint_ptr >( nSize ), 0 );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	COSWindow::refType CUpDown::SetBuddy( COSWindow::refType BuddyWindow )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetBuddy" );
		CWindowHandle Handle( 0, (void*)( m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETBUDDY, reinterpret_cast< Cmp_uint_ptr >( BuddyWindow->Handle()->Use() ), 0 ) ) );
		return COSWindow::FromHandle( CWindowHandle::refType( &Handle ) );
	}

	//--------------------------------------------------------------------------------
	long CUpDown::SetPos( short nPos )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetPos" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETPOS, 
			0, MakeLong( nPos, 0 ) );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::SetPos32( int nPos )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetPos32" );
		long lResult = 0;
#if		( _WIN32_IE >= 0x0500 )
		lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETPOS32, 
			0, static_cast< Cmp_long_ptr >( nPos ) );
#else
		__QCMP_UNREF( nPos );
#endif//( _WIN32_IE >= 0x0500 )
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::SetRange( short nUpper, short nLower )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetRange" );
		long lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETRANGE, 
			0, MakeLong( nUpper, nLower ) );
		return lResult;
	}

	//--------------------------------------------------------------------------------
	long CUpDown::SetRange32( int iLow, int iHigh )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetRange32" );
		long lResult = 0;
#if		( _WIN32_IE >= 0x0400 )
		lResult = m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETRANGE32, 
			static_cast< Cmp_uint_ptr >( iLow ), static_cast< Cmp_long_ptr >( iHigh ) );
#else
		__QCMP_UNREF( iHigh );
		__QCMP_UNREF( iLow );
#endif//( _WIN32_IE >= 0x0400 )
		return lResult;
	}

	//--------------------------------------------------------------------------------
	bool CUpDown::SetUnicodeFormat( bool bUnicode )
	{				
		_WINQ_FCONTEXT( "CUpDown::SetUnicodeFormat" );
		bool bResult = false;
#if		( _WIN32_IE >= 0x0400 )
		bResult = ( m_Win32MsgHandler.Send( Ref(), (unsigned int) UDM_SETUNICODEFORMAT, 
			static_cast< Cmp_uint_ptr >( bUnicode ? 1 : 0 ), 0 ) ? true : false );
#else
		__QCMP_UNREF( bUnicode );
#endif//( _WIN32_IE >= 0x0400 )
		return bResult;
	}

}//nsWin32

