//WinQLDeviceFile.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/ErrorSystem/Error.h"
#include "WinQL/CodeServices/WinString.h"
#include "WinQL/DeviceIO/DeviceFile.h"
#include "WinQL/Definitions/Constants.h"
#include "WinQAPI/Kernel32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_OCLASS_LUID( CDeviceFile );

	//--------------------------------------------------------------------------------
	CDeviceFile::~CDeviceFile()
	{
		_WINQ_FCONTEXT( "CDeviceFile::~CDeviceFile" );
	}

	//--------------------------------------------------------------------------------
	nsCodeQOR::CTCRef< CDeviceHandle > CDeviceFile::Handle()
	{
		_WINQ_FCONTEXT( "CDeviceFile::Handle" );
		nsCodeQOR::CTCRef< CDeviceHandle > crefHandle( &m_Handle );
		return crefHandle;
	}

	//protected:
	//--------------------------------------------------------------------------------
	CDeviceFile::CDeviceFile()
	{
		_WINQ_FCONTEXT( "CDeviceFile::CDeviceFile" );
	}

	//--------------------------------------------------------------------------------
	CDeviceFile::CDeviceFile( const TCHAR* pDeviceName, unsigned long dwDesiredAccess, unsigned long dwShareMode, unsigned long dwFlagsAndAttributes )
	{
		_WINQ_FCONTEXT( "CDeviceFile::CDeviceFile" );
		__QOR_PROTECT
		{				
			m_Handle.Attach( new CDeviceHandle( CKernel32::CreateFile( pDeviceName, dwDesiredAccess, dwShareMode, 0, OPEN_EXISTING, dwFlagsAndAttributes, 0 ) ) );
		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	CDeviceFile::CDeviceFile( CDeviceHandle& hExisting )
	{
		_WINQ_FCONTEXT( "CDeviceFile::CDeviceFile" );

		m_Handle = hExisting;
	}

}//nsWin32
