//WinQLCharData.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/Locale/WinQLCharData.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	const unsigned short* CharData::getCType(void)
	{
		return CharData::sc_usCType;
	}

	__QOR_INTERFACE(__WINQL) const unsigned short CharData::sc_usWCType[] =
	{
		//0,                              // -1 EOF 
		E_CONTROL ,                      // 00 (NUL) 
		E_CONTROL ,                      // 01 (SOH) 
		E_CONTROL ,                      // 02 (STX) 
		E_CONTROL ,                      // 03 (ETX) 
		E_CONTROL ,                      // 04 (EOT) 
		E_CONTROL ,                      // 05 (ENQ) 
		E_CONTROL ,                      // 06 (ACK) 
		E_CONTROL ,                      // 07 (BEL) 
		E_CONTROL ,                      // 08 (BS)  
		E_SPACE | E_CONTROL | E_BLANK ,	// 09 (HT)  
		E_SPACE | E_CONTROL ,			// 0A (LF)  
		E_SPACE | E_CONTROL ,			// 0B (VT)  
		E_SPACE | E_CONTROL ,			// 0C (FF)  
		E_SPACE | E_CONTROL ,			// 0D (CR)  
		E_CONTROL ,                      // 0E (SI)  
		E_CONTROL ,                      // 0F (SO)  
		E_CONTROL ,                      // 10 (DLE) 
		E_CONTROL ,                      // 11 (DC1) 
		E_CONTROL ,                      // 12 (DC2) 
		E_CONTROL ,                      // 13 (DC3) 
		E_CONTROL ,                      // 14 (DC4) 
		E_CONTROL ,                      // 15 (NAK) 
		E_CONTROL ,                      // 16 (SYN) 
		E_CONTROL ,                      // 17 (ETB) 
		E_CONTROL ,                      // 18 (CAN) 
		E_CONTROL ,                      // 19 (EM)  
		E_CONTROL ,                      // 1A (SUB) 
		E_CONTROL ,                      // 1B (ESC) 
		E_CONTROL ,                      // 1C (FS)  
		E_CONTROL ,                      // 1D (GS)  
		E_CONTROL ,                      // 1E (RS)  
		E_CONTROL ,                      // 1F (US)  
		E_SPACE | E_BLANK ,               // 20 SPACE 
		E_PUNCT ,                        // 21 !     
		E_PUNCT ,                        // 22 "     
		E_PUNCT ,                        // 23 #     
		E_PUNCT ,                        // 24 $     
		E_PUNCT ,                        // 25 %     
		E_PUNCT ,                        // 26 &     
		E_PUNCT ,                        // 27 '     
		E_PUNCT ,                        // 28 (     
		E_PUNCT ,                        // 29 )     
		E_PUNCT ,                        // 2A *     
		E_PUNCT ,                        // 2B +     
		E_PUNCT ,                        // 2C ,     
		E_PUNCT ,                        // 2D -     
		E_PUNCT ,                        // 2E .     
		E_PUNCT ,                        // 2F /     
		E_DIGIT | E_HEX ,                 // 30 0     
		E_DIGIT | E_HEX ,                 // 31 1     
		E_DIGIT | E_HEX ,                 // 32 2     
		E_DIGIT | E_HEX ,                 // 33 3     
		E_DIGIT | E_HEX ,                 // 34 4     
		E_DIGIT | E_HEX ,                 // 35 5     
		E_DIGIT | E_HEX ,                 // 36 6     
		E_DIGIT | E_HEX ,                 // 37 7     
		E_DIGIT | E_HEX ,                 // 38 8     
		E_DIGIT | E_HEX ,                 // 39 9     
		E_PUNCT ,                        // 3A :     
		E_PUNCT ,                        // 3B ;     
		E_PUNCT ,                        // 3C <     
		E_PUNCT ,                        // 3D =     
		E_PUNCT ,                        // 3E >     
		E_PUNCT ,                        // 3F ?     
		E_PUNCT ,                        // 40 @     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 41 A     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 42 B     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 43 C     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 44 D     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 45 E     
		E_UPPER | E_HEX | E_C1_ALPHA ,      // 46 F     
		E_UPPER | E_C1_ALPHA ,             // 47 G     
		E_UPPER | E_C1_ALPHA ,             // 48 H     
		E_UPPER | E_C1_ALPHA ,             // 49 I     
		E_UPPER | E_C1_ALPHA ,             // 4A J     
		E_UPPER | E_C1_ALPHA ,             // 4B K     
		E_UPPER | E_C1_ALPHA ,             // 4C L     
		E_UPPER | E_C1_ALPHA ,             // 4D M     
		E_UPPER | E_C1_ALPHA ,             // 4E N     
		E_UPPER | E_C1_ALPHA ,             // 4F O     
		E_UPPER | E_C1_ALPHA ,             // 50 P     
		E_UPPER | E_C1_ALPHA ,             // 51 Q     
		E_UPPER | E_C1_ALPHA ,             // 52 R     
		E_UPPER | E_C1_ALPHA ,             // 53 S     
		E_UPPER | E_C1_ALPHA ,             // 54 T     
		E_UPPER | E_C1_ALPHA ,             // 55 U     
		E_UPPER | E_C1_ALPHA ,             // 56 V     
		E_UPPER | E_C1_ALPHA ,             // 57 W     
		E_UPPER | E_C1_ALPHA ,             // 58 X     
		E_UPPER | E_C1_ALPHA ,             // 59 Y     
		E_UPPER | E_C1_ALPHA ,             // 5A Z     
		E_PUNCT ,                        // 5B [     
		E_PUNCT ,                        // 5C \     
		E_PUNCT ,                        // 5D ]     
		E_PUNCT ,                        // 5E ^     
		E_PUNCT ,                        // 5F _     
		E_PUNCT ,                        // 60 `     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 61 a     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 62 b     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 63 c     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 64 d     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 65 e     
		E_LOWER | E_HEX | E_C1_ALPHA ,      // 66 f     
		E_LOWER | E_C1_ALPHA ,             // 67 g     
		E_LOWER | E_C1_ALPHA ,             // 68 h     
		E_LOWER | E_C1_ALPHA ,             // 69 i     
		E_LOWER | E_C1_ALPHA ,             // 6A j     
		E_LOWER | E_C1_ALPHA ,             // 6B k     
		E_LOWER | E_C1_ALPHA ,             // 6C l     
		E_LOWER | E_C1_ALPHA ,             // 6D m     
		E_LOWER | E_C1_ALPHA ,             // 6E n     
		E_LOWER | E_C1_ALPHA ,             // 6F o     
		E_LOWER | E_C1_ALPHA ,             // 70 p     
		E_LOWER | E_C1_ALPHA ,             // 71 q     
		E_LOWER | E_C1_ALPHA ,             // 72 r     
		E_LOWER | E_C1_ALPHA ,             // 73 s     
		E_LOWER | E_C1_ALPHA ,             // 74 t     
		E_LOWER | E_C1_ALPHA ,             // 75 u     
		E_LOWER | E_C1_ALPHA ,             // 76 v     
		E_LOWER | E_C1_ALPHA ,             // 77 w     
		E_LOWER | E_C1_ALPHA ,             // 78 x     
		E_LOWER | E_C1_ALPHA ,             // 79 y     
		E_LOWER | E_C1_ALPHA ,             // 7A z     
		E_PUNCT ,                        // 7B {     
		E_PUNCT ,                        // 7C |     
		E_PUNCT ,                        // 7D }     
		E_PUNCT ,                        // 7E ~     
		E_CONTROL ,                      // 7F (DEL) 
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_CONTROL ,
		E_SPACE | E_BLANK ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_DIGIT | E_PUNCT ,
		E_DIGIT | E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_DIGIT | E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_PUNCT ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_PUNCT ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_PUNCT ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_LOWER | E_C1_ALPHA ,
		E_UPPER | E_C1_ALPHA
	};

	
	__QOR_INTERFACE(__WINQL) const unsigned short CharData::sc_usCType[384] =
	{
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0,
			0,                      // -1 EOF   
			E_CONTROL,               // 00 (NUL) 
			E_CONTROL,               // 01 (SOH) 
			E_CONTROL,               // 02 (STX) 
			E_CONTROL,               // 03 (ETX) 
			E_CONTROL,               // 04 (EOT) 
			E_CONTROL,               // 05 (ENQ) 
			E_CONTROL,               // 06 (ACK) 
			E_CONTROL,               // 07 (BEL) 
			E_CONTROL,               // 08 (BS)  
			E_SPACE+E_CONTROL,        // 09 (HT)  
			E_SPACE+E_CONTROL,        // 0A (LF)  
			E_SPACE+E_CONTROL,        // 0B (VT)  
			E_SPACE+E_CONTROL,        // 0C (FF)  
			E_SPACE+E_CONTROL,        // 0D (CR)  
			E_CONTROL,               // 0E (SI)  
			E_CONTROL,               // 0F (SO)  
			E_CONTROL,               // 10 (DLE) 
			E_CONTROL,               // 11 (DC1) 
			E_CONTROL,               // 12 (DC2) 
			E_CONTROL,               // 13 (DC3) 
			E_CONTROL,               // 14 (DC4) 
			E_CONTROL,               // 15 (NAK) 
			E_CONTROL,               // 16 (SYN) 
			E_CONTROL,               // 17 (ETB) 
			E_CONTROL,               // 18 (CAN) 
			E_CONTROL,               // 19 (EM)  
			E_CONTROL,               // 1A (SUB) 
			E_CONTROL,               // 1B (ESC) 
			E_CONTROL,               // 1C (FS)  
			E_CONTROL,               // 1D (GS)  
			E_CONTROL,               // 1E (RS)  
			E_CONTROL,               // 1F (US)  
			E_SPACE+E_BLANK,          // 20 SPACE 
			E_PUNCT,                 // 21 !     
			E_PUNCT,                 // 22 "     
			E_PUNCT,                 // 23 #     
			E_PUNCT,                 // 24 $     
			E_PUNCT,                 // 25 %     
			E_PUNCT,                 // 26 &     
			E_PUNCT,                 // 27 '     
			E_PUNCT,                 // 28 (     
			E_PUNCT,                 // 29 )     
			E_PUNCT,                 // 2A *     
			E_PUNCT,                 // 2B +     
			E_PUNCT,                 // 2C ,     
			E_PUNCT,                 // 2D -     
			E_PUNCT,                 // 2E .     
			E_PUNCT,                 // 2F /     
			E_DIGIT+E_HEX,            // 30 0     
			E_DIGIT+E_HEX,            // 31 1     
			E_DIGIT+E_HEX,            // 32 2     
			E_DIGIT+E_HEX,            // 33 3     
			E_DIGIT+E_HEX,            // 34 4     
			E_DIGIT+E_HEX,            // 35 5     
			E_DIGIT+E_HEX,            // 36 6     
			E_DIGIT+E_HEX,            // 37 7     
			E_DIGIT+E_HEX,            // 38 8     
			E_DIGIT+E_HEX,            // 39 9     
			E_PUNCT,                 // 3A :     
			E_PUNCT,                 // 3B ;     
			E_PUNCT,                 // 3C <     
			E_PUNCT,                 // 3D =     
			E_PUNCT,                 // 3E >     
			E_PUNCT,                 // 3F ?     
			E_PUNCT,                 // 40 @     
			E_UPPER+E_HEX,            // 41 A     
			E_UPPER+E_HEX,            // 42 B     
			E_UPPER+E_HEX,            // 43 C     
			E_UPPER+E_HEX,            // 44 D     
			E_UPPER+E_HEX,            // 45 E     
			E_UPPER+E_HEX,            // 46 F     
			E_UPPER,                 // 47 G     
			E_UPPER,                 // 48 H     
			E_UPPER,                 // 49 I     
			E_UPPER,                 // 4A J     
			E_UPPER,                 // 4B K     
			E_UPPER,                 // 4C L     
			E_UPPER,                 // 4D M     
			E_UPPER,                 // 4E N     
			E_UPPER,                 // 4F O     
			E_UPPER,                 // 50 P     
			E_UPPER,                 // 51 Q     
			E_UPPER,                 // 52 R     
			E_UPPER,                 // 53 S     
			E_UPPER,                 // 54 T     
			E_UPPER,                 // 55 U     
			E_UPPER,                 // 56 V     
			E_UPPER,                 // 57 W     
			E_UPPER,                 // 58 X     
			E_UPPER,                 // 59 Y     
			E_UPPER,                 // 5A Z     
			E_PUNCT,                 // 5B [     
			E_PUNCT,                 // 5C \     
			E_PUNCT,                 // 5D ]     
			E_PUNCT,                 // 5E ^     
			E_PUNCT,                 // 5F _     
			E_PUNCT,                 // 60 `     
			E_LOWER+E_HEX,            // 61 a     
			E_LOWER+E_HEX,            // 62 b     
			E_LOWER+E_HEX,            // 63 c     
			E_LOWER+E_HEX,            // 64 d     
			E_LOWER+E_HEX,            // 65 e     
			E_LOWER+E_HEX,            // 66 f     
			E_LOWER,                 // 67 g     
			E_LOWER,                 // 68 h     
			E_LOWER,                 // 69 i     
			E_LOWER,                 // 6A j     
			E_LOWER,                 // 6B k     
			E_LOWER,                 // 6C l     
			E_LOWER,                 // 6D m     
			E_LOWER,                 // 6E n     
			E_LOWER,                 // 6F o     
			E_LOWER,                 // 70 p     
			E_LOWER,                 // 71 q     
			E_LOWER,                 // 72 r     
			E_LOWER,                 // 73 s     
			E_LOWER,                 // 74 t     
			E_LOWER,                 // 75 u     
			E_LOWER,                 // 76 v     
			E_LOWER,                 // 77 w     
			E_LOWER,                 // 78 x     
			E_LOWER,                 // 79 y     
			E_LOWER,                 // 7A z     
			E_PUNCT,                 // 7B {     
			E_PUNCT,                 // 7C |     
			E_PUNCT,                 // 7D }     
			E_PUNCT,                 // 7E ~     
			E_CONTROL,               // 7F (DEL) 
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
			0,0,0,0,0,0,0,0,0,0,0,0,0,
	};
	
	//--------------------------------------------------------------------------------
	__QOR_INTERFACE(__WINQL) const unsigned char CharData::sc_ucnewclmap[384] =
	{
			0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
			0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
			0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
			0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
			0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
			0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
			0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
			0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
			0x00,   /* 00 (NUL) */
			0x01,   /* 01 (SOH) */
			0x02,   /* 02 (STX) */
			0x03,   /* 03 (ETX) */
			0x04,   /* 04 (EOT) */
			0x05,   /* 05 (ENQ) */
			0x06,   /* 06 (ACK) */
			0x07,   /* 07 (BEL) */
			0x08,   /* 08 (BS)  */
			0x09,   /* 09 (HT)  */
			0x0A,   /* 0A (LF)  */
			0x0B,   /* 0B (VT)  */
			0x0C,   /* 0C (FF)  */
			0x0D,   /* 0D (CR)  */
			0x0E,   /* 0E (SI)  */
			0x0F,   /* 0F (SO)  */
			0x10,   /* 10 (DLE) */
			0x11,   /* 11 (DC1) */
			0x12,   /* 12 (DC2) */
			0x13,   /* 13 (DC3) */
			0x14,   /* 14 (DC4) */
			0x15,   /* 15 (NAK) */
			0x16,   /* 16 (SYN) */
			0x17,   /* 17 (ETB) */
			0x18,   /* 18 (CAN) */
			0x19,   /* 19 (EM)  */
			0x1A,   /* 1A (SUB) */
			0x1B,   /* 1B (ESC) */
			0x1C,   /* 1C (FS)  */
			0x1D,   /* 1D (GS)  */
			0x1E,   /* 1E (RS)  */
			0x1F,   /* 1F (US)  */
			0x20,   /* 20 SPACE */
			0x21,   /* 21 !     */
			0x22,   /* 22 "     */
			0x23,   /* 23 #     */
			0x24,   /* 24 $     */
			0x25,   /* 25 %     */
			0x26,   /* 26 &     */
			0x27,   /* 27 '     */
			0x28,   /* 28 (     */
			0x29,   /* 29 )     */
			0x2A,   /* 2A *     */
			0x2B,   /* 2B +     */
			0x2C,   /* 2C ,     */
			0x2D,   /* 2D -     */
			0x2E,   /* 2E .     */
			0x2F,   /* 2F /     */
			0x30,   /* 30 0     */
			0x31,   /* 31 1     */
			0x32,   /* 32 2     */
			0x33,   /* 33 3     */
			0x34,   /* 34 4     */
			0x35,   /* 35 5     */
			0x36,   /* 36 6     */
			0x37,   /* 37 7     */
			0x38,   /* 38 8     */
			0x39,   /* 39 9     */
			0x3A,   /* 3A :     */
			0x3B,   /* 3B ;     */
			0x3C,   /* 3C <     */
			0x3D,   /* 3D =     */
			0x3E,   /* 3E >     */
			0x3F,   /* 3F ?     */
			0x40,   /* 40 @     */
			0x61,   /* 41 A     */
			0x62,   /* 42 B     */
			0x63,   /* 43 C     */
			0x64,   /* 44 D     */
			0x65,   /* 45 E     */
			0x66,   /* 46 F     */
			0x67,   /* 47 G     */
			0x68,   /* 48 H     */
			0x69,   /* 49 I     */
			0x6A,   /* 4A J     */
			0x6B,   /* 4B K     */
			0x6C,   /* 4C L     */
			0x6D,   /* 4D M     */
			0x6E,   /* 4E N     */
			0x6F,   /* 4F O     */
			0x70,   /* 50 P     */
			0x71,   /* 51 Q     */
			0x72,   /* 52 R     */
			0x73,   /* 53 S     */
			0x74,   /* 54 T     */
			0x75,   /* 55 U     */
			0x76,   /* 56 V     */
			0x77,   /* 57 W     */
			0x78,   /* 58 X     */
			0x79,   /* 59 Y     */
			0x7A,   /* 5A Z     */
			0x5B,   /* 5B [     */
			0x5C,   /* 5C \     */
			0x5D,   /* 5D ]     */
			0x5E,   /* 5E ^     */
			0x5F,   /* 5F _     */
			0x60,   /* 60 `     */
			0x61,   /* 61 a     */
			0x62,   /* 62 b     */
			0x63,   /* 63 c     */
			0x64,   /* 64 d     */
			0x65,   /* 65 e     */
			0x66,   /* 66 f     */
			0x67,   /* 67 g     */
			0x68,   /* 68 h     */
			0x69,   /* 69 i     */
			0x6A,   /* 6A j     */
			0x6B,   /* 6B k     */
			0x6C,   /* 6C l     */
			0x6D,   /* 6D m     */
			0x6E,   /* 6E n     */
			0x6F,   /* 6F o     */
			0x70,   /* 70 p     */
			0x71,   /* 71 q     */
			0x72,   /* 72 r     */
			0x73,   /* 73 s     */
			0x74,   /* 74 t     */
			0x75,   /* 75 u     */
			0x76,   /* 76 v     */
			0x77,   /* 77 w     */
			0x78,   /* 78 x     */
			0x79,   /* 79 y     */
			0x7A,   /* 7A z     */
			0x7B,   /* 7B {     */
			0x7C,   /* 7C |     */
			0x7D,   /* 7D }     */
			0x7E,   /* 7E ~     */
			0x7F,   /* 7F (DEL) */
			0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
			0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
			0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
			0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
			0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
			0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
			0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
			0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
	};

	//--------------------------------------------------------------------------------
	__QOR_INTERFACE(__WINQL) const unsigned char CharData::sc_ucnewcumap[384] =
	{
			0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
			0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
			0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
			0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
			0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
			0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
			0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
			0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
			0x00,   /* 00 (NUL) */
			0x01,   /* 01 (SOH) */
			0x02,   /* 02 (STX) */
			0x03,   /* 03 (ETX) */
			0x04,   /* 04 (EOT) */
			0x05,   /* 05 (ENQ) */
			0x06,   /* 06 (ACK) */
			0x07,   /* 07 (BEL) */
			0x08,   /* 08 (BS)  */
			0x09,   /* 09 (HT)  */
			0x0A,   /* 0A (LF)  */
			0x0B,   /* 0B (VT)  */
			0x0C,   /* 0C (FF)  */
			0x0D,   /* 0D (CR)  */
			0x0E,   /* 0E (SI)  */
			0x0F,   /* 0F (SO)  */
			0x10,   /* 10 (DLE) */
			0x11,   /* 11 (DC1) */
			0x12,   /* 12 (DC2) */
			0x13,   /* 13 (DC3) */
			0x14,   /* 14 (DC4) */
			0x15,   /* 15 (NAK) */
			0x16,   /* 16 (SYN) */
			0x17,   /* 17 (ETB) */
			0x18,   /* 18 (CAN) */
			0x19,   /* 19 (EM)  */
			0x1A,   /* 1A (SUB) */
			0x1B,   /* 1B (ESC) */
			0x1C,   /* 1C (FS)  */
			0x1D,   /* 1D (GS)  */
			0x1E,   /* 1E (RS)  */
			0x1F,   /* 1F (US)  */
			0x20,   /* 20 SPACE */
			0x21,   /* 21 !     */
			0x22,   /* 22 "     */
			0x23,   /* 23 #     */
			0x24,   /* 24 $     */
			0x25,   /* 25 %     */
			0x26,   /* 26 &     */
			0x27,   /* 27 '     */
			0x28,   /* 28 (     */
			0x29,   /* 29 )     */
			0x2A,   /* 2A *     */
			0x2B,   /* 2B +     */
			0x2C,   /* 2C ,     */
			0x2D,   /* 2D -     */
			0x2E,   /* 2E .     */
			0x2F,   /* 2F /     */
			0x30,   /* 30 0     */
			0x31,   /* 31 1     */
			0x32,   /* 32 2     */
			0x33,   /* 33 3     */
			0x34,   /* 34 4     */
			0x35,   /* 35 5     */
			0x36,   /* 36 6     */
			0x37,   /* 37 7     */
			0x38,   /* 38 8     */
			0x39,   /* 39 9     */
			0x3A,   /* 3A :     */
			0x3B,   /* 3B ;     */
			0x3C,   /* 3C <     */
			0x3D,   /* 3D =     */
			0x3E,   /* 3E >     */
			0x3F,   /* 3F ?     */
			0x40,   /* 40 @     */
			0x41,   /* 41 A     */
			0x42,   /* 42 B     */
			0x43,   /* 43 C     */
			0x44,   /* 44 D     */
			0x45,   /* 45 E     */
			0x46,   /* 46 F     */
			0x47,   /* 47 G     */
			0x48,   /* 48 H     */
			0x49,   /* 49 I     */
			0x4A,   /* 4A J     */
			0x4B,   /* 4B K     */
			0x4C,   /* 4C L     */
			0x4D,   /* 4D M     */
			0x4E,   /* 4E N     */
			0x4F,   /* 4F O     */
			0x50,   /* 50 P     */
			0x51,   /* 51 Q     */
			0x52,   /* 52 R     */
			0x53,   /* 53 S     */
			0x54,   /* 54 T     */
			0x55,   /* 55 U     */
			0x56,   /* 56 V     */
			0x57,   /* 57 W     */
			0x58,   /* 58 X     */
			0x59,   /* 59 Y     */
			0x5A,   /* 5A Z     */
			0x5B,   /* 5B [     */
			0x5C,   /* 5C \     */
			0x5D,   /* 5D ]     */
			0x5E,   /* 5E ^     */
			0x5F,   /* 5F _     */
			0x60,   /* 60 `     */
			0x41,   /* 61 a     */
			0x42,   /* 62 b     */
			0x43,   /* 63 c     */
			0x44,   /* 64 d     */
			0x45,   /* 65 e     */
			0x46,   /* 66 f     */
			0x47,   /* 67 g     */
			0x48,   /* 68 h     */
			0x49,   /* 69 i     */
			0x4A,   /* 6A j     */
			0x4B,   /* 6B k     */
			0x4C,   /* 6C l     */
			0x4D,   /* 6D m     */
			0x4E,   /* 6E n     */
			0x4F,   /* 6F o     */
			0x50,   /* 70 p     */
			0x51,   /* 71 q     */
			0x52,   /* 72 r     */
			0x53,   /* 73 s     */
			0x54,   /* 74 t     */
			0x55,   /* 75 u     */
			0x56,   /* 76 v     */
			0x57,   /* 77 w     */
			0x58,   /* 78 x     */
			0x59,   /* 79 y     */
			0x5A,   /* 7A z     */
			0x7B,   /* 7B {     */
			0x7C,   /* 7C |     */
			0x7D,   /* 7D }     */
			0x7E,   /* 7E ~     */
			0x7F,   /* 7F (DEL) */
			0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
			0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
			0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
			0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
			0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
			0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
			0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
			0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
	};

}//nsWin32

