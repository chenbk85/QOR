//WinQLLocaleConv.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/CodeServices/Locale/WinQLLocaleConv.h"
#include "WinQL/CodeServices/Locale/WinQLLocale.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	void CLocaleConv::FreeMon()
	{
		if ( this == 0 )
		{
			return;
		}

		if ( int_curr_symbol != CLocale::ConvC().int_curr_symbol )
		{
			delete int_curr_symbol;				
		}

		if ( currency_symbol != CLocale::ConvC().currency_symbol )
		{
			delete currency_symbol;				
		}

		if ( mon_decimal_point != CLocale::ConvC().mon_decimal_point )
		{
			delete mon_decimal_point;
		}

		if ( mon_thousands_sep != CLocale::ConvC().mon_thousands_sep )
		{
			delete mon_thousands_sep;
		}

		if ( mon_grouping != CLocale::ConvC().mon_grouping )
		{
			delete mon_grouping;
		}

		if ( positive_sign != CLocale::ConvC().positive_sign )
		{
			delete positive_sign;
		}

		if ( negative_sign != CLocale::ConvC().negative_sign )
		{
			delete negative_sign;
		}
	}

	//--------------------------------------------------------------------------------
	void CLocaleConv::FreeNum()
	{
		if ( this == 0 )
		{
			return;
		}

		if ( decimal_point != CLocale::ConvC().decimal_point )
		{
			delete decimal_point;
		}

		if ( thousands_sep != CLocale::ConvC().thousands_sep )
		{
			delete thousands_sep;
		}

		if ( grouping != CLocale::ConvC().grouping )
		{
			delete grouping;
		}
	}

}//nsWin32

