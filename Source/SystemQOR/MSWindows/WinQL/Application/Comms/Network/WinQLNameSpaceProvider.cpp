//WinQLNameSpaceProvider.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/Application/Comms/Network/WinQLNameSpaceProvider.h"
#include "WinQAPI/WS2_32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_OCLASS_LUID( CNameSpaceProvider );

	//--------------------------------------------------------------------------------
	CNameSpaceProvider::CNameSpaceProvider() : m_Library( CWS2_32::Instance() )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::CNameSpaceProvider" );
	}

	//--------------------------------------------------------------------------------
	CNameSpaceProvider::~CNameSpaceProvider()
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::~CNameSpaceProvider" );
	}

	//--------------------------------------------------------------------------------
	int CNameSpaceProvider::Advertise( const GUID* puuidProviderId, const NSPv2Routine* pNSPv2Routine )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::Advertise" );
		int iResult = 0;
		__QOR_PROTECT
		{
			iResult = m_Library.WSAAdvertiseProvider( reinterpret_cast< const ::GUID* >( puuidProviderId ), reinterpret_cast< const LPCNSPV2_ROUTINE* >( pNSPv2Routine ) );
		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int CNameSpaceProvider::CompleteAsyncCall( void* hAsyncCall, int iRetCode )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::CompleteAsyncCall" );
		int iResult = 0;
		__QOR_PROTECT
		{
			iResult = m_Library.WSAProviderCompleteAsyncCall( reinterpret_cast< HANDLE >( hAsyncCall ), iRetCode );
		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int CNameSpaceProvider::Unadvertise( const GUID* puuidProviderId )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::Unadvertise" );
		int iResult = 0;
		__QOR_PROTECT
		{
			iResult = m_Library.WSAUnadvertiseProvider( reinterpret_cast< const ::GUID* >( puuidProviderId ) );
		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int CNameSpaceProvider::Install( wchar_t* szIdentifier, wchar_t* szPathName, unsigned long ulNameSpace, unsigned long ulVersion, GUID* pProviderId )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::Install" );
		int iResult = 0;
		__QOR_PROTECT
		{
			iResult = m_Library.WSCInstallNameSpace( szIdentifier, szPathName, ulNameSpace, ulVersion, reinterpret_cast< ::LPGUID >( pProviderId ) );
		}__QOR_ENDPROTECT
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int CNameSpaceProvider::InstallEx( wchar_t* szIdentifier, wchar_t* szPathName, unsigned long ulNameSpace, unsigned long ulVersion, GUID* pProviderId, Blob* pProviderInfo )
	{
		_WINQ_FCONTEXT( "CNameSpaceProvider::InstallEx" );
		int iResult = 0;
		__QOR_PROTECT
		{
			iResult = m_Library.WSCInstallNameSpaceEx( szIdentifier, szPathName, ulNameSpace, ulVersion, reinterpret_cast< ::LPGUID >( pProviderId ), reinterpret_cast< ::LPBLOB >( pProviderInfo ) );
		}__QOR_ENDPROTECT
		return iResult;
	}

}//nsWin32

