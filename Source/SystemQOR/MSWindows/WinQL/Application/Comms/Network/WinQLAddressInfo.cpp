//WinQLAddressInfo.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/Application/Comms/Network/WinQLAddressInfo.h"
#include "WinQAPI/WS2_32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_OCLASS_LUID( CAddressInfo );

	//--------------------------------------------------------------------------------
	CAddressInfo::CAddressInfo( const TCHAR* pName, const TCHAR* pServiceName, unsigned long ulNameSpace, GUID* pNSpId, const AddrInfoEx* pHints, timeval* pTimeout ) : m_Library( CWS2_32::Instance() )
	{
		_WINQ_FCONTEXT( "CAddressInfo::CAddressInfo" );
		__QOR_PROTECT
		{
			m_pInfoEx = 0;
			m_pInfo = 0;
			m_iStatus = m_Library.GetAddrInfoEx( pName, pServiceName, ulNameSpace, reinterpret_cast< ::LPGUID >( pNSpId ), reinterpret_cast< const ::ADDRINFOEX* >( pHints ), reinterpret_cast< ::PADDRINFOEX* >( &m_pInfoEx ), reinterpret_cast< ::timeval* >( pTimeout ), 0, 0, 0 );
		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	CAddressInfo::CAddressInfo( const TCHAR* pNodeName, const TCHAR* pServiceName, const AddrInfo* pHints ) : m_Library( CWS2_32::Instance() )
	{
		_WINQ_FCONTEXT( "CAddressInfo::CAddressInfo" );
		__QOR_PROTECT
		{
			m_pInfoEx = 0;
			m_pInfo = 0;
#if( __QOR_UNICODE )
			m_iStatus = m_Library.GetAddrInfo( pNodeName, pServiceName, reinterpret_cast< const ::ADDRINFOW* >( pHints ), reinterpret_cast< ::ADDRINFOW** >( &m_pInfo ) );
#else
			m_iStatus = m_Library.GetAddrInfo( pNodeName, pServiceName, reinterpret_cast< const ::ADDRINFO* >( pHints ), reinterpret_cast< ::ADDRINFO** >( &m_pInfo ) );
#endif
		}__QOR_ENDPROTECT
	}

	//--------------------------------------------------------------------------------
	CAddressInfo::~CAddressInfo()
	{
		_WINQ_FCONTEXT( "CAddressInfo::~CAddressInfo" );
		if( m_pInfoEx )
		{
			m_Library.FreeAddrInfoEx( reinterpret_cast< ::PADDRINFOEX >( m_pInfoEx ) );
		}

		if( m_pInfo )
		{
#if		( __QOR_UNICODE )
			m_Library.FreeAddrInfo( reinterpret_cast< ::PADDRINFOW >( m_pInfo ) );
#else
			m_Library.FreeAddrInfo( reinterpret_cast< ::PADDRINFOA >( m_pInfo ) );
#endif//( __MX_UNICODE )
		}
	}

	//--------------------------------------------------------------------------------
	AddrInfo* CAddressInfo::Info( void )
	{
		return m_pInfo;
	}

	//--------------------------------------------------------------------------------
	AddrInfoEx* CAddressInfo::InfoEx( void )
	{
		return m_pInfoEx;
	}

}//nsWin32
