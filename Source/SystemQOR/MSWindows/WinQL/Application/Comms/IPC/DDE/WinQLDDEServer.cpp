//WinQLDDEServer.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQL/Application/ErrorSystem/WinQLError.h"
#include "WinQL/Application/Comms/IPC/DDE/WinQLDDE.h"
#include "WinQAPI/User32.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	using namespace nsWinQAPI;

	__QOR_IMPLEMENT_OCLASS_LUID( CDDEServer );

	//DDE Server

	//--------------------------------------------------------------------------------
	CDDEServer::CDDEServer() : m_User32Library( CUser32::Instance() )
	{
		_WINQ_FCONTEXT( "CDDEServer::CDDEServer" );
	}

	//--------------------------------------------------------------------------------
	CDDEServer::~CDDEServer()
	{
		_WINQ_FCONTEXT( "CDDEServer::~CDDEServer" );
	}

	//--------------------------------------------------------------------------------
	bool CDDEServer::NameService( CDDEAppInstance& Inst, unsigned int hsz1, unsigned int hsz2, unsigned int afCmd )
	{
		_WINQ_FCONTEXT( "CDDEServer::NameService" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = m_User32Library.DdeNameService( Inst.ID(), hsz1, hsz2, afCmd ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

	//--------------------------------------------------------------------------------
	bool CDDEServer::PostAdvise( CDDEAppInstance& Inst, void* hszTopic, void* hszItem )
	{
		_WINQ_FCONTEXT( "CDDEServer::PostAdvise" );
		bool bResult = false;
		__QOR_PROTECT
		{
			bResult = m_User32Library.DdePostAdvise( Inst.ID(), reinterpret_cast< ::HSZ >( hszTopic ), reinterpret_cast< ::HSZ >( hszItem ) ) ? true : false;
		}__QOR_ENDPROTECT
		return bResult;
	}

}//nsWin32
