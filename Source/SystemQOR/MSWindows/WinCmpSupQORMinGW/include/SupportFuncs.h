//SupportFuncs.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINCMPSUPVC_FUNCS_H_
#define WINCMPSUPVC_FUNCS_H_
/*
typedef __int64(*_alldivFn)( void );

//----------------------------------------------------------------------
class CSupportFuncs
{
public:

	CSupportFuncs();
	~CSupportFuncs();

	static _alldivFn m_p_alldiv;
};

extern "C" __int64 _alldiv( void );

__forceinline int __builtin_popcount( unsigned int x );
__forceinline int __builtin_popcountl( unsigned long x );
#if __QCMP_SUPPORTS( __QCMP_FEATURE_HASLONGLONG )
__forceinline int __builtin_popcountll( unsigned long long x );
#endif
__forceinline int __builtin_ctz( unsigned int x );
__forceinline int __builtin_ctzl( unsigned long x );
#if __QCMP_SUPPORTS( __QCMP_FEATURE_HASLONGLONG )
__forceinline int __builtin_ctzll( unsigned long long x );
#endif
__forceinline int __builtin_clz( unsigned int x );
__forceinline int __builtin_clzl( unsigned long x );
#if __QCMP_SUPPORTS( __QCMP_FEATURE_HASLONGLONG )
__forceinline int __builtin_clzll( unsigned long long x );
#endif

//--------------------------------------------------------------------------------
extern "C" long __cdecl _InterlockedIncrement( long volatile * );
#pragma intrinsic (_InterlockedIncrement)

extern "C" long __cdecl _InterlockedDecrement( long volatile* );
#pragma intrinsic (_InterlockedDecrement)
*/

#endif//WINCMPSUPVC_FUNCS_H_
