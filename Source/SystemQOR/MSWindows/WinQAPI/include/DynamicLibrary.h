//DynamicLibrary.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//WinQAPI Dynamic Link Libraries

#ifndef WINQAPI_DYNAMICLIB_H_1
#define WINQAPI_DYNAMICLIB_H_1

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "../Source/SystemQOR/MSWindows/WinQAPI/include/Library.h"
#include "WinQAPI/Kernel32.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	typedef Cmp_int_ptr ( __QCMP_STDCALLCONVENTION *FARPROC )( void );

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQAPI ) CDll : public CLibrary
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CDll );

		__QCMP_STATIC_CONSTANT( int, DLLProcessAttach	= 1 );
		__QCMP_STATIC_CONSTANT( int, DLLThreadAttach	= 2 );
		__QCMP_STATIC_CONSTANT( int, DLLThreadDetach	= 3 );
		__QCMP_STATIC_CONSTANT( int, DLLProcessDetach	= 0 );

		typedef int( *DefProc )( void );//Default procedure pointer type

		CDll( const TCHAR* lpFileName );
		CDll( const TCHAR* lpFileName, void* hFile, unsigned long dwFlags );
		CDll( const CDll& );
		virtual ~CDll();
		bool DisableThreadLibraryCalls( void );
		void Free( void );
		void FreeAndExitThread( unsigned long dwExitCode );
		unsigned long GetFileName( TCHAR* lpFilename, unsigned long nSize );
		FARPROC GetProcAddress( const char* lpProcName );
		static bool GetEx( unsigned long dwFlags, const TCHAR* lpModuleName, CDll* /*phModule*/ );
		static unsigned long GetDirectory( unsigned long nBufferLength, TCHAR* lpBuffer );
		static bool SetDllDirectoryT( const TCHAR* lpPathName );
		CDll( HMODULE hModule, bool bDontFree = false );
		HMODULE Handle( void );

	protected:

		HMODULE m_hModule;
			
	private:
			
		bool m_bExitThread;
		unsigned long m_dwExitCode;
		bool m_bDontFree;
	};

}//nsWinQAPI

#endif//WINQAPI_DYNAMICLIB_H_1
