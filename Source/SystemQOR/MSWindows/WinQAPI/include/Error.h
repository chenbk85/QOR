//Error.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQAPI_ERROR_H_1
#define WINQAPI_ERROR_H_1

#include "CodeQOR/ErrorSystem/BaseErrorDomain.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
#if		( __QOR_ERROR_SYSTEM == __QCS_YES_ )
#	define __WINQAPI_RAISE( _PARAMS, _Level )	nsCodeQOR::CError::Raise( __FILE__ , __LINE__ , _FContext_.Name(), nsCodeQOR::CObjectContextBase::NullContext(), nsCodeQOR::CError::CBaseErrorParams _PARAMS, nsWinQAPI::ErrorDomainPtr(), _Level )
#	define __WINQAPI_NOTE( _PARAMS )			__WINQAPI_RAISE( _PARAMS, nsCodeQOR::CError::ERR_LVL_NOTE )
#	define __WINQAPI_TRACE( _X )				__WINQAPI_NOTE( ( nsCodeQOR::CBaseErrorDomain::TRACE_NOTE, _X, 0 ) )
#	define __WINQAPI_WARNING( _PARAMS )			__WINQAPI_RAISE( _PARAMS, nsCodeQOR::CError::ERR_LVL_WARNING )
#	define __WINQAPI_CONT_ERROR( _PARAMS )		__WINQAPI_RAISE( _PARAMS, nsCodeQOR::CError::ERR_LVL_CONTINUE )
#	define __WINQAPI_SERIOUS( _PARAMS )			__WINQAPI_RAISE( _PARAMS, nsCodeQOR::CError::ERR_LVL_SERIOUS )
#	define __WINQAPI_FATAL( _PARAMS )			__WINQAPI_RAISE( _PARAMS, nsCodeQOR::CError::ERR_LVL_FATAL )
#	define __WINQAPI_ERR_ONLY( _X ) _X
#else
#	define __WINQAPI_NOTE( _PARAMS )
#	define __WINQAPI_TRACE( _PARAMS )
#	define __WINQAPI_WARNING( _PARAMS )		
#	define __WINQAPI_CONT_ERROR( _PARAMS )
#	define __WINQAPI_SERIOUS( _PARAMS )
#	define __WINQAPI_FATAL( _PARAMS )
#	define __WINQAPI_ERR_ONLY( _X )
#endif

#endif//WINQAPI_ERROR_H_1
