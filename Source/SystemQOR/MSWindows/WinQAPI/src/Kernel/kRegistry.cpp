//kRegistry.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "WinQAPI/Kernel32.h"
#include "ReturnCheck.h"

//------------------------------------------------------------------------------
namespace nsWinQAPI
{
	//--------------------------------------------------------------------------------
	UINT CKernel32::GetPrivateProfileInt( LPCTSTR lpAppName, LPCTSTR lpKeyName, INT nDefault, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetPrivateProfileInt" );
		UINT uiResult = 0;
		uiResult = ::GetPrivateProfileInt( lpAppName, lpKeyName, nDefault, lpFileName );
		return uiResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CKernel32::GetPrivateProfileSection( LPCTSTR lpAppName, LPTSTR lpReturnedString, DWORD nSize, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetPrivateProfileSection" );
		DWORD dwResult = 0;
		dwResult = ::GetPrivateProfileSection( lpAppName, lpReturnedString, nSize, lpFileName );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CKernel32::GetPrivateProfileSectionNames( LPTSTR lpszReturnBuffer, DWORD nSize, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetPrivateProfileSectionNames" );
		DWORD dwResult = 0;
		dwResult = ::GetPrivateProfileSectionNames( lpszReturnBuffer, nSize, lpFileName );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CKernel32::GetPrivateProfileString( LPCTSTR lpAppName, LPCTSTR lpKeyName, LPCTSTR lpDefault, LPTSTR lpReturnedString, DWORD nSize, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetPrivateProfileString" );
		DWORD dwResult = 0;
		dwResult = ::GetPrivateProfileString( lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::GetPrivateProfileStruct( LPCTSTR lpszSection, LPCTSTR lpszKey, void* lpStruct, UINT uSizeStruct, LPCTSTR szFile )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetPrivateProfileStruct" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::GetPrivateProfileStruct( lpszSection, lpszKey, lpStruct, uSizeStruct, szFile );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	UINT CKernel32::GetProfileInt( LPCTSTR lpAppName, LPCTSTR lpKeyName, INT nDefault )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetProfileInt" );
		UINT uiResult = 0;
		uiResult = ::GetProfileInt( lpAppName, lpKeyName, nDefault );
		return uiResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CKernel32::GetProfileSection( LPCTSTR lpAppName, LPTSTR lpReturnedString, DWORD nSize )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetProfileSection" );
		DWORD dwResult = 0;
		dwResult = ::GetProfileSection( lpAppName, lpReturnedString, nSize );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CKernel32::GetProfileString( LPCTSTR lpAppName, LPCTSTR lpKeyName, LPCTSTR lpDefault, LPTSTR lpReturnedString, DWORD nSize )
	{
		_WINQ_SFCONTEXT( "CKernel32::GetProfileString" );
		DWORD dwResult = 0;
		dwResult = ::GetProfileString( lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::WritePrivateProfileSection( LPCTSTR lpAppName, LPCTSTR lpString, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::WritePrivateProfileSection" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::WritePrivateProfileSection( lpAppName, lpString, lpFileName );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::WritePrivateProfileString( LPCTSTR lpAppName, LPCTSTR lpKeyName, LPCTSTR lpString, LPCTSTR lpFileName )
	{
		_WINQ_SFCONTEXT( "CKernel32::WritePrivateProfileString" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::WritePrivateProfileString( lpAppName, lpKeyName, lpString, lpFileName );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::WritePrivateProfileStruct( LPCTSTR lpszSection, LPCTSTR lpszKey, void* lpStruct, UINT uSizeStruct, LPCTSTR szFile )
	{
		_WINQ_SFCONTEXT( "CKernel32::WritePrivateProfileStruct" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::WritePrivateProfileStruct( lpszSection, lpszKey, lpStruct, uSizeStruct, szFile );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::WriteProfileSection( LPCTSTR lpAppName, LPCTSTR lpString )
	{
		_WINQ_SFCONTEXT( "CKernel32::WriteProfileSection" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::WriteProfileSection( lpAppName, lpString );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CKernel32::WriteProfileString( LPCTSTR lpAppName, LPCTSTR lpKeyName, LPCTSTR lpString )
	{
		_WINQ_SFCONTEXT( "CKernel32::WriteProfileString" );
		CCheckReturn< BOOL, CBoolCheck< > >::TType bResult;
		bResult = ::WriteProfileString( lpAppName, lpKeyName, lpString );
		return bResult;
	}

}//nsWinQAPI

