//WinQFontText.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Font and Text functions

#include "WinQAPI/User32.h"
#include "../Source/SystemQOR/MSWindows/WinQAPI/include/ReturnCheck.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	//--------------------------------------------------------------------------------
	int CUser32::DrawText( HDC hDC, LPCTSTR lpString, int nCount, ::LPRECT lpRect, UINT uFormat )
	{
		_WINQ_FCONTEXT( "CUser32::DrawText" );
		CCheckReturn< int, CCheckNonZero< int > >::TType iResult;
		_WINQ_USESAPI( DrawText );
		iResult = Call< int, HDC, LPCTSTR, int, ::LPRECT, UINT >( pFunc, hDC, lpString, nCount, lpRect, uFormat );
		return iResult;
	}

	//--------------------------------------------------------------------------------
	int CUser32::DrawTextEx( HDC hdc, LPTSTR lpchText, int cchText, ::LPRECT lprc, UINT dwDTFormat, ::LPDRAWTEXTPARAMS lpDTParams )
	{
		_WINQ_FCONTEXT( "CUser32::DrawTextEx" );
		CCheckReturn< int, CCheckNonZero< int > >::TType iResult;
		_WINQ_USESAPI( DrawTextEx );
		iResult = Call< int, HDC, LPTSTR, int, ::LPRECT, UINT, ::LPDRAWTEXTPARAMS >( pFunc, hdc, lpchText, cchText, lprc, dwDTFormat, lpDTParams );
		return iResult;
	}

	//--------------------------------------------------------------------------------
	DWORD CUser32::GetTabbedTextExtent( HDC hDC, LPCTSTR lpString, int nCount, int nTabPositions, CONST LPINT lpnTabStopPositions )
	{
		_WINQ_FCONTEXT( "CUser32::GetTabbedTextExtent" );
		CCheckReturn< DWORD, CCheckNonZero< DWORD > >::TType dwResult;
		_WINQ_USESAPI( GetTabbedTextExtent );
		dwResult = Call< DWORD, HDC, LPCTSTR, int, int, CONST LPINT >( pFunc, hDC, lpString, nCount, nTabPositions, lpnTabStopPositions );
		return dwResult;
	}

	//--------------------------------------------------------------------------------
	LONG CUser32::TabbedTextOut( HDC hDC, int X, int Y, LPCTSTR lpString, int nCount, int nTabPositions, CONST ::LPINT lpnTabStopPositions, int nTabOrigin )
	{
		_WINQ_FCONTEXT( "CUser32::TabbedTextOut" );
		CCheckReturn< LONG, CCheckNonZero< LONG > >::TType Result;
		_WINQ_USESAPI( TabbedTextOut );
		Result = Call< LONG, HDC, int, int, LPCTSTR, int, int, CONST LPINT, int >( pFunc, hDC, X, Y, lpString, nCount, nTabPositions, lpnTabStopPositions, nTabOrigin );
		return Result;
	}

}//nsWinQAPI

