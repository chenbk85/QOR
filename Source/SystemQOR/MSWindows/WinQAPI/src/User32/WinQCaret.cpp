//WinQCaret.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Caret functions

#include "WinQAPI/User32.h"
#include "../SystemQOR/MSWindows/WinQAPI/include/ReturnCheck.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	typedef CCheckReturn< BOOL, CBoolCheck< > >::TType CheckedBool;

	//--------------------------------------------------------------------------------
	BOOL CUser32::CreateCaret( HWND hWnd, HBITMAP hBitmap, int nWidth, int nHeight )
	{
		_WINQ_FCONTEXT( "CUser32::CreateCaret" );
		CheckedBool bResult;
		_WINQ_USESAPI( CreateCaret );
		bResult = Call< BOOL, HWND, HBITMAP, int, int >( pFunc, hWnd, hBitmap, nWidth, nHeight );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::DestroyCaret(void)
	{
		_WINQ_FCONTEXT( "CUser32::DestroyCaret" );
		CheckedBool bResult;
		_WINQ_USESAPI( DestroyCaret );
		bResult = Call< BOOL >( pFunc );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	UINT CUser32::GetCaretBlinkTime(void)
	{
		_WINQ_FCONTEXT( "CUser32::GetCaretBlinkTime" );
		CCheckReturn< UINT, CCheckNonZero< UINT > >::TType uiResult;
		_WINQ_USESAPI( GetCaretBlinkTime );
		uiResult = Call< UINT >( pFunc );
		return uiResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::GetCaretPos( LPPOINT lpPoint )
	{
		_WINQ_FCONTEXT( "CUser32::GetCaretPos" );
		CheckedBool bResult;
		_WINQ_USESAPI( GetCaretPos );
		bResult = Call< BOOL, LPPOINT >( pFunc, lpPoint );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::HideCaret( HWND hWnd )
	{
		_WINQ_FCONTEXT( "CUser32::HideCaret" );
		CheckedBool bResult;
		_WINQ_USESAPI( HideCaret );
		bResult = Call< BOOL, HWND >( pFunc, hWnd );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::SetCaretBlinkTime( UINT uMSeconds )
	{
		_WINQ_FCONTEXT( "CUser32::SetCaretBlinkTime" );
		CheckedBool bResult;
		_WINQ_USESAPI( SetCaretBlinkTime );
		bResult = Call< BOOL, UINT >( pFunc, uMSeconds );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::SetCaretPos( int X, int Y )
	{
		_WINQ_FCONTEXT( "CUser32::SetCaretPos" );
		CheckedBool bResult;
		_WINQ_USESAPI( SetCaretPos );
		bResult = Call< BOOL, int, int >( pFunc, X, Y );
		return bResult;
	}

	//--------------------------------------------------------------------------------
	BOOL CUser32::ShowCaret( HWND hWnd )
	{
		_WINQ_FCONTEXT( "CUser32::ShowCaret" );
		CheckedBool bResult;
		_WINQ_USESAPI( ShowCaret );
		bResult = Call< BOOL, HWND >( pFunc, hWnd );
		return bResult;
	}

}//nsWinQAPI


