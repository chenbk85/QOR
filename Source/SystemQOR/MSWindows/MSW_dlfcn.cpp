//MSW_dlfcn.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "SystemQOR.h"

#if		(QOR_SYS_OS == QOR_SYS_MSW)

#include "SystemQOR/MSWindows/MSW_dlfcn.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	Cdlfcn::Cdlfcn()
	{
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::Cdlfcn" );
	}

	//--------------------------------------------------------------------------------
	Cdlfcn::~Cdlfcn()
	{
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::~Cdlfcn" );
	}

	//--------------------------------------------------------------------------------
    int Cdlfcn::dlclose( void* pLibrary )
    {
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::dlclose" );
		return m_LibraryLoader.Close( reinterpret_cast< nsWinPosum::CSharedLibrary* >( pLibrary ) );
    }

    //--------------------------------------------------------------------------------
    char* Cdlfcn::dlerror( void )
    {
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::dlerror" );
		nsPosum::CString strError = m_LibraryLoader.Error();
		return 0;//TODO: const_cast<char*>(strError.operator const char *());
    }

    //--------------------------------------------------------------------------------
    void* Cdlfcn::dlopen( const char* szPath, int iMode )
    {
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::dlopen" );

		nsWinPosum::CPath Path;
		return m_LibraryLoader.Open( Path, iMode );
    }

    //--------------------------------------------------------------------------------
    void* Cdlfcn::dlsym( void* __QCMP_RESTRICT pLibrary , const char* __QCMP_RESTRICT szSym )
    {
		__QCS_MEMBER_FCONTEXT( "Cdlfcn::dlsym" );
		return m_LibraryLoader.Symbol( reinterpret_cast< nsWinPosum::CSharedLibrary* >( pLibrary ), szSym );
    }

}//nsWin32

#endif//(QOR_SYS_OS == QOR_SYS_MSW)
