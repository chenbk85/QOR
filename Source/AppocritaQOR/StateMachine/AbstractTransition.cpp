//AbstractTransition.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "AppocritaQOR/StateMachine/AbstractTransition.h"

//------------------------------------------------------------------------------
namespace nsAppocrita
{
	//------------------------------------------------------------------------------
	CAbstractTransition::CAbstractTransition( CState* pSourceState )
	{
	}

	//------------------------------------------------------------------------------
	CAbstractTransition::~CAbstractTransition()
	{
	}

	//------------------------------------------------------------------------------
	CState* CAbstractTransition::sourceState() const
	{
		return 0;
	}

	//------------------------------------------------------------------------------
	CAbstractState* CAbstractTransition::targetState() const
	{
		return 0;
	}

	//------------------------------------------------------------------------------
	void CAbstractTransition::SetTargetState( CAbstractState* pTarget )
	{
	}

	//------------------------------------------------------------------------------
	nsCodeQOR::CTLinkedList< CAbstractState* > CAbstractTransition::targetStates() const
	{
		nsCodeQOR::CTLinkedList< CAbstractState* > emptyList;
		return emptyList;
	}

	//------------------------------------------------------------------------------
	void CAbstractTransition::SetTargetStates( const nsCodeQOR::CTLinkedList< CAbstractState* >& Targets )
	{
	}

	//------------------------------------------------------------------------------
	CStateMachine* CAbstractTransition::machine() const
	{
		return 0;
	}

	//------------------------------------------------------------------------------
	bool CAbstractTransition::eventTest( void )
	{
		return false;
	}

	//------------------------------------------------------------------------------
	void CAbstractTransition::onTransition( void )
	{
	}

}//nsAppocrita