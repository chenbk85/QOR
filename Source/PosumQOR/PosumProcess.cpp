//PosumProcess.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "PosumQOR.h"
#include "SystemQOR.h"
#include "PosumQOR/Process.h"
#include "CodeQOR/Tracing/FunctionContextBase.h"

//--------------------------------------------------------------------------------
namespace nsPosum
{
	__QOR_IMPLEMENT_OCLASS_LUID( CProcess );

	//--------------------------------------------------------------------------------
	CProcess::CProcess()
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::CProcess" );
	}

	//--------------------------------------------------------------------------------
	CProcess::CProcess( const CProcess& src )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::CProcess" );
		*this = src;
	}
	
	//--------------------------------------------------------------------------------
	CProcess& CProcess::operator = ( const CProcess& src )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::operator =" );
		m_pImpl = src.m_pImpl;
		return *this;
	}

	//--------------------------------------------------------------------------------
	CProcess::~CProcess()
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::~CProcess" );
	}
	
	//--------------------------------------------------------------------------------
	uid_t CProcess::GetEffectiveUserID( void )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::GetEffectiveUserID" );
		return PImpl()->GetEffectiveUserID();
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetID()
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::GetID" );
		return PImpl()->GetID();
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetGroupID( pid_t ProcessID )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::GetGroupID" );
		return PImpl()->GetGroupID( ProcessID );
	}

	//--------------------------------------------------------------------------------
	pid_t CProcess::GetSessionLeaderID( pid_t ProcessID )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::GetSessionLeaderID" );
		return PImpl()->GetSessionLeaderID( ProcessID );
	}

//protected:

	//--------------------------------------------------------------------------------
	CProcess::CProcess( CProcess* pImpl ) : m_pImpl( pImpl )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::CProcess" );
	}

	//--------------------------------------------------------------------------------
	CProcess* CProcess::PImpl( void )
	{
		__QCS_MEMBER_FCONTEXT( "CProcess::PImpl" );
		//TODO: NULL check
		return m_pImpl;
	}

}//nsPosum
