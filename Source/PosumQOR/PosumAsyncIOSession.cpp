//AsyncIOSession.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "PosumQOR.h"
#include "SystemQOR.h"
#include "PosumQOR/AsyncIOSession.h"

//--------------------------------------------------------------------------------
namespace nsPosum
{
	__QOR_IMPLEMENT_OCLASS_LUID( CAsyncIOSession );

	//--------------------------------------------------------------------------------
	CAsyncIOSession::CAsyncIOSession()
	{
	}
	
	//--------------------------------------------------------------------------------
	CAsyncIOSession::~CAsyncIOSession()
	{
	}

	//--------------------------------------------------------------------------------
	int CAsyncIOSession::Cancel()
	{
		return PImpl()->Cancel();
	}

	//--------------------------------------------------------------------------------
	int CAsyncIOSession::Error() const
	{
		return ConstPImpl()->Error();
	}

	//--------------------------------------------------------------------------------
	int CAsyncIOSession::FSync( int i )
	{
		return PImpl()->FSync( i );
	}

	//--------------------------------------------------------------------------------
	int	CAsyncIOSession::Read()
	{
		return PImpl()->Read();
	}

	//--------------------------------------------------------------------------------
	ssize_t CAsyncIOSession::Return()
	{
		return PImpl()->Return();
	}

	//--------------------------------------------------------------------------------
	int CAsyncIOSession::Suspend( const aiocb* const[], int, const timespec* )
	{
		return 0;
	}

	//--------------------------------------------------------------------------------
	int CAsyncIOSession::Write()
	{
		return PImpl()->Write();
	}

	//--------------------------------------------------------------------------------
	int	CAsyncIOSession::List( int, aiocb* __QCMP_RESTRICT const[/*__QCMP_RESTRICT*/], int, sigevent* __QCMP_RESTRICT )
	{
		return 0;//PImpl()->List( );
	}

//protected:

	//--------------------------------------------------------------------------------
	CAsyncIOSession::CAsyncIOSession( CAsyncIOSession* pImpl ) : m_pImpl( pImpl )
	{
	}

	//--------------------------------------------------------------------------------
	CAsyncIOSession* CAsyncIOSession::PImpl( void )
	{
		//TODO: NULL check
		return m_pImpl;
	}

	//--------------------------------------------------------------------------------
	const CAsyncIOSession* CAsyncIOSession::ConstPImpl(void) const
	{
		//TODO: NULL check
		return const_cast< const CAsyncIOSession* >( m_pImpl );
	}

}//nsPosum
