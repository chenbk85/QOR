//wctype.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CQOR/CQORPolicy.h"
#include <wctype.h>
#include <errno.h>
#include "SystemQOR.h"
#include QOR_SYS_PLATFORMHEADER(wctype.h)
#include "CodeQOR/Tracing/FunctionContextBase.h"
#include "CodeQOR/ErrorSystem/Error.h"
#include "CQOR.h"

//--------------------------------------------------------------------------------
namespace
{
	nsPlatform::Cwctype _wctype;
}//anonymous

__QCMP_STARTLINKAGE_C

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswascii( wint_t wc )
{
    __QCS_FCONTEXT( "iswascii" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswascii( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswalnum( wint_t wc )
{
    __QCS_FCONTEXT( "iswalnum" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswalnum( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int iswalnum_l( wint_t wc, locale_t l )
{
	__QCS_FCONTEXT( "iswalnum_l" );

	int iResult = 0;
	__QCS_PROTECT
	{
		iResult = _wctype.iswalnum_l( wc, l );
	}__QCS_ENDPROTECT
	return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswalpha( wint_t wc )
{
    __QCS_FCONTEXT( "iswalpha" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswalpha( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int iswalpha_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswalpha_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswalpha_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswblank( wint_t wc )
{
    __QCS_FCONTEXT( "iswblank" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswblank( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswblank_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswblank_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswblank_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswcntrl( wint_t wc )
{
    __QCS_FCONTEXT( "iswcntrl" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswcntrl( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswcntrl_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswcntrl_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswcntrl_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswdigit( wint_t wc )
{
    __QCS_FCONTEXT( "iswdigit" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswdigit( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswdigit_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswdigit_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswdigit_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswgraph( wint_t wc )
{
    __QCS_FCONTEXT( "iswgraph" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswgraph( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswgraph_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswgraph_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswgraph_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswlower( wint_t wc )
{
    __QCS_FCONTEXT( "iswlower" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswlower( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswlower_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswlower_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswlower_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswprint( wint_t wc )
{
    __QCS_FCONTEXT( "iswprint" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswprint( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswprint_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswprint_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswprint_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswpunct( wint_t wc )
{
    __QCS_FCONTEXT( "iswpunct" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswpunct( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswpunct_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswpunct_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswpunct_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswspace( wint_t wc )
{
    __QCS_FCONTEXT( "iswspace" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswspace( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswspace_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswspace_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswspace_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswupper( wint_t wc )
{
    __QCS_FCONTEXT( "iswupper" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswupper( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswupper_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswupper_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswupper_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswxdigit( wint_t wc )
{
    __QCS_FCONTEXT( "iswxdigit" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswxdigit( wc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswxdigit_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "iswxdigit_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswxdigit_l( wc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswctype( wint_t wc, wctype_t desc )
{
    __QCS_FCONTEXT( "iswctype" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswctype( wc, desc );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int __QCMP_CALLCON iswctype_l( wint_t wc, wctype_t desc, locale_t l )
{
    __QCS_FCONTEXT( "iswctype_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _wctype.iswctype_l( wc, desc, l );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towctrans( wint_t wc, wctrans_t desc )
{
    __QCS_FCONTEXT( "towctrans" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towctrans( wc, desc );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towctrans_l( wint_t wc, wctrans_t desc, locale_t l )
{
    __QCS_FCONTEXT( "towctrans_l" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towctrans_l( wc, desc, l );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towlower( wint_t wc )
{
    __QCS_FCONTEXT( "towlower" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towlower( wc );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towlower_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "towlower_l" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towlower_l( wc, l );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towupper( wint_t wc )
{
    __QCS_FCONTEXT( "towupper" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towupper( wc );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t __QCMP_CALLCON towupper_l( wint_t wc, locale_t l )
{
    __QCS_FCONTEXT( "towupper_l" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.towupper_l( wc, l );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wctrans_t __QCMP_CALLCON wctrans( const char* pchProperty )
{
    __QCS_FCONTEXT( "wctrans" );

    wctrans_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.wctrans( pchProperty );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wctrans_t __QCMP_CALLCON wctrans_l( const char* pchProperty, locale_t l )
{
    __QCS_FCONTEXT( "wctrans_l" );

    wctrans_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.wctrans_l( pchProperty, l );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wctype_t __QCMP_CALLCON wctype( const char* pchProperty )
{
    __QCS_FCONTEXT( "wctype" );

    wctype_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.wctype( pchProperty );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wctype_t  wctype_l( const char* pchProperty, locale_t l )
{
    __QCS_FCONTEXT( "wctype_l" );

    wctype_t Result = 0;
    __QCS_PROTECT
    {
        Result = _wctype.wctype_l( pchProperty, l );
    }__QCS_ENDPROTECT
    return Result;
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) int wctob_l( wint_t c, locale_t loc )
{
    __QCS_FCONTEXT( "wctob_l" );

    int iResult = 0;
    __QCS_PROTECT
    {
        //Result = _wctype.wctob_l( c, loc );//TODO:
    }__QCS_ENDPROTECT
    return iResult;    
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) size_t wcrtomb_l( char *__QCMP_RESTRICT s, wchar_t wc, mbstate_t* __QCMP_RESTRICT ps, locale_t loc )
{
    __QCS_FCONTEXT( "wcrtomb_l" );

    size_t Result = 0;
    __QCS_PROTECT
    {
        //Result = _wctype.wcrtomb_l( s, wc, ps, loc );//TODO:
    }__QCS_ENDPROTECT
    return Result;    
}

//--------------------------------------------------------------------------------
__QOR_INTERFACE( __CQOR ) wint_t btowc_l( int c, locale_t loc )
{
    __QCS_FCONTEXT( "btowc_l" );

    wint_t Result = 0;
    __QCS_PROTECT
    {
        //Result = _wctype.wcrtomb_l( s, wc, ps, loc );//TODO:
    }__QCS_ENDPROTECT
    return Result;    
}

__QCMP_ENDLINKAGE_C
