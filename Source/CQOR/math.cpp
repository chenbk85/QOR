//math.cpp

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Generic math implementation

#include "CQOR/CQORPolicy.h"
#include <math.h>
#include <errno.h>
#include "SystemQOR.h"
#include QOR_SYS_PLATFORMHEADER(math.h)
#include "CodeQOR/Tracing/FunctionContextBase.h"
#include "CodeQOR/ErrorSystem/Error.h"
#include "CQOR.h"

//--------------------------------------------------------------------------------
namespace
{
	nsPlatform::Cmath _math;
}//anonymous

__QCMP_STARTLINKAGE_C

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int fpclassify( long double x )
{
    __QCS_FCONTEXT( "fpclassify" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.fpclassify( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isfinite( long double x )
{
    __QCS_FCONTEXT( "isfinite" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isfinite( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isinf( long double x )
{
    __QCS_FCONTEXT( "isinf" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isinf( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isnan( long double x )
{
    __QCS_FCONTEXT( "isnan" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isnan( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isnormal( long double x )
{
    __QCS_FCONTEXT( "isnormal" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isnormal( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int signbit( long double x )
{
    __QCS_FCONTEXT( "signbit" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.signbit( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

#pragma function( acos )
/*
__QOR_INTERFACE( __CQOR ) double acos( double x )
{
    __QCS_FCONTEXT( "acos" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.acos( x );
    }__QCS_ENDPROTECT
    return dResult;
}
*/
//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float acosf( float x )
{
    __QCS_FCONTEXT( "acosf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.acosf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double acosl( long double x )
{
    __QCS_FCONTEXT( "acosl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.acosl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( asin )
/*__QOR_INTERFACE( __CQOR )*/ double asin( double x )
{
    __QCS_FCONTEXT( "asin" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.asin( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float asinf( float x )
{
    __QCS_FCONTEXT( "asinf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.asinf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double asinl( long double x )
{
    __QCS_FCONTEXT( "asinl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.asinl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( atan )
__QOR_INTERFACE( __CQOR ) double atan( double x )
{
    __QCS_FCONTEXT( "atan" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.atan( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float atanf( float x )
{
    __QCS_FCONTEXT( "atanf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.atanf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double atanl( long double x )
{
    __QCS_FCONTEXT( "atanl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.atanl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( atan2 )
__QOR_INTERFACE( __CQOR ) double atan2( double y, double x )
{
    __QCS_FCONTEXT( "atan2" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.atan2( y, x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float atan2f( float y, float x )
{
    __QCS_FCONTEXT( "atan2f" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.atan2f( y, x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double atan2l( long double y, long double x )
{
    __QCS_FCONTEXT( "atan2l" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.atan2l( y, x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( cos )
/*__QOR_INTERFACE( __CQOR )*/ double cos( double x )
{
    __QCS_FCONTEXT( "cos" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.cos( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float cosf( float x )
{
    __QCS_FCONTEXT( "cosf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.cosf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double cosl( long double x )
{
    __QCS_FCONTEXT( "cosl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.cosl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( sin )
/*__QOR_INTERFACE( __CQOR )*/ double sin( double x )
{
    __QCS_FCONTEXT( "cosl" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.sin( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float sinf( float x )
{
    __QCS_FCONTEXT( "sinf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.sinf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double sinl( long double x )
{
    __QCS_FCONTEXT( "sinl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.sinl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( tan )
/*__QOR_INTERFACE( __CQOR )*/ double tan( double x )
{
    __QCS_FCONTEXT( "tan" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.tan( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float tanf( float x )
{
    __QCS_FCONTEXT( "tanf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.tanf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double tanl( long double x )
{
    __QCS_FCONTEXT( "tanl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.tanl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double acosh( double x )
{
    __QCS_FCONTEXT( "acosh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.acosh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float acoshf( float x )
{
    __QCS_FCONTEXT( "acoshf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.acoshf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double acoshl( long double x )
{
    __QCS_FCONTEXT( "acoshl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.acoshl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double asinh( double x )
{
    __QCS_FCONTEXT( "asinh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.asinh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float asinhf( float x )
{
    __QCS_FCONTEXT( "asinhf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.asinhf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double asinhl( long double x )
{
    __QCS_FCONTEXT( "asinhl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.asinhl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double atanh( double x )
{
    __QCS_FCONTEXT( "atanh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.atanh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float atanhf( float x )
{
    __QCS_FCONTEXT( "atanhf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.atanhf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double atanhl( long double x )
{
    __QCS_FCONTEXT( "atanhl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.atanhl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( cosh )
/*__QOR_INTERFACE( __CQOR )*/ double cosh( double x )
{
    __QCS_FCONTEXT( "cosh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.cosh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float coshf( float x )
{
    __QCS_FCONTEXT( "coshf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.coshf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double coshl( long double x )
{
    __QCS_FCONTEXT( "coshl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.coshl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( sinh )
/*__QOR_INTERFACE( __CQOR )*/ double sinh( double x )
{
    __QCS_FCONTEXT( "sinh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.sinh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float sinhf( float x )
{
    __QCS_FCONTEXT( "sinhf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.sinhf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double sinhl( long double x )
{
    __QCS_FCONTEXT( "sinhl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.sinhl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( tanh )
/*__QOR_INTERFACE( __CQOR )*/ double tanh( double x )
{
    __QCS_FCONTEXT( "tanh" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.tanh( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float tanhf( float x )
{
    __QCS_FCONTEXT( "tanhf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.tanhf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double tanhl( long double x )
{
    __QCS_FCONTEXT( "tanhl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.tanhl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( exp )
/*__QOR_INTERFACE( __CQOR )*/ double exp( double x )
{
    __QCS_FCONTEXT( "exp" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.exp( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float expf( float x )
{
    __QCS_FCONTEXT( "expf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.expf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double expl( long double x )
{
    __QCS_FCONTEXT( "expl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.expl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double exp2( double x )
{
    __QCS_FCONTEXT( "exp2" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.exp2( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float exp2f( float x )
{
    __QCS_FCONTEXT( "exp2f" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.exp2f( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double exp2l( long double x )
{
    __QCS_FCONTEXT( "exp2l" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.exp2l( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double expm1( double x )
{
    __QCS_FCONTEXT( "expm1" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.expm1( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float expm1f( float x )
{
    __QCS_FCONTEXT( "expm1f" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.expm1f( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double expm1l( long double x )
{
    __QCS_FCONTEXT( "expm1l" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.expm1l( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double frexp( double value, int *exp )
{
    __QCS_FCONTEXT( "frexp" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.frexp( value, exp );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float frexpf( float value, int* exp )
{
    __QCS_FCONTEXT( "frexpf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.frexpf( value, exp );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double frexpl( long double value, int* exp )
{
    __QCS_FCONTEXT( "frexpl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.frexpl( value, exp );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int ilogb( double x )
{
    __QCS_FCONTEXT( "ilogb" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.ilogb( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int ilogbf( float x )
{
    __QCS_FCONTEXT( "ilogbf" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.ilogbf( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int ilogbl( long double x )
{
    __QCS_FCONTEXT( "ilogbl" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.ilogbl( x );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double ldexp( double x, int exp )
{
    __QCS_FCONTEXT( "ldexp" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.ldexp( x, exp );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float ldexpf( float x, int exp )
{
    __QCS_FCONTEXT( "ldexpf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.ldexpf( x, exp );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double ldexpl( long double x, int exp )
{
    __QCS_FCONTEXT( "ldexpl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.ldexpl( x, exp );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( log )
/*__QOR_INTERFACE( __CQOR )*/ double log( double x )
{
    __QCS_FCONTEXT( "log" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.log( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float logf( float x )
{
    __QCS_FCONTEXT( "logf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.logf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double logl(long double x)
{
    __QCS_FCONTEXT( "logl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.logl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( log10 )
/*__QOR_INTERFACE( __CQOR )*/ double log10( double x )
{
    __QCS_FCONTEXT( "log10" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.log10( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float log10f( float x )
{
    __QCS_FCONTEXT( "log10f" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.log10f( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double log10l( long double x )
{
    __QCS_FCONTEXT( "log10l" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.log10l( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double log1p( double x )
{
    __QCS_FCONTEXT( "log1p" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.log1p( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float log1pf( float x )
{
    __QCS_FCONTEXT( "log1pf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.log1pf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double log1pl( long double x )
{
    __QCS_FCONTEXT( "log1pl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.log1pl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double log2( double x )
{
    __QCS_FCONTEXT( "log2" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.log2( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float log2f( float x )
{
    __QCS_FCONTEXT( "log2f" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.log2f( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double log2l( long double x )
{
    __QCS_FCONTEXT( "log2l" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.log2l( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double logb( double x )
{
    __QCS_FCONTEXT( "logb" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.logb( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float logbf( float x )
{
    __QCS_FCONTEXT( "logbf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.logbf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double logbl( long double x )
{
    __QCS_FCONTEXT( "logbl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.logbl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double modf( double value, double* iptr )
{
    __QCS_FCONTEXT( "modf" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.modf( value, iptr );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float modff( float value, float* iptr )
{
    __QCS_FCONTEXT( "modff" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.modff( value, iptr );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double modfl( long double value, long double* iptr )
{
    __QCS_FCONTEXT( "modfl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.modfl( value, iptr );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double scalbn( double x, int n )
{
    __QCS_FCONTEXT( "scalbn" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.scalbn( x, n );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float scalbnf( float x, int n )
{
    __QCS_FCONTEXT( "scalbnf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.scalbnf( x, n );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double scalbnl( long double x, int n )
{
    __QCS_FCONTEXT( "scalbnl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.scalbnl( x, n );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double scalbln( double x, long int n )
{
    __QCS_FCONTEXT( "scalbln" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.scalbln( x, n );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float scalblnf( float x, long int n )
{
    __QCS_FCONTEXT( "scalblnf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.scalblnf( x, n );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double scalblnl( long double x, long int n )
{
    __QCS_FCONTEXT( "scalblnl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.scalblnl( x, n );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double cbrt( double x )
{
    __QCS_FCONTEXT( "cbrt" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.cbrt( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float cbrtf( float x )
{
    __QCS_FCONTEXT( "cbrtf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.cbrtf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double cbrtl( long double x )
{
    __QCS_FCONTEXT( "cbrtl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.cbrtl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( fabs )
/*__QOR_INTERFACE( __CQOR )*/ double fabs( double x )
{
    __QCS_FCONTEXT( "fabs" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fabs( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fabsf( float x )
{
    __QCS_FCONTEXT( "fabsf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fabsf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fabsl( long double x )
{
    __QCS_FCONTEXT( "fabsl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fabsl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double hypot( double x, double y )
{
    __QCS_FCONTEXT( "hypot" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.hypot( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float hypotf( float x, float y )
{
    __QCS_FCONTEXT( "hypotf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.hypotf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double hypotl( long double x, long double y )
{
    __QCS_FCONTEXT( "hypotl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.hypotl( x,  y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( pow )
/*__QOR_INTERFACE( __CQOR )*/ double pow( double x, double y )
{
    __QCS_FCONTEXT( "pow" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.pow( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float powf( float x, float y )
{
    __QCS_FCONTEXT( "powf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.powf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double powl( long double x, long double y )
{
    __QCS_FCONTEXT( "powl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.powl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

#pragma function( sqrt )
/*__QOR_INTERFACE( __CQOR )*/ double sqrt( double x )
{
    __QCS_FCONTEXT( "sqrt" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.sqrt( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float sqrtf( float x )
{
    __QCS_FCONTEXT( "sqrtf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.sqrtf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double sqrtl( long double x )
{
    __QCS_FCONTEXT( "sqrtl" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.sqrtl( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double erf( double x )
{
    __QCS_FCONTEXT( "erf" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.erf( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float erff( float x )
{
    __QCS_FCONTEXT( "erff" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.erff( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double erfl( long double x )
{
    __QCS_FCONTEXT( "erfl" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.erfl( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double erfc( double x )
{
    __QCS_FCONTEXT( "erfc" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.erfc( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float erfcf( float x )
{
    __QCS_FCONTEXT( "erfcf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.erfcf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double erfcl( long double x )
{
    __QCS_FCONTEXT( "erfcl" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.erfcl( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double lgamma( double x )
{
    __QCS_FCONTEXT( "lgamma" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.lgamma( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float lgammaf( float x )
{
    __QCS_FCONTEXT( "lgammaf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.lgammaf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double lgammal( long double x )
{
    __QCS_FCONTEXT( "lgammal" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.lgammal( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double tgamma( double x )
{
    __QCS_FCONTEXT( "tgamma" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.tgamma( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float tgammaf( float x )
{
    __QCS_FCONTEXT( "tgammaf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.tgammaf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double tgammal( long double x )
{
    __QCS_FCONTEXT( "tgammal" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.tgammal( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double ceil( double x )
{
    __QCS_FCONTEXT( "ceil" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.ceil( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float ceilf( float x )
{
    __QCS_FCONTEXT( "ceilf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.ceilf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double ceill( long double x )
{
    __QCS_FCONTEXT( "ceill" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.ceill( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

#pragma function( floor )
/*__QOR_INTERFACE( __CQOR )*/ double floor( double x )
{
    __QCS_FCONTEXT( "floor" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.floor( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float floorf( float x )
{
    __QCS_FCONTEXT( "floorf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.floorf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double floorl( long double x )
{
    __QCS_FCONTEXT( "floorl" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.floorl( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double nearbyint( double x )
{
    __QCS_FCONTEXT( "nearbyint" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.nearbyint( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float nearbyintf( float x )
{
    __QCS_FCONTEXT( "nearbyintf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.nearbyintf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double nearbyintl( long double x )
{
    __QCS_FCONTEXT( "nearbyintl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.nearbyintl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double rint( double x )
{
    __QCS_FCONTEXT( "rint" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.rint( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float rintf( float x )
{
    __QCS_FCONTEXT( "rintf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.rintf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double rintl( long double x )
{
    __QCS_FCONTEXT( "rintl" );

    long double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.rintl( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lrint( double x )
{
    __QCS_FCONTEXT( "lrint" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lrint( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lrintf( float x )
{
    __QCS_FCONTEXT( "lrintf" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lrintf( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lrintl( long double x )
{
    __QCS_FCONTEXT( "lrintl" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lrintl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llrint( double x )
{
    __QCS_FCONTEXT( "llrint" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llrint( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llrintf( float x )
{
    __QCS_FCONTEXT( "llrintf" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llrintf( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llrintl( long double x )
{
    __QCS_FCONTEXT( "llrintl" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llrintl( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double round( double x )
{
    __QCS_FCONTEXT( "round" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.round( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float roundf( float x )
{
    __QCS_FCONTEXT( "roundf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.roundf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double roundl( long double x )
{
    __QCS_FCONTEXT( "roundl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.roundl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lround( double x )
{
    __QCS_FCONTEXT( "lround" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lround( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lroundf( float x )
{
    __QCS_FCONTEXT( "lroundf" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lroundf( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long int lroundl( long double x )
{
    __QCS_FCONTEXT( "lroundl" );

    long int lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.lroundl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llround( double x )
{
    __QCS_FCONTEXT( "llround" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llround( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llroundf( float x )
{
    __QCS_FCONTEXT( "llroundf" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llroundf( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long long int llroundl( long double x )
{
    __QCS_FCONTEXT( "llroundl" );

    long long int llResult = 0;
    __QCS_PROTECT
    {
        llResult = _math.llroundl( x );
    }__QCS_ENDPROTECT
    return llResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double trunc( double x )
{
    __QCS_FCONTEXT( "trunc" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.trunc( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float truncf( float x )
{
    __QCS_FCONTEXT( "truncf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.truncf( x );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double truncl( long double x )
{
    __QCS_FCONTEXT( "truncl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.truncl( x );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------
#pragma function( fmod )

/*__QOR_INTERFACE( __CQOR )*/ double fmod( double x, double y )
{
    __QCS_FCONTEXT( "fmod" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fmod( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fmodf( float x, float y )
{
    __QCS_FCONTEXT( "fmodf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fmodf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fmodl( long double x, long double y )
{
    __QCS_FCONTEXT( "fmodl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fmodl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double remainder( double x, double y )
{
    __QCS_FCONTEXT( "remainder" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.remainder( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float remainderf( float x, float y )
{
    __QCS_FCONTEXT( "remainderf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.remainderf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double remainderl( long double x, long double y )
{
    __QCS_FCONTEXT( "remainderl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.remainderl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double remquo( double x, double y, int* quo )
{
    __QCS_FCONTEXT( "remquo" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.remquo( x, y, quo );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float remquof( float x, float y, int* quo )
{
    __QCS_FCONTEXT( "remquof" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.remquof( x, y, quo );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double remquol( long double x, long double y, int* quo )
{
    __QCS_FCONTEXT( "remquol" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.remquol( x, y, quo );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double copysign( double x, double y )
{
    __QCS_FCONTEXT( "copysign" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.copysign( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float copysignf( float x, float y )
{
    __QCS_FCONTEXT( "copysignf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.copysignf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double copysignl( long double x, long double y )
{
    __QCS_FCONTEXT( "copysignl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.copysignl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double nan( const char* tagp )
{
    __QCS_FCONTEXT( "nan" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.nan( tagp );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float nanf( const char* tagp )
{
    __QCS_FCONTEXT( "nanf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.nanf( tagp );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double nanl( const char* tagp )
{
    __QCS_FCONTEXT( "nanl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.nanl( tagp );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double nextafter( double x, double y )
{
    __QCS_FCONTEXT( "nextafter" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult =  _math.nextafter( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float nextafterf( float x, float y )
{
    __QCS_FCONTEXT( "nextafterf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.nextafterf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double nextafterl( long double x, long double y )
{
    __QCS_FCONTEXT( "nextafterl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.nextafterl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double nexttoward( double x, long double y )
{
    __QCS_FCONTEXT( "nexttoward" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.nexttoward( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float nexttowardf( float x, long double y )
{
    __QCS_FCONTEXT( "nexttowardf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.nexttowardf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double nexttowardl( long double x, long double y )
{
    __QCS_FCONTEXT( "nexttowardl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.nexttowardl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double fdim( double x, double y )
{
    __QCS_FCONTEXT( "fdim" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fdim( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fdimf( float x, float y )
{
    __QCS_FCONTEXT( "fdimf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fdimf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fdiml( long double x, long double y )
{
    __QCS_FCONTEXT( "fdiml" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fdiml( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double fmax( double x, double y )
{
    __QCS_FCONTEXT( "fmax" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fmax( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fmaxf( float x, float y )
{
    __QCS_FCONTEXT( "fmaxf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fmaxf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fmaxl( long double x, long double y )
{
    __QCS_FCONTEXT( "fmaxl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fmaxl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double fmin( double x, double y )
{
    __QCS_FCONTEXT( "fmin" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fmin( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fminf( float x, float y )
{
    __QCS_FCONTEXT( "fminf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fminf( x, y );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fminl( long double x, long double y )
{
    __QCS_FCONTEXT( "fminl" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fminl( x, y );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double fma( double x, double y, double z )
{
    __QCS_FCONTEXT( "fma" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.fma( x, y, z );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) float fmaf( float x, float y, float z )
{
    __QCS_FCONTEXT( "fmaf" );

    float fResult = 0;
    __QCS_PROTECT
    {
        fResult = _math.fmaf( x, y, z );
    }__QCS_ENDPROTECT
    return fResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) long double fmal( long double x, long double y, long double z )
{
    __QCS_FCONTEXT( "fmal" );

    long double lResult = 0;
    __QCS_PROTECT
    {
        lResult = _math.fmal( x, y, z );
    }__QCS_ENDPROTECT
    return lResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isgreater( long double x, long double y )
{
    __QCS_FCONTEXT( "isgreater" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isgreater( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isgreaterequal( long double x, long double y )
{
    __QCS_FCONTEXT( "isgreaterequal" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isgreaterequal( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isless( long double x, long double y )
{
    __QCS_FCONTEXT( "isless" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isless( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int islessequal( long double x, long double y )
{
    __QCS_FCONTEXT( "islessequal" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.islessgreater( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int islessgreater( long double x, long double y )
{
    __QCS_FCONTEXT( "islessgreater" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.islessgreater( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) int isunordered( long double x, long double y )
{
    __QCS_FCONTEXT( "isunordered" );

    int iResult = 0;
    __QCS_PROTECT
    {
        iResult = _math.isunordered( x, y );
    }__QCS_ENDPROTECT
    return iResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double j0( double x )
{
    __QCS_FCONTEXT( "j0" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.j0( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double j1( double x )
{
    __QCS_FCONTEXT( "j1" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.j1( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double jn( int n , double x )
{
    __QCS_FCONTEXT( "jn" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.jn( n, x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double scalb( double x, double y )
{
    __QCS_FCONTEXT( "scalb" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.scalb( x, y );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double y0( double x )
{
    __QCS_FCONTEXT( "y0" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.y0( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double _y0( double x )
{
    __QCS_FCONTEXT( "_y0" );
	return y0( x );
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double y1( double x )
{
    __QCS_FCONTEXT( "y1" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.y1( x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double _y1( double x )
{
    __QCS_FCONTEXT( "_y1" );
	return y1( x );
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double yn( int n, double x )
{
    __QCS_FCONTEXT( "yn" );

    double dResult = 0;
    __QCS_PROTECT
    {
        dResult = _math.yn( n, x );
    }__QCS_ENDPROTECT
    return dResult;
}

//--------------------------------------------------------------------------------

__QOR_INTERFACE( __CQOR ) double _yn( int n, double x )
{
    __QCS_FCONTEXT( "_yn" );
    return yn( n, x );
}

__QCMP_ENDLINKAGE_C
