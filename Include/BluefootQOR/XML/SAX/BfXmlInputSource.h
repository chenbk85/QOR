//BfXmlInputSource.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

// SAX Input Source

#ifndef BLUEFOOT_XML_SAX_INPUTSOURCE_H_3
#define BLUEFOOT_XML_SAX_INPUTSOURCE_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CompilerQOR.h"
#include <string>
#include "CodeQOR/Text/Char.h"

//------------------------------------------------------------------------------
namespace nsBluefoot
{
	class CXmlInputSourcePrivate;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __BLUEEFOOTQOR ) CXmlInputSource
	{
	public:

		CXmlInputSource();
		//CXmlInputSource( QIODevice* dev );
		virtual ~CXmlInputSource();

		virtual void SetData( const nsCodeQOR::CUCS2String& dat );
		virtual void SetData( const nsCodeQOR::CTLRef< byte >& dat);
		virtual void FetchData();
		virtual nsCodeQOR::CUCS2String Data() const;
		virtual nsCodeQOR::CChar16 Next();
		virtual void Reset();

		static const unsigned short EndOfData;
		static const unsigned short EndOfDocument;

	protected:

		//virtual std::string fromRawData( const QByteArray &data, bool beginning = false );
		virtual nsCodeQOR::CUCS2String FromRawData( const nsCodeQOR::CTLRef< byte > &data, bool beginning = false );

	private:

		void Init();
		CXmlInputSourcePrivate* d;
	};

}//nsBluefoot

#endif//BLUEFOOT_XML_SAX_INPUTSOURCE_H_3
