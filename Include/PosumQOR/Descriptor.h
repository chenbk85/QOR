//Descriptor.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Posum Descriptor object

#ifndef POSUMQOR_DESCRIPTOR_H_3
#define POSUMQOR_DESCRIPTOR_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include <fcntl.h>
#include <aio.h>
#include <stdarg.h>
#include "CodeQOR/DataStructures/TCRef.h"

//--------------------------------------------------------------------------------
namespace nsPosum
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __POSUMQOR ) CDescriptor
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CDescriptor );

		CDescriptor();
		CDescriptor( int nFD );		
		virtual ~CDescriptor();
		CDescriptor& operator = ( const CDescriptor& src );
			
		operator int( void )
		{
			return m_iDescriptor;
		}

		//dup
		//dup2

	protected:

		CDescriptor( int nFD, CDescriptor* pImpl );

		int m_iDescriptor;
		CDescriptor* m_pDescriptorImpl;

	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __POSUMQOR ) CIODescriptor : public CDescriptor
	{
	public:

		CIODescriptor();
		CIODescriptor( int nFD );		
		virtual ~CIODescriptor();
		CIODescriptor& operator = ( const CIODescriptor& src );


		virtual int Close( void );
		
		//dup
		//dup2
		virtual int FSync( void );
		virtual int IsATTY( void );
		virtual ssize_t Read( void* pBuffer, size_t nBytes );
		virtual ssize_t Write( const void* pBuffer, size_t nBytes );

	protected:

		CIODescriptor( int nFD, CIODescriptor* pImpl );

	private:

		CIODescriptor* PImpl( void );

	};


	//TODO: Descriptor set for select etc fd_set equivalent maybe nsCodeQOR::CTArray< CDescriptor > will do but derived Descriptor classes will need to work to
}//nsPosum

#endif//POSUMQOR_DESCRIPTOR_H_3
