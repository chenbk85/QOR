//Path.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Posum Path

#ifndef POSUMQOR_PATH_H_3
#define POSUMQOR_PATH_H_3

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE


#include "PosumQOR/String.h"
#include "PosumQOR/File.h"
#include "CodeQOR/DataTypes/GUID.h"
#include "CodeQOR/ClassReg/ClassRegEntry.h"

//--------------------------------------------------------------------------------
namespace nsPosum
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __POSUMQOR ) CPath
	{

	public:

		typedef nsCodeQOR::CTLRef< CPath > refType;

		__QOR_DECLARE_OCLASS_ID( CPath );
		
		CPath();
		CPath( const CPath& );
		CPath& operator = ( const CPath& );
		virtual ~CPath();		

		virtual CString ToString( void );
		CPath& operator + ( const CString& );	//navigate downwards
		CPath& operator -- ( void );			//navigate upwards

		//CFile::refType Open( void );				//Open the directory itelf as a file
		//CFile::refType Open( const CString& );	//Open the named file
		void Rename( const CString& strNewDirName );										//Rename the directory
		void Rename( const CString& strOldFileName, const CString& strNewFileName );		//Rename a File
		void Delete( void );																//Delete the directory
		void Delete( const CString& strFile );												//Delete a File
		CPath::refType Make( const CString& );												//Make a new directory

		static CPath::refType Root( void );													//Return root path
		static CPath::refType Home( void );													//Return home path

	protected:

		CPath( CPath* pImpl );		

	private:

		CPath* m_pImpl;
		CPath* PImpl( void );
	};

}//nsPosum

#endif//POSUMQOR_PATH_H_3
