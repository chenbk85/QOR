//QGBrush.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "Qurses/QursesPolicy.h"
#include "CodeQOR/DataTypes/GUID.h"
#include "CodeQOR/Macros/ClassIdentityMacros.h"
#include "CodeQOR/DataStructures/TLRef.h"

#ifndef QURSES_GUI_BRUSH_H_3
#define	QURSES_GUI_BRUSH_H_3

struct _win;

//--------------------------------------------------------------------------------
namespace nsQurses
{
	class __QOR_INTERFACE( QURSES_QOR ) CQGWindow;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( QURSES_QOR ) CQGBrush
	{

	public:		

		typedef nsCodeQOR::CTLRef< CQGBrush > refType;

		//--------------------------------------------------------------------------------
		enum eAtrib
		{
			eUnderline	= 0x0010,
			eReverse	= 0x0020,
			eBlink		= 0x0040,
			eBold		= 0x0080,
		};

		__QOR_DECLARE_OCLASS_ID( CQGBrush );

		CQGBrush();
		~CQGBrush();

		//--------------------------------------------------------------------------------
		refType Ref( void )
		{
			return refType( this, false );
		}

		CQGWindow* Select( CQGWindow& Target );
		CQGWindow* Deselect( void );

		void SetStandout( bool );
		bool GetStandout( void );
		void SetReverse( bool );
		bool GetReverse( void );
		void SetBold( bool );
		bool GetBold( void );
		void SetDim( bool );
		bool GetDim( void );
		void SetBlink( bool );
		bool GetBlink( void );
		void SetUnderline( bool );
		bool GetUnderline( void );

		void SetPaletteColour( unsigned char );
		unsigned char GetPaletteColour( void );

	protected:

		unsigned short m_usSpec;
		CQGWindow* m_pTarget;
	};

}//nsQurses

#endif//QURSES_GUI_BRUSH_H_3


