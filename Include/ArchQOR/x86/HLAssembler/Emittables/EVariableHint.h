//EVariableHint.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

// Variable hint.

#ifndef ARCHQOR_X86PC_HLASSEMBLER_EVARIABLEHINT_H_2
#define ARCHQOR_X86PC_HLASSEMBLER_EVARIABLEHINT_H_2

#include "CompilerQOR.h"
#include "ArchQOR/Common/HLAssembler/Emittables/Emittable.h"

//------------------------------------------------------------------------------
namespace nsArch
{
//------------------------------------------------------------------------------
namespace nsx86
{		
	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __ARCHQOR ) CEVariableHint : public nsArch::CEmittable
	{
	public:

		__QOR_DECLARE_OCLASS_ID(CEVariableHint);

		CEVariableHint( nsArch::CHighLevelAssemblerBase* c, VarData* vdata, Cmp_unsigned__int32 hintId, Cmp_unsigned__int32 hintValue ) __QCMP_THROW;
		virtual ~CEVariableHint() __QCMP_THROW;

		virtual void prepare( CHLAssemblerContextBase& cc ) __QCMP_THROW;
		virtual nsArch::CEmittable* translate( CHLAssemblerContextBase& cc ) __QCMP_THROW;
		virtual int getMaxSize() const __QCMP_THROW;

		//------------------------------------------------------------------------------
		// Get assigned variable (data).
		inline VarData* getVar() const __QCMP_THROW 
		{ 
			return m_pVdata; 
		}

		//------------------------------------------------------------------------------
		// Get hint it (see VARIABLE_HINT).
		inline Cmp_unsigned__int32 getHintId() const __QCMP_THROW 
		{ 
			return m_uiHintId; 
		}

		//------------------------------------------------------------------------------
		// Get hint value.
		inline Cmp_unsigned__int32 getHintValue() const __QCMP_THROW 
		{ 
			return m_uiHintValue; 
		}

		//------------------------------------------------------------------------------
		// Set hint it (see VARIABLE_HINT).
		inline void setHintId( Cmp_unsigned__int32 hintId ) __QCMP_THROW 
		{ 
			m_uiHintId = hintId; 
		}

		//------------------------------------------------------------------------------
		// Set hint value.
		inline void setHintValue( Cmp_unsigned__int32 hintValue ) __QCMP_THROW 
		{ 
			m_uiHintValue = hintValue; 
		}

	protected:

		VarData* m_pVdata;
		Cmp_unsigned__int32 m_uiHintId;
		Cmp_unsigned__int32 m_uiHintValue;
	};

}//nsx86
}//nsArch

#endif//ARCHQOR_X86PC_HLASSEMBLER_EVARIABLEHINT_H_2
