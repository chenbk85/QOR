//i486.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef ARCHQOR_ISET_I486_H_2
#define ARCHQOR_ISET_I486_H_2

#include "i386CPU.h"
#include "Extensions/i387FPU.h"

//--------------------------------------------------------------------------------
namespace nsArch
{
	//--------------------------------------------------------------------------------
	namespace nsx86
	{
		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE( __ARCHQOR ) Ci486CPU : public Ci386CPU
		{
		public:

			Ci486CPU( CCodeGeneratorBase* codeGenerator );
			virtual ~Ci486CPU() __QCMP_THROW;
			void bswap( const CGPReg& dst );
			void cmpxchg( const CGPReg& dst, const CGPReg& src );
			void cmpxchg( const CMem& dst, const CGPReg& src );
			void cpuid();
			void xadd( const CGPReg& dst, const CGPReg& src );
			void xadd( const CMem& dst, const CGPReg& src );

		protected:

			__QCS_DECLARE_NONCOPYABLE( Ci486CPU );

		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE( __ARCHQOR ) C486FPU : public C387FPU
		{
		public:

			C486FPU( Cx86CPUCore& refCPU );
			virtual ~C486FPU();

			__QCS_DECLARE_NONCOPYABLE( C486FPU );
		};

	}//nsx86

}//nsArch

#endif//ARCHQOR_ISET_I486_H_2
