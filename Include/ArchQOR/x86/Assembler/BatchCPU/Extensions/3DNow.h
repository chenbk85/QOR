//3DNow.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef ARCHQOR_ISET_X86_3DNOW_H_2
#define ARCHQOR_ISET_X86_3DNOW_H_2

#include "CompilerQOR.h"
#include "ArchQOR/Common/Assembler/BatchCPU/FPUBase.h"
#include "ArchQOR/x86/Assembler/BatchCPU/x86CPUCore.h"
#include "ArchQOR/x86/Assembler/Operands/Registers/MMReg.h"
#include "ArchQOR/x86/Assembler/Operands/Registers/XMMReg.h"
#include "ArchQOR/x86/Assembler/Operands/Registers/GPReg.h"
#include "ArchQOR/x86/Assembler/Operands/Mem.h"
#include "ArchQOR/x86/Assembler/Operands/Registers/X87Reg.h"
#include "ArchQOR/x86/Assembler/Operands/Imm.h"
#include "ArchQOR/x86/Assembler/Operands/Label.h"
#include "ArchQOR/x86/Assembler/BatchCPU/x86ISetExtension.h"

//------------------------------------------------------------------------------
namespace nsArch
{
	//------------------------------------------------------------------------------
	namespace nsx86
	{
		//------------------------------------------------------------------------------
		class __QOR_INTERFACE( __ARCHQOR ) C3DNOW : public Cx86ISetExtension
		{
		public:

			C3DNOW( Cx86CPUCore& refCPU );
			virtual ~C3DNOW();
			void femms();
			void pf2id( const CMMReg& dst, const CMMReg& src );
			void pf2id( const CMMReg& dst, const CMem& src );
			void pf2iw( const CMMReg& dst, const CMMReg& src );
			void pf2iw( const CMMReg& dst, const CMem& src );
			void pfacc( const CMMReg& dst, const CMMReg& src );
			void pfacc( const CMMReg& dst, const CMem& src );
			void pfadd( const CMMReg& dst, const CMMReg& src );
			void pfadd( const CMMReg& dst, const CMem& src );
			void pfcmpeq( const CMMReg& dst, const CMMReg& src );
			void pfcmpeq( const CMMReg& dst, const CMem& src );
			void pfcmpge( const CMMReg& dst, const CMMReg& src );
			void pfcmpge( const CMMReg& dst, const CMem& src );
			void pfcmpgt( const CMMReg& dst, const CMMReg& src );
			void pfcmpgt( const CMMReg& dst, const CMem& src );
			void pfmax( const CMMReg& dst, const CMMReg& src );
			void pfmax( const CMMReg& dst, const CMem& src );
			void pfmin( const CMMReg& dst, const CMMReg& src );
			void pfmin( const CMMReg& dst, const CMem& src );
			void pfmul( const CMMReg& dst, const CMMReg& src );
			void pfmul( const CMMReg& dst, const CMem& src );
			void pfnacc( const CMMReg& dst, const CMMReg& src );
			void pfnacc( const CMMReg& dst, const CMem& src );
			void pfpnaxx( const CMMReg& dst, const CMMReg& src );
			void pfpnacc( const CMMReg& dst, const CMem& src );
			void pfrcp( const CMMReg& dst, const CMMReg& src );
			void pfrcp( const CMMReg& dst, const CMem& src );
			void pfrcpit1( const CMMReg& dst, const CMMReg& src );
			void pfrcpit1( const CMMReg& dst, const CMem& src );
			void pfrcpit2( const CMMReg& dst, const CMMReg& src );
			void pfrcpit2( const CMMReg& dst, const CMem& src );
			void pfrsqit1( const CMMReg& dst, const CMMReg& src );
			void pfrsqit1( const CMMReg& dst, const CMem& src );
			void pfrsqrt( const CMMReg& dst, const CMMReg& src );
			void pfrsqrt( const CMMReg& dst, const CMem& src );
			void pfsub( const CMMReg& dst, const CMMReg& src );
			void pfsub( const CMMReg& dst, const CMem& src );
			void pfsubr( const CMMReg& dst, const CMMReg& src );
			void pfsubr( const CMMReg& dst, const CMem& src );
			void pi2fd( const CMMReg& dst, const CMMReg& src );
			void pi2fd( const CMMReg& dst, const CMem& src );
			void pi2fw( const CMMReg& dst, const CMMReg& src );
			void pi2fw( const CMMReg& dst, const CMem& src );
			void pswapd( const CMMReg& dst, const CMMReg& src );
			void pswapd( const CMMReg& dst, const CMem& src );
			void amd_prefetch( const CMem& mem );
			void amd_prefetchw( const CMem& mem );

			__QCS_DECLARE_NONCOPYABLE( C3DNOW );
		};

	}//nsx86

}//nsArch

#endif//ARCHQOR_ISET_X86_3DNOW_H_2
