//X87Var.h

// Copyright (c) 2008-2010, Petr Kobalicek <kobalicek.petr@gmail.com>
// Copyright (c) Querysoft Limited 2012
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//x87 FPU variable for x86 assembler

#ifndef ARCHQOR_X86PC_ASSEMBLERX87VAR_H_2
#define ARCHQOR_X86PC_ASSEMBLERX87VAR_H_2

#include "../Registers/BaseReg.h"
#include "BaseVar.h"

//------------------------------------------------------------------------------
namespace nsArch
{
//------------------------------------------------------------------------------
namespace nsx86
{
	//------------------------------------------------------------------------------
	// X87 Variable operand.
	class __QOR_INTERFACE( __ARCHQOR ) CX87Var : public CBaseVar
	{
	public:

		//------------------------------------------------------------------------------
		inline CX87Var( const nsCodeQOR::_DontInitialize& dontInitialize ) __QCMP_THROW : CBaseVar( dontInitialize )
		{
		}

		//------------------------------------------------------------------------------
		inline CX87Var() __QCMP_THROW : CBaseVar( nsCodeQOR::_DontInitialize() )
		{
			m_Op = EOPERAND_VAR;
			m_Size = 12;
			m_Id = static_cast< Cmp_unsigned__int32 >( INVALID_VALUE );

			m_RegisterCode = REG_TYPE_X87;
			m_VariableType = VARIABLE_TYPE_X87;
		}

		//------------------------------------------------------------------------------
		inline CX87Var( const CX87Var& other ) __QCMP_THROW : CBaseVar( other ) 
		{
		}

		//------------------------------------------------------------------------------
		inline CX87Var& operator = ( const CX87Var& other ) __QCMP_THROW
		{ 
			Init( other ); 
			return *this; 
		}

		//------------------------------------------------------------------------------
		inline bool operator == ( const CX87Var& other ) const __QCMP_THROW 
		{ 
			return m_Id == other.m_Id; 
		}

		//------------------------------------------------------------------------------
		inline bool operator != ( const CX87Var& other ) const __QCMP_THROW 
		{ 
			return m_Id != other.m_Id; 
		}

		virtual COperand* Clone( CZone& zone ) const;

	};

}//nsx86
}//nsArch

#endif//ARCHQOR_X86PC_ASSEMBLERX87VAR_H_2
