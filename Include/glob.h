//glob.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_GLOB_H_3
#define QOR_GLOB_H_3

#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(glob)

typedef nsPlatform::glob_t glob_t;
#if		(!__QCMP_FEATURE_PREDEFINESSIZE_T)
typedef nsPlatform::size_t size_t;
#endif//(!__QCMP_FEATURE_PREDEFINESSIZE_T)

#define GLOB_APPEND				( nsPlatform::GlobAppend )			//Append generated pathnames to those previously obtained. 
#define GLOB_DOOFFS				( nsPlatform::GlobDoOffset )		//Specify how many null pointers to add to the beginning of gl_pathv. 
#define GLOB_ERR				( nsPlatform::GlobError )			//Cause glob() to return on error. 
#define GLOB_MARK				( nsPlatform::GlobMark )			//Each pathname that is a directory that matches pattern has a <slash> appended. 
#define GLOB_NOCHECK			( nsPlatform::GlobNoCheck )			//If pattern does not match any pathname, then return a list consisting of only pattern. 
#define GLOB_NOESCAPE			( nsPlatform::GlobNoEscape )		//Disable backslash escaping. 
#define GLOB_NOSORT				( nsPlatform::GlobNoSort )			//Do not sort the pathnames returned. 

#define GLOB_ABORTED			( nsPlatform::GlobAborted )			//The scan was stopped because GLOB_ERR was set or (*errfunc)() returned non-zero. 
#define GLOB_NOMATCH			( nsPlatform::GlobNoMatch )			//The pattern does not match any existing pathname, and GLOB_NOCHECK was not set in flags. 
#define GLOB_NOSPACE			( nsPlatform::GlobNoSpace )			//An attempt to allocate memory failed. 

__QCMP_STARTLINKAGE_C

    __QOR_INTERFACE( __CQOR ) int glob( const char* __QCMP_RESTRICT szPattern, int iFlags, int (*ErrFunc)( const char*, int ), glob_t* __QCMP_RESTRICT pGlob );
    __QOR_INTERFACE( __CQOR ) void globfree( glob_t* pGlob );

__QCMP_ENDLINKAGE_C

#endif//QOR_GLOB_H_3
