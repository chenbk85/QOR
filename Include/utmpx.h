//utmpx.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_UTMPX_H_3
#define QOR_UTMPX_H_3

#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(utmpx)

typedef nsPlatform::utmpx utmpx;
typedef nsPlatform::pid_t pid_t;
typedef nsPlatform::timeval timeval;

//the following symbolic constants as possible values for the ut_type member of the utmpx structure:

#define EMPTY				( nsPlatform::Empty )				//No valid user accounting information. 
#define BOOT_TIME			( nsPlatform::BootTime )			//Identifies time of system boot. 
#define OLD_TIME			( nsPlatform::OldTime )				//Identifies time when system clock changed. 
#define NEW_TIME			( nsPlatform::NewTime )				//Identifies time after system clock changed. 
#define USER_PROCESS		( nsPlatform::UserProcess )			//Identifies a process. 
#define INIT_PROCESS		( nsPlatform::InitProcess )			//Identifies a process spawned by the init process. 
#define LOGIN_PROCESS		( nsPlatform::LoginProcess )		//Identifies the session leader of a logged-in user. 
#define DEAD_PROCESS		( nsPlatform::DeadProcess )			//Identifies a session leader who has exited. 

__QCMP_STARTLINKAGE_C

	__QOR_INTERFACE( __CQOR ) void endutxent( void );
	__QOR_INTERFACE( __CQOR ) ::utmpx* getutxent( void );
	__QOR_INTERFACE( __CQOR ) ::utmpx* getutxid( const ::utmpx* );
	__QOR_INTERFACE( __CQOR ) ::utmpx* getutxline( const ::utmpx* );
	__QOR_INTERFACE( __CQOR ) ::utmpx* pututxline( const ::utmpx* );
	__QOR_INTERFACE( __CQOR ) void setutxent( void );

__QCMP_ENDLINKAGE_C

#endif//QOR_UTMPX_H_3

