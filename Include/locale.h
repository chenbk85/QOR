//locale.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_LOCALE_H_3
#define QOR_LOCALE_H_3

#include <stddef.h>
#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(locale)

typedef nsPlatform::lconv lconv;
typedef nsPlatform::locale_t locale_t;

#define LC_ALL				( nsPlatform::LocaleCategoryAll )		
#define LC_COLLATE			( nsPlatform::LocaleCategoryCollate )		
#define LC_CTYPE			( nsPlatform::LocaleCategoryCType )		
#define LC_MESSAGES			( nsPlatform::LocaleCategoryMessages )		
#define LC_MONETARY			( nsPlatform::LocaleCategoryMonetary )		
#define LC_NUMERIC			( nsPlatform::LocaleCategoryNumeric )		
#define LC_TIME				( nsPlatform::LocaleCategoryTime )		

#define LC_COLLATE_MASK		( nsPlatform::LocaleCategoryCollateMask )
#define LC_CTYPE_MASK		( nsPlatform::LocaleCategoryCTypeMask )
#define LC_MESSAGES_MASK	( nsPlatform::LocaleCategoryMessagesMask )
#define LC_MONETARY_MASK	( nsPlatform::LocaleCategoryMonetaryMask )
#define LC_NUMERIC_MASK		( nsPlatform::LocaleCategoryNumericMask )
#define LC_TIME_MASK		( nsPlatform::LocaleCategoryTimeMask )
#define LC_ALL_MASK			( nsPlatform::LocaleCategoryAllMask )

#define  LC_GLOBAL_LOCALE	( nsPlatform::GetGlobalLocale() )

__QCMP_STARTLINKAGE_C

	__QOR_INTERFACE( __CQOR ) ::locale_t duplocale( ::locale_t l );
	__QOR_INTERFACE( __CQOR ) void freelocale( ::locale_t l );
	__QOR_INTERFACE( __CQOR ) ::lconv* localeconv( void );
	__QOR_INTERFACE( __CQOR ) ::locale_t newlocale( int, const char*, ::locale_t );
    __QOR_INTERFACE( __CQOR ) char* setlocale( int category, const char* szLocale );
    __QOR_INTERFACE( __CQOR ) ::locale_t uselocale( ::locale_t l );
	__QOR_INTERFACE( __CQOR ) ::lconv* localeconv_l( ::locale_t loc );

__QCMP_ENDLINKAGE_C

#endif //QOR_LOCALE_H_3

