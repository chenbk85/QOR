//SectionLock.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Critical section lock template

#ifndef CODEQOR_SYNC_SECTIONLOCK_H_1
#define CODEQOR_SYNC_SECTIONLOCK_H_1

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

//--------------------------------------------------------------------------------
namespace nsCodeQOR
{
	//--------------------------------------------------------------------------------
	template< class TSection >
	class CSectionLock
	{
	public:

		//--------------------------------------------------------------------------------
		CSectionLock( TSection& Section ) : m_Section( Section )
		{
			m_Section.Acquire();
		}

		//--------------------------------------------------------------------------------
		~CSectionLock()
		{
			m_Section.Release();
		}

	private:

		TSection& m_Section;

		CSectionLock();//No default constructor
		CSectionLock( const CSectionLock& src );//No copy constructor
		CSectionLock& operator = ( const CSectionLock& src );//No assignment operator
	};

}//nsCodeQOR

#endif//CODEQOR_SYNC_SECTIONLOCK_H_1
