//Char16.h

// Copyright Querysoft Limited 2015 - . All rights reserved.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.


#ifndef CODEQOR_CHAR16_H_3
#define CODEQOR_CHAR16_H_3

#include "CompilerQOR.h"
#include "TChar.h"
#include "CodeQOR/Text/TString.h"

//------------------------------------------------------------------------------
namespace nsCodeQOR
{
	class __QOR_INTERFACE( __CODEQOR ) CChar32;
	class __QOR_INTERFACE( __CODEQOR ) CChar8;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __CODEQOR ) CChar16 : public CChar< unsigned short >
	{
		friend class CChar8;
		friend class CChar32;

	public:

		CChar16();
		CChar16( int ch );
		CChar16( const unsigned int& ch );
		CChar16( const unsigned short& ch );
		CChar16( const short& rc );
		CChar16( const byte& ch );
		explicit CChar16( const CChar8& ch );
		CChar16( const CChar16& ch );
		explicit CChar16( const CChar32& ch );
		CChar16( byte ucLowByte, byte ucHighByte );
		CChar16( eSpecialCharacter sc );

		CChar16 MirroredChar() const;
		CTString< CChar16 > Decomposition() const;

		CChar16 ToLower() const;
		CChar16 ToUpper() const;
		CChar16 ToTitleCase() const;
		CChar16 ToCaseFolded() const;
		const char ToAscii() const;
		static CChar16 FromAscii( char c );
		inline const unsigned short Unicode( void ) const;
		inline unsigned short& Unicode( void );
		CChar8 ToLocal8Bit( void ) const;
		inline bool IsHighSurrogate() const;
		inline bool IsLowSurrogate() const;
		inline unsigned char cell() const;
		inline unsigned char row() const;
		inline void setCell( unsigned char acell );
		inline void setRow( unsigned char arow );

		friend __QOR_INTERFACE( __CODEQOR ) bool operator == ( const CChar16& x0, const CChar16& x1 );
		friend __QOR_INTERFACE( __CODEQOR ) bool operator != ( const CChar16& x0, const CChar16& x1 );
		friend __QOR_INTERFACE( __CODEQOR ) bool operator <= ( const CChar16& x0, const CChar16& x1 );
		friend __QOR_INTERFACE( __CODEQOR ) bool operator >= ( const CChar16& x0, const CChar16& x1 );
		friend __QOR_INTERFACE( __CODEQOR ) bool operator < ( const CChar16& x0, const CChar16& x1 );
		friend __QOR_INTERFACE( __CODEQOR ) bool operator > ( const CChar16& x0, const CChar16& x1 );

		friend __QOR_INTERFACE( __CODEQOR ) bool operator != ( const CChar16& x0, const int x1 );
	};

	__QOR_INTERFACE( __CODEQOR ) bool operator == ( const CChar16& x0, const CChar16& x1 );
	__QOR_INTERFACE( __CODEQOR ) bool operator != ( const CChar16& x0, const CChar16& x1 );
	__QOR_INTERFACE( __CODEQOR ) bool operator <= ( const CChar16& x0, const CChar16& x1 );
	__QOR_INTERFACE( __CODEQOR ) bool operator >= ( const CChar16& x0, const CChar16& x1 );
	__QOR_INTERFACE( __CODEQOR ) bool operator < ( const CChar16& x0, const CChar16& x1 );
	__QOR_INTERFACE( __CODEQOR ) bool operator > ( const CChar16& x0, const CChar16& x1 );

	__QOR_INTERFACE( __CODEQOR ) bool operator != ( const CChar16& x0, const int x1 );

}//nsCodeQOR

#include "CodeQOR/Text/TExtString.h"

//#ifndef QT_NO_DATASTREAM
//Q_CORE_EXPORT QDataStream &operator<<(QDataStream &, const QChar &);
//Q_CORE_EXPORT QDataStream &operator>>(QDataStream &, QChar &);
//#endif


#endif//CODEQOR_CHAR16_H_3
