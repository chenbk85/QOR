//CompilerFeatures.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Defines the things compilers are supposed to support but might not
// and some test macros for conditional compilation in case of a feature deficit
//We do this so that a completely conforming compiler will require the least work

//This list only needs modifying if a new feature test is needed
//Each compiler header should selectively #undef exactly the features it doesn't support

//Ultimately this list should be tied to the elements of the C++ specification itself - e.g. __QCMP_FEATURE_DESCRIPTION_N239

//------------------------------------------------------------------------------
//Feature access macros

//#	define _QCMPSUPPORTED												0
#	define __QCMP_DOESNT_SUPPORT( _X )									( !_X )
#	define __QCMP_SUPPORTS( _X )										_X

//	X								-->		__QCMP_FEATURE_TEST_X (0)
//	__QCMP_FEATURE_TEST_1			-->		0)(1							-->		( 0)(1 ) (0)							-select item 1 from sequence->		1
//	__QCMP_FEATURE_TEST_undefined	-->		__QCMP_FEATURE_TEST_undefined	-->		( __QCMP_FEATURE_TEST_undefined ) (0)	-select item 1 from sequence->		0
#	define __QCMP_FEATURE_TEST( _X )									__QCMP_FEATURE_TEST2( QOR_PP_CAT( __QCMP_FEATURE_TEST_, _X ), (0) )
#	define __QCMP_FEATURE_TEST_1										0)(1
#	define __QCMP_FEATURE_TEST2( _A, _B )								QOR_PP_SEQ_ELEM( 1, (_A)_B )

#	define __QCMP_EXTENSION( _X ) 										__QCMP_FEATURE_TEST( QOR_PP_CAT(_X,_QCMPSUPPORTED) )

//------------------------------------------------------------------------------
//C++ Compiler Features

//Preprocessor
#	define __QCMP_FEATURE_VARIADIC_MACROS								1
#	define __QCMP_FEATURE_PRAGMA_SYSTEM_HEADER							1
#	define __QCMP_FEATURE_PRAGMA_ONCE									1

//Built in types
#	define __QCMP_FEATURE_PREDEFINESSIZE_T								1	//size_t is a built in type
#	define __QCMP_FEATURE_HASLONGLONG									1	//long long is a built in type
#	define __QCMP_FEATURE_DEFAULTSIGNEDCHAR								1	//char is signed by default
#	define __QCMP_FEATURE_NATIVEWCHARTSUPPORT							1	//wchar_t is a built in type, optional on some compilers

//Initialization
#	define __QCMP_FEATURE_FUNCTION_CALL_IN_STATIC_CONST_DATA_INIT		1	//Compiler will auto insert function call as necessary when static init data is result of function
#	define __QCMP_FEATURE_CONSTANT_INITIALISATION						1	//struct s{ const int pi = 3.14159265; }; is allowed

#	define __QCMP_FEATURE_64BIT_CONSTANTS								1

//C++ casting
#	define __QCMP_FEATURE_CASTOPERATORS									1

//Templates
#	define __QCMP_FEATURE_TEMPLATE_MEMBER_TEMPLATES_MSVC_BUGGED			0	//  define a special case for the complex bugged member template support in VC 6 and 7

//Detailed template support to be added

//#	define __QCMP_FEATURE_TEMPLATE_MEMBER_FUNCTION_SPECIALIZATION		1
//#	define __QCMP_FEATURE_TEMPLATE_DEPENDENT_TYPES_IN_VALUE_PARAMETERS	1
//#	define __QCMP_FEATURE_TEMPLATE_EXPLICIT_FUNCTION_ARGUMENTS			1
//#	define __QCMP_FEATURE_TEMPLATE_ARGUMENT_DEPENDENT_LOOKUP			1
#	define __QCMP_FEATURE_TEMPLATE_DEDUCED_TYPENAME						1
//#	define __QCMP_FEATURE_TEMPLATE_USING_DECL_OVERLOADS_FROM_TYPENAME_BASE	1

//#	define __QCMP_FEATURE_MEMBER_TEMPLATE_FRIENDS						1
#	define __QCMP_FEATURE_TEMPLATE_PARTIAL_SPECIALIZATION				1
//#	define __QCMP_FEATURE_TEMPLATE_CV_VOID_SPECIALIZATIONS				1
//#	define __QCMP_FEATURE_TEMPLATE_FUNCTION_TEMPLATE_ORDERING			1
//#	define __QCMP_FEATURE_TEMPLATE_USING_TEMPLATE						1
#	define __QCMP_FEATURE_TEMPLATE_TEMPLATE_TEMPLATES					1
//#	define __QCMP_FEATURE_TEMPLATE_SFINAE								1
//#	define __QCMP_FEATURE_TEMPLATE_POINTER_TO_MEMBER_PARAMETERS			1
//#	define __QCMP_FEATURE_TEMPLATE_MEMBER_FRIENDS						1
//#	define __QCMP_FEATURE_TEMPLATE_ALIASES								1

//C++11 features to be added
#	define __QCMP_FEATURE_RVALUE_REFERENCES								1
#	define __QCMP_FEATURE_REFERENCED_QUALIFIED_FUNCTIONS				1
#	define __QCMP_FEATURE_NON_STATIC_DATA_MEMBER_INITIALIZERS			1
#	define __QCMP_FEATURE_VARIADIC_TEMPLATES							1
#	define __QCMP_FEATURE_INITIALIZER_LISTS								1
#	define __QCMP_FEATURE_STATIC_ASSERT									1
#	define __QCMP_FEATURE_AUTO											1
#	define __QCMP_FEATURE_TRAILING_RETURN_TYPES							1
#	define __QCMP_FEATURE_LAMBDAS										1
#	define __QCMP_FEATURE_DECLTYPE										1
#	define __QCMP_FEATURE_RIGHT_ANGLE_BRACKETS							1
#	define __QCMP_FEATURE_DEF_TMPL_ARGS_FOR_FUNC_TMPLS					1
#	define __QCMP_FEATURE_ADVANCED_SFINAE								1
#	define __QCMP_FEATURE_ALIAS_TEMPLATES								1
#	define __QCMP_FEATURE_EXTERN_TEMPLATES								1
#	define __QCMP_FEATURE_NULL_PTR_TYPE									1
#	define __QCMP_FEATURE_STRONGLY_TYPED_ENUMS							1
#	define __QCMP_FEATURE_FORWARD_DECL_ENUMS							1
#	define __QCMP_FEATURE_ATTRIBUTES									1
#	define __QCMP_FEATURE_CONSTEXPR										1
#	define __QCMP_FEATURE_ALIGNMENT										1
#	define __QCMP_FEATURE_DELEGATING_CONSTRUCTORS						1
#	define __QCMP_FEATURE_INHERITING_CONSTRUCTORS						1
#	define __QCMP_FEATURE_EXPLICIT_CONVERSIONS							1
#	define __QCMP_FEATURE_CHAR16_T										1
#	define __QCMP_FEATURE_UNICODE_STRING_LITERALS						1
#	define __QCMP_FEATURE_RAW_STRING_LITERALS							1
#	define __QCMP_FEATURE_UNIVERSAL_CHARACTER_NAMES_IN_LITERALS			1
#	define __QCMP_FEATURE_USER_DEFINED_LITERALS							1
#	define __QCMP_FEATURE_STANDARD_LAYOUT_AND_TRIVIAL_TYPES				1
#	define __QCMP_FEATURE_DEFAULTED_AND_DELETED_FUNCTIONS				1
#	define __QCMP_FEATURE_EXTENDED_FRIEND_DECLARATIONS					1
#	define __QCMP_FEATURE_EXTENDED										1
#	define __QCMP_FEATURE_INLINE_NAMESPACES								1
#	define __QCMP_FEATURE_UNRESTRICTED_UNIONS							1
#	define __QCMP_FEATURE_LOCAL_AND_UNAMED_AS_TEMPLATE_ARGS				1
#	define __QCMP_FEATURE_RANGE_BASED_FOR_LOOP							1
#	define __QCMP_FEATURE_OVERRIDE_AND_FINAL							1
#	define __QCMP_FEATURE_NOEXCEPT										1

#	define __QCMP_FEATURE_TYPENAME_ON_DEPENDENTTYPE_IN_DEF_TEML_PARAM	1
#	define __QCMP_FEATURE_REQUIRES_USING_TO_ACCESS_TEMPLATE_BASE		1

#	define __QCMP_FEATURE_HAS_IS_POD									1

#	define __QCMP_FEATURE_DEFAULT_TEMPLATE_ARGS_ON_TEMPLATE_FUNCTION	1		//clang allows default template parameters on template member funcs
#	define __QCMP_FEATURE_TEMPLATE_TEMPLATE_MEMBERS_AT_FILE_SCOPE		1		//clang implements template members of template classes outside the class declaration, MSVC must have them inside
/*
#	define __QCMP_FEATURE_GENERALISED_INITIALIZERS						1
#	define __QCMP_FEATURE_HAS_IS_UNION									1
#	define __QCMP_FEATURE_HAS_IS_CLASS									1
#	define __QCMP_FEATURE_HAS_IS_ENUM									1
#	define __QCMP_FEATURE_HAS_IS_CONVERTIBLE_TO							1
#	define __QCMP_FEATURE_HAS_IS_EMPTY									1
#	define __QCMP_FEATURE_HAS_IS_POLYMORPHIC							1
#	define __QCMP_FEATURE_HAS_VIRTUAL_DESTRUCTOR						1
#	define __QCMP_FEATURE_HAS_IS_TRIVIALLY_CONSTRUCTIBLE				1
#	define __QCMP_FEATURE_HAS_IS_TRIVIALLY_ASSIGNABLE					1
#	define __QCMP_FEATURE_HAS_IS_TRIVIALLY_COPYABLE						1
#	define __QCMP_FEATURE_HAS_IS_TRIVIAL								1
#	define __QCMP_FEATURE_HAS_TRIVIAL_DESTRUCTOR						1
#	define __QCMP_FEATURE_HAS_NOTHROW_CONSTRUCTOR						1
#	define __QCMP_FEATURE_HAS_NOTHROW_COPY								1
#	define __QCMP_FEATURE_HAS_NOTHROW_ASSIGN							1

#	define __QCMP_FEATURE_HAS_IS_LITERAL								1
#	define __QCMP_FEATURE_HAS_IS_STANDARD_LAYOUT						1
#	define __QCMP_FEATURE_HAS_IS_FINAL									1


*/

#	define __QCMP_FEATURE_NVRO											1	//BOOST_HAS_NRVO
