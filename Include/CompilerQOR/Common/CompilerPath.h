//CompilerPath.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Set the include path to the one for the selected compiler
//Determine the inclusion paths for standardized compiler headers

#ifndef QCMP_COMPILERPATH_H_1
#define QCMP_COMPILERPATH_H_1

//Determine the exact compiler version
#	define __QCMP_COMPILER_VERSION_HEADER	\
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_ROOT_FOLDER,/Version.h) ) )

#ifdef __QCMP_COMPILER_VERSION_HEADER
#		include __QCMP_COMPILER_VERSION_HEADER
#endif


//Set up the compiler header paths according to the version detected
#	define __QCMP_COMPILER_PATH	\
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,__QCMP_COMPILER_FOLDER) )

#	define __QCMP_COMPILER_INCLUDE \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,__QCMP_COMPILER_HEADER) )

#	define __QCMP_COMPILER_UNFEATURE_INCLUDE \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/Unfeature.h)))

#	define __QCMP_COMPILER_DEPCOMMON_INCLUDE \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_ROOT_FOLDER,/DependentCommon.h)))

#	define __QCMP_BUILTINS_HEADER \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/Builtins.h)))

#	define __QCMP_UNBUILTINS_HEADER \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/UnBuiltins.h)))

#	define __QCMP_BUILTINS_INC \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/Builtins.inl)))

#	define __QCMP_INTRINSICS_HEADER \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/Intrinsics.h)))

#	define __QCMP_INTRINSICS_INC \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/Intrinsics.inl)))

#	define __QCMP_BUILDOPTS \
QOR_PP_STRINGIZE(QOR_PP_CAT( CompilerQOR/Compilers/,QOR_PP_CAT(__QCMP_COMPILER_FOLDER,/BuildOpts.h)))

#endif//QCMP_COMPILERPATH_H_1


