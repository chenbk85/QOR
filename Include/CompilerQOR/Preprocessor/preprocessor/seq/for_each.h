//for_each.h

# /* **************************************************************************
#  *                                                                          *
#  *     (C) Copyright Paul Mensonides 2002.
#  *     Distributed under the Boost Software License, Version 1.0. (See
#  *     accompanying file LICENSE_1_0.txt or copy at
#  *     http://www.boost.org/LICENSE_1_0.txt)
#  *                                                                          *
#  ************************************************************************** */

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PREPROCESSOR_SEQ_FOR_EACH_H_1
#define QOR_PREPROCESSOR_SEQ_FOR_EACH_H_1

#include "../arithmetic/dec.h"
#include "../config/config.h"
#include "../repetition/for.h"
#include "seq.h"
#include "size.h"
#include "../tuple/elem.h"
#include "../tuple/rem.h"

//QOR_PP_SEQ_FOR_EACH

#if	~QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_EDG()
#	define QOR_PP_SEQ_FOR_EACH( macro, data, seq )		QOR_PP_FOR( ( macro, data, seq ( nil ) ), QOR_PP_SEQ_FOR_EACH_P, QOR_PP_SEQ_FOR_EACH_O, QOR_PP_SEQ_FOR_EACH_M )
#else//EDG
#	define QOR_PP_SEQ_FOR_EACH( macro, data, seq )		QOR_PP_SEQ_FOR_EACH_D( macro, data, seq )
#	define QOR_PP_SEQ_FOR_EACH_D( macro, data, seq )	QOR_PP_FOR( ( macro, data, seq ( nil ) ), QOR_PP_SEQ_FOR_EACH_P, QOR_PP_SEQ_FOR_EACH_O, QOR_PP_SEQ_FOR_EACH_M )
#endif

#define QOR_PP_SEQ_FOR_EACH_P( r, x )					QOR_PP_DEC( QOR_PP_SEQ_SIZE( QOR_PP_TUPLE_ELEM( 3, 2, x ) ) )

#if QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_STRICT()
#   define QOR_PP_SEQ_FOR_EACH_O( r, x )				QOR_PP_SEQ_FOR_EACH_O_I x
#else
#   define QOR_PP_SEQ_FOR_EACH_O( r, x )				QOR_PP_SEQ_FOR_EACH_O_I( QOR_PP_TUPLE_ELEM( 3, 0, x ), QOR_PP_TUPLE_ELEM( 3, 1, x ), QOR_PP_TUPLE_ELEM( 3, 2, x ) )
#endif

#define QOR_PP_SEQ_FOR_EACH_O_I( macro, data, seq )		( macro, data, QOR_PP_SEQ_TAIL( seq ) )

#if QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_STRICT()
#   define QOR_PP_SEQ_FOR_EACH_M( r, x )				QOR_PP_SEQ_FOR_EACH_M_IM( r, QOR_PP_TUPLE_REM_3 x )
#   define QOR_PP_SEQ_FOR_EACH_M_IM( r, im )			QOR_PP_SEQ_FOR_EACH_M_I( r, im )
#else
#   define QOR_PP_SEQ_FOR_EACH_M( r, x )				QOR_PP_SEQ_FOR_EACH_M_I( r, QOR_PP_TUPLE_ELEM( 3, 0, x ), QOR_PP_TUPLE_ELEM( 3, 1, x ), QOR_PP_TUPLE_ELEM( 3, 2, x ) )
#endif

#define QOR_PP_SEQ_FOR_EACH_M_I( r, macro, data, seq )	macro( r, data, QOR_PP_SEQ_HEAD( seq ) )

//QOR_PP_SEQ_FOR_EACH_R

#if	~QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_EDG()
#	define QOR_PP_SEQ_FOR_EACH_R( r, macro, data, seq )		QOR_PP_FOR_ ## r( ( macro, data, seq ( nil ) ), QOR_PP_SEQ_FOR_EACH_P, QOR_PP_SEQ_FOR_EACH_O, QOR_PP_SEQ_FOR_EACH_M )
#else//EDG
#	define QOR_PP_SEQ_FOR_EACH_R( r, macro, data, seq )		QOR_PP_SEQ_FOR_EACH_R_I( r, macro, data, seq )
#	define QOR_PP_SEQ_FOR_EACH_R_I( r, macro, data, seq )	QOR_PP_FOR_ ## r( ( macro, data, seq ( nil ) ), QOR_PP_SEQ_FOR_EACH_P, QOR_PP_SEQ_FOR_EACH_O, QOR_PP_SEQ_FOR_EACH_M )
#endif

#endif//QOR_PREPROCESSOR_SEQ_FOR_EACH_H_1
