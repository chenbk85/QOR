//assert.h

# /* Copyright (C) 2001
#  * Housemarque Oy
#  * http://www.housemarque.com
#  *
#  * Distributed under the Boost Software License, Version 1.0. (See
#  * accompanying file LICENSE_1_0.txt or copy at
#  * http://www.boost.org/LICENSE_1_0.txt)
#  */
#
# /* Revised by Paul Mensonides (2002) */

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PREPROCESSOR_DEBUG_ASSERT_H_1
#define QOR_PREPROCESSOR_DEBUG_ASSERT_H_1

#include "../config/config.h"
#include "../control/expr_iif.h"
#include "../control/iif.h"
#include "../logical/not.h"
#include "../tuple/eat.h"

//QOR_PP_ASSERT

#if ~QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_EDG()
#   define QOR_PP_ASSERT						QOR_PP_ASSERT_D
#else
#   define QOR_PP_ASSERT( cond )				QOR_PP_ASSERT_D(cond)
#endif

#define QOR_PP_ASSERT_D( cond )					QOR_PP_IIF( QOR_PP_NOT( cond ), QOR_PP_ASSERT_ERROR, QOR_PP_TUPLE_EAT_1 )(...)
#define QOR_PP_ASSERT_ERROR( x, y, z )

//QOR_PP_ASSERT_MSG

#if ~QOR_PP_CONFIG_FLAGS() & QOR_PP_CONFIG_EDG()
#   define QOR_PP_ASSERT_MSG					QOR_PP_ASSERT_MSG_D
#else
#   define QOR_PP_ASSERT_MSG( cond, msg )		QOR_PP_ASSERT_MSG_D(cond, msg)
#endif

#define QOR_PP_ASSERT_MSG_D( cond, msg )		QOR_PP_EXPR_IIF( QOR_PP_NOT( cond ), msg )

#endif//QOR_PREPROCESSOR_DEBUG_ASSERT_H_1
