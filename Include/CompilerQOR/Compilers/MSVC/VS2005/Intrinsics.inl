//Intrinsics.inl

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Inline include file for Compiler intrinsics 

#ifdef QOR_ARCH_JMPBUF_H
	//--------------------------------------------------------------------------------
	#	pragma intrinsic(_setjmp)
	//--------------------------------------------------------------------------------
	__forceinline mxc_int CCompiler::setjmp( jmp_buf env )
	{
		return ::_setjmp( env );
	}
#endif

//32 bit machine only
#if		( ( _QARCH_X86_VENDOR == _QARCH_VEN_INTEL || _QARCH_X86_VENDOR == _QARCH_VEN_ANY ) && ( QOR_ARCH_WORDSIZE == 32 ) )
/*
//--------------------------------------------------------------------------------
#pragma intrinsic(_InterlockedAddLargeStatistic)
//--------------------------------------------------------------------------------
long CCompiler::_InterlockedAddLargeStatistic( __int64 volatile* pi64_v, long l )
{
	return ::_InterlockedAddLargeStatistic( pi64_v, l );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readcr0)
//--------------------------------------------------------------------------------
__forceinline unsigned long CCompiler::__readcr0( void )
{
	return ::__readcr0();
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readcr2)
//--------------------------------------------------------------------------------
__forceinline unsigned long CCompiler::__readcr2( void )
{
	return ::__readcr2();
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readcr3)
//--------------------------------------------------------------------------------
__forceinline unsigned long CCompiler::__readcr3( void )
{
	return ::__readcr3();
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readcr4)
//--------------------------------------------------------------------------------
__forceinline unsigned long CCompiler::__readcr4( void )
{
	return ::__readcr4();
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writecr0)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writecr0( unsigned u )
{
	return ::__writecr0( u );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writecr3)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writecr3( unsigned u )
{
	return ::__writecr3( u );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writecr4)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writecr4( unsigned u )
{
	return ::__writecr4( u );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readfsbyte)
//--------------------------------------------------------------------------------
__forceinline unsigned char CCompiler::__readfsbyte( unsigned long Offset )
{
	return ::__readfsbyte( Offset );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readfsword)
//--------------------------------------------------------------------------------
__forceinline unsigned short CCompiler::__readfsword( unsigned long Offset )
{
	return ::__readfsword( Offset );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__readfsdword)
//--------------------------------------------------------------------------------
__forceinline unsigned long CCompiler::__readfsdword( unsigned long Offset )
{
	return ::__readfsdword( Offset );
}

//fails under VC Express 2010 for some reason
//--------------------------------------------------------------------------------
#pragma intrinsic(__readfsqword)
//--------------------------------------------------------------------------------
__forceinline unsigned __int64 CCompiler::__readfsqword( unsigned long Offset )
{
	return ::__readfsqword( Offset );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writefsbyte)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writefsbyte( unsigned long Offset, unsigned char Data )
{
	return ::__writefsbyte( Offset, Data );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writefsword)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writefsword( unsigned long Offset, unsigned short Data)
{
	return ::__writefsword( Offset, Data );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__writefsdword)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writefsdword( unsigned long Offset, unsigned long Data )
{
	return ::__writefsdword( Offset, Data );
}
//fails under VC Express 2010 for some reason
//--------------------------------------------------------------------------------
#pragma intrinsic(__writefsqword)
//--------------------------------------------------------------------------------
__forceinline void CCompiler::__writefsqword( unsigned long Offset, unsigned __int64 Data )
{
	return ::__writefsqword( Offset, Data );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(__cpuid)
//--------------------------------------------------------------------------------
__forceinline 	void CCompiler::__cpuid( int a[ 4 ], int b )
{
	return ::__cpuid( a, b );
}
*/
#endif//( _QARCH_INTEL_IA32 == 1 )

//--------------------------------------------------------------------------------
#pragma intrinsic(_InterlockedIncrement)
//--------------------------------------------------------------------------------
__forceinline long CCompiler::_InterlockedIncrement( long volatile* plong )
{
	return ::_InterlockedIncrement( plong );
}

//--------------------------------------------------------------------------------
#pragma intrinsic(_InterlockedDecrement)
//--------------------------------------------------------------------------------
__forceinline long CCompiler::_InterlockedDecrement( long volatile* plong )
{
	return ::_InterlockedDecrement( plong );
}

