//Builtins.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//NOTE: No multi inclusion prevetion, this header is designed to be included twice

//Built in universal intrinsic functions available under MSVC compilers
//These declarations behave like protoypes for functions in hidden/pre-compiled obj files
//The functions themselves only get linked in if we declare them exactly as they are here
//and then at some point #pragma intrinsic the function name and call it.

#include "CompilerQOR/Compilers/MSVC/VS2003/Builtins.h"

#ifndef	QOR_MONOLITHIC

unsigned short		__cdecl _byteswap_ushort(unsigned short value);
#define __QCMP_DECLS__BYTESWAP_USHORT		1

unsigned long		__cdecl _byteswap_ulong(unsigned long value);
#define __QCMP_DECLS__BYTESWAP_ULONG		1

unsigned __int64	__cdecl _byteswap_uint64(unsigned __int64 value);
#define __QCMP_DECLS__BYTESWAP_UINT64		1

void				__cdecl __debugbreak(void);
#define __QCMP_DECLS___DEBUGBREAK			1

unsigned long		__cdecl _lrotl(unsigned long,int);
#define __QCMP_DECLS__LROTL					1

char*				__cdecl strset(char*,int);
#define __QCMP_DECLS_STRSET					1

unsigned __int64	__cdecl _rotl64(unsigned __int64,int);
#define __QCMP_DECLS__ROTL64				1

unsigned __int64	__cdecl _rotr64(unsigned __int64,int);
#define __QCMP_DECLS__ROTR64				1

__int64				__cdecl _abs64(__int64);
#define __QCMP_DECLS__ABS64					1

#endif//QOR_MONOLITHIC