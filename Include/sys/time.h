//time.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_SYS_TIME_H_3
#define QOR_SYS_TIME_H_3

#include <sys/select.h>
#include "SystemQOR.h"
#include QOR_SYS_PLATFORMSYSTYPES(time)

typedef nsPlatform::timeval timeval;
typedef nsPlatform::itimerval itimerval;
typedef nsPlatform::time_t time_t;
typedef nsPlatform::suseconds_t suseconds_t;
typedef nsPlatform::fd_set fd_set;

//the following symbolic constants for the which argument of getitimer() and setitimer():

#define ITIMER_REAL				( nsPlatform::ITimerReal )			//Decrements in real time. 
#define ITIMER_VIRTUAL			( nsPlatform::ITimerVirtual )		//Decrements in process virtual time. 
#define ITIMER_PROF				( nsPlatform::ITimerProf )			//Decrements both in process virtual time and when the system is running on behalf of the process. 

__QCMP_STARTLINKAGE_C

	__QOR_INTERFACE( __CQOR ) int getitimer( int, ::itimerval* );
	__QOR_INTERFACE( __CQOR ) int gettimeofday( ::timeval* __QCMP_RESTRICT, void* __QCMP_RESTRICT );
	__QOR_INTERFACE( __CQOR ) int setitimer( int, const ::itimerval* __QCMP_RESTRICT, ::itimerval* __QCMP_RESTRICT );
	__QOR_INTERFACE( __CQOR ) int select( int, ::fd_set* __QCMP_RESTRICT, ::fd_set* __QCMP_RESTRICT, ::fd_set* __QCMP_RESTRICT, ::timeval* __QCMP_RESTRICT );
	__QOR_INTERFACE( __CQOR ) int utimes( const char*, const ::timeval[ 2 ] );

__QCMP_ENDLINKAGE_C

#endif//QOR_SYS_TIME_H_3
