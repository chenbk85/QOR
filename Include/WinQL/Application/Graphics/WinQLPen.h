//WinQLPen.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GRAPHICS_PEN_H_3
#define WINQL_GRAPHICS_PEN_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Handles.h"
#include "WinQL/GUI/GUI.h"
#include "WinQL/Application/Graphics/WinQLBrush.h"
#include "WinQL/Application/Graphics/WinQLGDIObj.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CGDI32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	typedef struct tagLOGPEN
	{
		unsigned int lopnStyle;
		nsWin32::POINT lopnWidth;
		unsigned long lopnColor;
	} LOGPEN, *PLOGPEN, *NPLOGPEN, *LPLOGPEN;


	class __QOR_INTERFACE( __WINQL ) CPen;
	typedef CTHandleMap< typename CTypedSessionHandle< CPen >::refType, CPen > CPenHandleMap;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CPen : public CSelectableGDIObject< CPen >
	{
		friend class CGDIObject< CPen >;

	public:

		__QOR_DECLARE_OCLASS_ID( CPen );

		CPen( int fnPenStyle, int nWidth, unsigned long crColour );
		CPen( const nsWin32::LOGPEN* lplgpn );
		CPen( unsigned long dwPenStyle, unsigned long dwWidth, const nsWin32::LOGBRUSH* lplb, unsigned long dwStyleCount, const unsigned long* lpStyle );
		virtual ~CPen();

	protected:
		
		static CPenHandleMap& HandleMap( void );
		CPen();

	private:
		
		__QCS_DECLARE_NONASSIGNABLE( CPen );
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CStockPen : public CPen
	{
	public:

		/*BLACK_PEN Black pen. 
		DC_PEN Windows 2000/XP: Solid pen color. The default color is white. The color can be changed by using the SetDCPenColor function.
		NULL_PEN NULL pen. The null pen draws nothing. 
		WHITE_PEN White pen. */

		CStockPen( int nPen );
		virtual ~CStockPen();

	private:

		__QCS_DECLARE_NONASSIGNABLE( CStockPen );
	};

}//nsWin32

#endif//WINQL_GRAPHICS_PEN_H_3
