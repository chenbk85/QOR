//WinQLMetaFile.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GRAPHICS_METAFILE_H_3
#define WINQL_GRAPHICS_METAFILE_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Macros/codingmacros.h"
#include "WinQL/Definitions/Handles.h"
#include "WinQL/Application/Graphics/WinQLGDIObj.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CGDI32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{

	typedef int ( __QCMP_STDCALLCONVENTION *MFENUMPROC )( CDCHandle::refType hdc, HANDLETABLE* lpht, METARECORD* lpMR, int nObj, Cmp_long_ptr param );

	class __QOR_INTERFACE( __WINQL ) CDCInternal;
	class __QOR_INTERFACE( __WINQL ) CMetaFileDC;
	class __QOR_INTERFACE( __WINQL ) CMetaFile;

	typedef CTHandleMap< typename CTypedSessionHandle< CMetaFile >::refType, CMetaFile > CMetaFileHandleMap;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CMetaFile : public CGDIObject< CMetaFile >
	{
		friend class CMetaFileDC;
		friend class CGDIObject< CMetaFile >;

	public:

		__QOR_DECLARE_OCLASS_ID( CMetaFile );
			
		CMetaFile( CMetaFileHandle::refType hmfSrc, const TCHAR* lpszFile, int* pResult = 0 );
		CMetaFile( unsigned int nSize, const unsigned char* lpData, int* pResult = 0 );
		virtual ~CMetaFile();
		bool Enum( CDCInternal& DC, nsWin32::MFENUMPROC lpMetaFunc, Cmp_long_ptr lParam );
		unsigned int GetBits( unsigned int nSize, void* lpvData );
		bool Play( CDCInternal& DC );

	protected:

		static CMetaFileHandleMap& HandleMap( void );
		CMetaFile( CMetaFileHandle::refType hmf, int* pResult = 0, bool bOwnership = false );
		int* m_pResult;

	private:

		__QCS_DECLARE_NONASSIGNABLE( CMetaFile );
	};

	class __QOR_INTERFACE( __WINQL ) CMetaFileDC;
	typedef CTHandleMap< typename CTypedSessionHandle< CMetaFileDC >::refType, CMetaFileDC > CMetaFileDCHandleMap;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CMetaFileDC : public CGDIObject< CMetaFileDC >
	{
		friend class CGDIObject< CMetaFileDC >;

	public:

		__QOR_DECLARE_OCLASS_ID( CMetaFileDC );

		CMetaFileDC( const TCHAR* lpszFile );
		CMetaFile::refType Close( void );

	protected:

		static CMetaFileDCHandleMap& HandleMap( void );
		virtual ~CMetaFileDC();

	private:

		__QCS_DECLARE_NONASSIGNABLE( CMetaFileDC );

	};

}//nsWin32

#endif//WINQL_GRAPHICS_METAFILE_H_3

