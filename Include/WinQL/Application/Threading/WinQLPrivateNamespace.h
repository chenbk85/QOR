//WinQLPrivateNamespace.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_CS_PRIVATENS_H_3
#define WINQL_CS_PRIVATENS_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Security.h"
#include "WinQL/CodeServices/Handles/WinQLSyncHandle.h"
#include "WinQL/Application/Threading/WinQLBoundaryDescriptor.h"

//------------------------------------------------------------------------------
namespace nsWin32
{
	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CPrivateNamespace
	{		

	public:
			
		__QOR_DECLARE_OCLASS_ID( CPrivateNamespace );

		CPrivateNamespace( nsWin32::LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes, void* lpBoundaryDescriptor, const TCHAR* lpAliasPrefix, unsigned char* pbResult = 0 );
		CPrivateNamespace( CBoundaryDescriptor& BoundaryDescriptor, const TCHAR* lpAliasPrefix, unsigned char* pbResult = 0 );
		void Close( unsigned long Flags );

	protected:
						
		~CPrivateNamespace();//NOTE: Do not call directly or by deleting the object, call Close instead

	private:

		CSyncHandle m_Handle;
		unsigned long m_Flags;
		unsigned char* m_pResult;

		CPrivateNamespace();
		CPrivateNamespace( const CPrivateNamespace& );
		CPrivateNamespace& operator = ( const CPrivateNamespace& );
	};

}//nsWin32

#endif//WINQL_CS_PRIVATENS_H_3
