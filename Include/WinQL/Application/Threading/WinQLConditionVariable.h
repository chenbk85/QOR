//WinQLConditionVariable.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_CS_CONDVAR_H_3
#define WINQL_CS_CONDVAR_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "WinQL/Application/Threading/WinQLSRWLock.h"

//------------------------------------------------------------------------------
namespace nsWin32
{
	//------------------------------------------------------------------------------
	typedef struct _RTL_CONDITION_VARIABLE 
	{
		void* Ptr;                                       
	} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE;      

	typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE, *PCONDITION_VARIABLE;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CConditionVariable : public CONDITION_VARIABLE
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CConditionVariable );

		CConditionVariable();		
		virtual ~CConditionVariable();		

		bool SleepCS( CCriticalSection& CS, unsigned long dwMilliseconds );
		bool SleepSRW( CSRWLock& SRWLock, unsigned long dwMilliseconds, unsigned long Flags );
		void WakeAll( void );
		void Wake( void );

	protected:

		void Initialize( void );

	private:

		CConditionVariable( const CConditionVariable& );
		CConditionVariable& operator = ( const CConditionVariable& );
	};

}//nsWin32

#endif//WINQL_CS_CONDVAR_H_3
