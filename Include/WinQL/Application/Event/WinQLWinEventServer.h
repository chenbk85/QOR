//WinQLWinEventServer.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_OSSERV_WINEVENTSERVER_H_3
#define WINQL_OSSERV_WINEVENTSERVER_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Handles.h"
#include "WinQL/GUI/Window.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQL ) CUser32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	//Serves 1 Active Accessibility Event
	class __QOR_INTERFACE( __WINQL ) CWinEventServer
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CWinEventServer );
			
		CWinEventServer( unsigned long ulEvent );			
		virtual ~CWinEventServer();
			
		bool IsHookInstalled();			
		void Notify( COSWindow::refType Wnd, long idObject, long idChild );

	protected:

		unsigned long m_dwEvent;

	private:			

		nsWinQAPI::CUser32& m_User32Library;

		__QCS_DECLARE_NONCOPYABLE( CWinEventServer );

	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CWinEvent
	{
	public:

		CWinEvent( unsigned long dwEvent );
		~CWinEvent();
		bool operator()( COSWindow& Wnd, long lObjectId, long lChildId );

	protected:

		CWinEventServer m_Win32ServerEvent;

	private:

		CWinEvent();// Not to be implemented
	};

}//nsWin32

#endif//WINQL_OSSERV_WINEVENTSERVER_H_3
