//WinQLEnvironment.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//WinQL Environment

#ifndef WINQL_PROCESS_ENVIRONMENT_H_3
#define WINQL_PROCESS_ENVIRONMENT_H_3

#include "CodeQOR/DataStructures/TMap.h"
#include "WinQL/Codeservices/Text/WinString.h"
#include "WinQL/Application/Process/WinQLProcessHelper.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CEnvironment
	{
	public:

		CEnvironment();
		
		//--------------------------------------------------------------------------------
		virtual ~CEnvironment()
		{
		}

		void Init( void );
		
		//--------------------------------------------------------------------------------
		bool Initialised(){	return m_bInitialised;	}

		const wchar_t* GetVarValue( const wchar_t* wszVar );
		const char* GetVarValue( const char* szVar );
		int cenvarg ( const char* const *argv, const char* const *envp, char** argblk, char** envblk, const char* name );
        intptr_t Spawn( int mode, const char* name, char* cmdblk, char* envblk );

	protected:
						
		__QCMP_STATIC_CONSTANT( unsigned char, use_w = 1 );
		__QCMP_STATIC_CONSTANT( unsigned char, use_a = 2 );

		void* GetStringsA();

		bool m_bInitialised;
		STARTUPINFO m_Startupinfo;
			
		char** m_apAEnvironment;

	};
	
}//nsWin32

#endif//WINQL_PROCESS_ENVIRONMENT_H_3
