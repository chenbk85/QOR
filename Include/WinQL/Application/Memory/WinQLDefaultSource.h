//WinQLDefaultSource.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//When a chunk of memory is required where is it obtained from?
//The default handler defined here just requests the memory from Windows, possibly slow but definitely safe

#ifndef WINQL_DEFAULT_SOURCE_H_2
#define WINQL_DEFAULT_SOURCE_H_2

#include "CodeQOR/Traits/MemoryTraits.h"
#include "WinQL/Application/Memory/WinQLHeap.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class CDefaultSource
	{
	public:

		//--------------------------------------------------------------------------------
		static unsigned char* Source( unsigned int uiByteCount )
		{
			static nsWin32::CHeap Heap;
			unsigned char* pResult = reinterpret_cast< unsigned char* >( Heap.Alloc( 0, uiByteCount ) );
			return pResult;
		}

		//--------------------------------------------------------------------------------
		static void Free( unsigned char* pMemory, unsigned int /*uiByteCount*/ )
		{
			static nsWin32::CHeap Heap;
			Heap.Free( 0, pMemory );
		}

	private:

		CDefaultSource(){};
		~CDefaultSource(){};

	};

}//nsWin32

#endif //WINQL_DEFAULT_SOURCE_H_2
