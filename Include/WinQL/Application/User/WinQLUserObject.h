//WinQLUserObject.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_OSSERV_USEROBJ_H_3
#define WINQL_OSSERV_USEROBJ_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Macros/codingmacros.h"
#include "WinQL/CodeServices/Handles/WinQLHandle.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CUser32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CUserObject
	{
	public: 

		__QOR_DECLARE_OCLASS_ID( CUserObject );
			
		//User Object Information type constants
		__QCMP_STATIC_CONSTANT( int, UOI_Flags = 1 );
		__QCMP_STATIC_CONSTANT( int, UOI_Name = 2 );
		__QCMP_STATIC_CONSTANT( int, UOI_Type = 3 );
		__QCMP_STATIC_CONSTANT( int, UOI_User_SID = 4 );
		__QCMP_STATIC_CONSTANT( int, UOI_HeapSize = 5 );
		__QCMP_STATIC_CONSTANT( int, UOI_io = 6 );

		CUserObject( CHandle& h );			
		CUserObject( const CUserObject& Src );
		virtual ~CUserObject();
		bool GrantAccess( void* hJob, int bGrant );
		bool GetSecurity( unsigned long* pSIRequested, void* pSD, unsigned long nLength, unsigned long* lpnLengthNeeded );
		bool SetSecurity( unsigned long* pSIRequested, void* pSID );

	protected:

		CHandle m_Handle;

	private:			

		nsWinQAPI::CUser32& m_User32Library;			

		CUserObject();
		__QCS_DECLARE_NONASSIGNABLE( CUserObject );

	};

}//nsWin32

#endif//WINQL_OSSERV_USEROBJ_H_3
