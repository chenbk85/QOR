//WinQLLanguageGroup.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Locale Language Group

#ifndef _WINQL_CS_LC_LANGGRP_H_
#define _WINQL_CS_LC_LANGGRP_H_

#include "WinQL/Application/I18n/I18n.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class CLanguageGroup
	{
		//--------------------------------------------------------------------------------
		CLanguageGroup( LGRPID ID ) : m_ID( ID )
		{
		}

		//--------------------------------------------------------------------------------
		~CLanguageGroup()
		{
		}

		//--------------------------------------------------------------------------------
		LGRPID ID()
		{
			return m_ID;
		}

		//--------------------------------------------------------------------------------
		bool IsValid( unsigned long dwFlags )
		{
			bool bResult = m_Win32LocaleHelper.IsValidLanguageGroup( m_ID, dwFlags ) ? true : false;
			return bResult;
		}

		//--------------------------------------------------------------------------------
		bool EnumLocales( LANGGROUPLOCALE_ENUMPROC pLangGroupLocaleEnumProc, unsigned long dwFlags, LONG_PTR lParam )
		{
			bool bResult = m_Win32LocaleHelper.EnumLanguageGroupLocalesT( pLangGroupLocaleEnumProc, m_ID, dwFlags, lParam );
			return bResult;
		}

	protected:

		LGRPID m_ID;
		CLocaleHelper m_Win32LocaleHelper;

	};

}//nsWin32

#endif//_WINQL_CS_LC_LANGGRP_H_
