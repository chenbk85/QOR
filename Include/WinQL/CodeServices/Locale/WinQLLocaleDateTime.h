//WinQLLocaleDateTime.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Win32 Locale Date Time

#ifndef WINQL_CS_LC_DATETIME_H_3
#define WINQL_CS_LC_DATETIME_H_3

#include "WinQL/WinQL.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL ) CLocaleDateTime 
	{
	protected:

		char* m_aDayAbbr[7];
		char* m_aMonthAbbr[12];
		char* m_aDay[7];
		char* m_aMonth[12];
		char* m_ampm[2];

	public:

		//--------------------------------------------------------------------------------
		bool SetDayAbbr( int iDayIndex, char* pszAbbr )
		{
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				delete m_aDayAbbr[iDayIndex];
				m_aDayAbbr[iDayIndex] = pszAbbr;
				return true;
			}
			return false;
		}

		//--------------------------------------------------------------------------------
		char* GetDayAbbr( int iDayIndex ) const
		{
			char* pchResult = 0;
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				pchResult = m_aDayAbbr[ iDayIndex ];
			}
			return pchResult;
		}

		//--------------------------------------------------------------------------------
		char** GetDayAbbrArray( int iDayIndex )
		{
			char** ppchResult = 0;
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				ppchResult = &(m_aDayAbbr[ iDayIndex ]);
			}
			return ppchResult;
		}

		//--------------------------------------------------------------------------------
		bool SetMonthAbbr( int iMonthIndex, char* pszAbbr )
		{
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				delete m_aMonthAbbr[ iMonthIndex ];
				m_aMonthAbbr[ iMonthIndex ] = pszAbbr;
				return true;
			}
			return false;
		}

		//--------------------------------------------------------------------------------
		char* GetMonthAbbr( int iMonthIndex ) const
		{
			char* pchResult = 0;
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				pchResult = m_aMonthAbbr[ iMonthIndex ];
			}
			return pchResult;
		}

		//--------------------------------------------------------------------------------
		char** GetMonthAbbrArray( int iMonthIndex )
		{
			char** ppchResult = 0;
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				ppchResult = &( m_aMonthAbbr[ iMonthIndex ] );
			}
			return ppchResult;
		}
	        
		//--------------------------------------------------------------------------------
		bool SetDay( int iDayIndex, char* pszDay )
		{
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				delete m_aDay[ iDayIndex ];
				m_aDay[ iDayIndex ] = pszDay;
				return true;
			}
			return false;
		}

		//--------------------------------------------------------------------------------
		char* GetDay( int iDayIndex ) const
		{
			char* pchResult = 0;
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				pchResult = m_aDay[ iDayIndex ];
			}
			return pchResult;
		}

		//--------------------------------------------------------------------------------
		char** GetDayArray( int iDayIndex )
		{
			char** ppchResult = 0;
			if( iDayIndex >= 0 && iDayIndex < 7 )
			{
				ppchResult = &( m_aDay[ iDayIndex ] );
			}
			return ppchResult;
		}

		//--------------------------------------------------------------------------------
		bool SetMonth( int iMonthIndex, char* pszMonth )
		{
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				delete m_aMonth[ iMonthIndex ];
				m_aMonth[ iMonthIndex ] = pszMonth;
				return true;
			}
			return false;
		}

		//--------------------------------------------------------------------------------
		char* GetMonth( int iMonthIndex ) const
		{
			char* pchResult = 0;
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				pchResult = m_aMonth[ iMonthIndex ];
			}
			return pchResult;
		}

		//--------------------------------------------------------------------------------
		char** GetMonthArray( int iMonthIndex )
		{
			char** ppchResult = 0;
			if( iMonthIndex >= 0 && iMonthIndex < 12 )
			{
				ppchResult = &( m_aMonth[ iMonthIndex ] );
			}
			return ppchResult;
		}

		//--------------------------------------------------------------------------------
		bool SetAM( char* pszAM )
		{
			delete m_ampm[ 0 ];
			m_ampm[ 0 ] = pszAM;
			return true;
		}

		//--------------------------------------------------------------------------------
		bool SetPM( char* pszPM )
		{
			delete m_ampm[ 1 ];
			m_ampm[ 1 ] = pszPM;
			return true;
		}

		//--------------------------------------------------------------------------------
		char* GetAM() const
		{
			return m_ampm[ 0 ];
		}

		//--------------------------------------------------------------------------------
		char* GetPM() const
		{
			return m_ampm[ 1 ];
		}

		//--------------------------------------------------------------------------------
		char** GetAMArray()
		{
			return &( m_ampm[ 0 ] );
		}

		//--------------------------------------------------------------------------------
		char** GetPMArray()
		{
			return &( m_ampm[ 1 ] );
		}

		char* ww_sdatefmt;
		char* ww_ldatefmt;
		char* ww_timefmt;
		unsigned long ww_lcid;
		int  ww_caltype;
		int  refcount;

		//--------------------------------------------------------------------------------
		CLocaleDateTime()
		{
			int i = 0;

			for( ; i < 7; i++ )
			{
				m_aDayAbbr[ i ] = 0;
				m_aDay[ i ] = 0;
			}

			for( i = 0; i < 12; i++ )
			{
				m_aMonthAbbr[ i ] = 0;
				m_aMonth[ i ] = 0;
			}

			m_ampm[0] = 0;//"AM";
			m_ampm[1] = 0;//"PM";

			ww_sdatefmt = "MM/dd/yy";
			ww_ldatefmt = "dddd, MMMM dd, yyyy";
			ww_timefmt = "HH:mm:ss";

			ww_lcid = 0x0409;
			ww_caltype = 1;
			refcount = 0;
		}

		//--------------------------------------------------------------------------------
		~CLocaleDateTime()
		{
			if (this != 0 )
			{
				int i = 0;
				for( ; i < 7; i++)
				{
					delete m_aDayAbbr[i];
				}

				for( i = 0; i < 7; i++ )
				{
					delete m_aDay[ i ];
				}

				for( i = 0; i < 12; i++ )
				{
					delete m_aMonthAbbr[ i ];
				}

				for( i = 0; i < 12; i ++ )
				{
					delete m_aMonth[ i ];
				}

				delete m_ampm[0];
				delete m_ampm[1];
	/*
				delete ww_sdatefmt;
				delete ww_ldatefmt;
				delete ww_timefmt;*/
			}
		}
	};

}//nsWin32

#endif//WINQL_CS_LC_DATETIME_H_3
