//WinQLMacros.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Fundamental library wide Macros for the Windows QOR Library

#ifndef WINQLMACROS_H_1
#define WINQLMACROS_H_1

#ifndef QOR_SYS_SYSTEMHEADER
#	error "Don't include this file directly, include WinQL.h instead."
#endif

#if		( __QOR_UNICODE )
	typedef wchar_t TCHAR;
#else
	typedef char TCHAR;
#endif//( __QOR_UNICODE )

//------------------------------------------------------------------------------
namespace nsWin32
{
	__QCMP_STATIC_CONSTANT( TCHAR, SPACECHAR = ' ' );
	__QCMP_STATIC_CONSTANT( TCHAR, DQUOTECHAR = '\"' );
	__QCMP_STATIC_CONSTANT( TCHAR, NULCHAR = '\0' );
	__QCMP_STATIC_CONSTANT( TCHAR, TABCHAR = '\t' );
	__QCMP_STATIC_CONSTANT( TCHAR, SLASHCHAR = '\\' );
}//nsWin32

#undef MakeIntResourceA
#define MakeIntResourceA(i) ((char*)((Cmp_ulong_ptr)((unsigned short)(i))))
#define MakeIntResourceW(i) ((wchar_t*)((Cmp_ulong_ptr)((unsigned short)(i))))
#ifdef UNICODE
#define MakeIntResource  MakeIntResourceW
#else
#define MakeIntResource  MakeIntResourceA
#endif // !UNICODE

#define RedGreenBlue(r,g,b) ((unsigned long)(((byte)(r)|((unsigned short)((byte)(g))<<8))|(((unsigned long)(byte)(b))<<16)))
#define GetRedValue(rgb)    (LoByte(rgb))
#define GetGreenValue(rgb)  (LoByte(((unsigned short)(rgb)) >> 8))
#define GetBlueValue(rgb)   (LoByte((rgb)>>16))
#define MakeWord(a, b)      ((unsigned short)(((unsigned char)(((Cmp_ulong_ptr)(a)) & 0xff)) | ((unsigned short)((unsigned char)(((Cmp_ulong_ptr)(b)) & 0xff))) << 8))
#define MakeLong(a, b)      ((long)(((unsigned short)(((Cmp_ulong_ptr)(a)) & 0xffff)) | ((unsigned long)((unsigned short)(((Cmp_ulong_ptr)(b)) & 0xffff))) << 16))
#define LoWord(l)           ((unsigned short)(((Cmp_ulong_ptr)(l)) & 0xffff))
#define HiWord(l)           ((unsigned short)((((Cmp_ulong_ptr)(l)) >> 16) & 0xffff))
#define LoByte(w)           ((unsigned char)(((Cmp_ulong_ptr)(w)) & 0xff))
#define HiByte(w)           ((unsigned char)((((Cmp_ulong_ptr)(w)) >> 8) & 0xff))
#define MakeLParam(l, h)    ((Cmp_long_ptr)(unsigned long)MakeLong(l, h))
#define MakeWParam(l, h)    ((Cmp_uint_ptr)(unsigned long)MakeLong(l, h))

#define MakeHResult(sev,fac,code) ( (unsigned long)( ( (unsigned long)( sev ) << 31 ) | ( (unsigned long)( fac ) << 16 ) | ( (unsigned long)( code ) ) ) )
#define MakeSCode(sev,fac,code) ( (unsigned long) ( ( (unsigned long)( sev ) << 31 ) | ( (unsigned long)( fac ) << 16) | ( (unsigned long)( code ) ) ) )

#endif//WINQLMACROS_H_1
