//AudioRenderer.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_MEDIAFOUND_AUDIORENDERER_H_3
#define WINQL_MEDIAFOUND_AUDIORENDERER_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/MediaFoundation/MediaFoundation.h"
#include "WinQL/MediaFoundation/Activate.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	namespace nsMediaFoundation
	{
		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE( __WINQL_MEDIA ) CAudioRenderer : public CTMediaFoundationObject< IMFMediaSink >
		{

		public:

			__QOR_DECLARE_OCLASS_ID( CAudioRenderer );

			CAudioRenderer( IMFAttributes* pAudioAttributes );
			virtual ~CAudioRenderer();

		private:

			CAudioRenderer();
			CAudioRenderer( const CAudioRenderer& );
			CAudioRenderer& operator = ( const CAudioRenderer& );
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE( __WINQL_MEDIA ) CAudioRendererActivate : public CActivate
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CAudioRendererActivate );

			CAudioRendererActivate();
			virtual ~CAudioRendererActivate();

		private:

			CAudioRendererActivate( const CAudioRendererActivate& );
			CAudioRendererActivate& operator = ( const CAudioRendererActivate& );
		};

	}//nsMediaFoundation

}//nsWin32

#endif//WINQL_MEDIAFOUND_AUDIORENDERER_H_3

