//MediaSink.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_MEDIAFOUND_MEDSINK_H_3
#define WINQL_MEDIAFOUND_MEDSINK_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/MediaFoundation/MediaFoundation.h"
#include "WinQL/COM/TInterfaceMember.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	namespace nsMediaFoundation
	{	
		//--------------------------------------------------------------------------------
		//A base class for system provided media sinks
		//media sinks are output pipeline elements for the media foundation
		class __QOR_INTERFACE(__WINQL_MEDIA) CMediaSink : public CTMediaFoundationObject< IMFMediaSink >
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CMediaSink );

			CMediaSink();
			virtual ~CMediaSink();

		private:

			CMediaSink( const CMediaSink& );
			CMediaSink& operator = ( const CMediaSink& );
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE(__WINQL_MEDIA) CASFMediaSink : public CMediaSink
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CASFMediaSink );

			CASFMediaSink( IMFByteStream* pIByteStream );
			virtual ~CASFMediaSink();

		private:

			CASFMediaSink();
			CASFMediaSink( const CASFMediaSink& );
			CASFMediaSink& operator = ( const CASFMediaSink& );

		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE(__WINQL_MEDIA) CMP3MediaSink : public CMediaSink
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CMP3MediaSink );

			CMP3MediaSink( IMFByteStream* pTargetByteStream );
			virtual ~CMP3MediaSink();

		private:

			CMP3MediaSink();
			CMP3MediaSink( const CMP3MediaSink& );
			CMP3MediaSink& operator = ( const CMP3MediaSink& );
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE(__WINQL_MEDIA) CMP4MediaSink : public CMediaSink
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CMP4MediaSink );

			CMP4MediaSink( IMFByteStream* pIByteStream, IMFMediaType* pVideoMediaType, IMFMediaType* pAudioMediaType );
			virtual ~CMP4MediaSink();

		private:

			CMP4MediaSink();
			CMP4MediaSink( const CMP4MediaSink& );
			CMP4MediaSink& operator = ( const CMP4MediaSink& );
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE(__WINQL_MEDIA) C3GPMediaSink : public CMediaSink
		{			
		public:

			__QOR_DECLARE_OCLASS_ID( C3GPMediaSink );

			C3GPMediaSink( IMFByteStream* pIByteStream, IMFMediaType* pVideoMediaType, IMFMediaType* pAudioMediaType );
			virtual ~C3GPMediaSink();

		private:

			C3GPMediaSink();
			C3GPMediaSink( const C3GPMediaSink& );
			C3GPMediaSink& operator = ( const C3GPMediaSink& );
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE(__WINQL_MEDIA) CASFStreamingMediaSink : public CMediaSink
		{

		public:

			__QOR_DECLARE_OCLASS_ID( CASFStreamingMediaSink );

			CASFStreamingMediaSink( IMFByteStream* pIByteStream );
			virtual ~CASFStreamingMediaSink();

		private:

			CASFStreamingMediaSink();
			CASFStreamingMediaSink( const CASFStreamingMediaSink& );
			CASFStreamingMediaSink& operator = ( const CASFStreamingMediaSink& );
		};

		//--------------------------------------------------------------------------------
		//A base class for custom media sinks
		//A media sink is the destination for one or more media streams.
		//TIMFMediaSinkImpl must implement IMFMediaSinkImpl by deriving from CInterfaceImplBase< IMFMediaSink >
		//TIMFClockStateSinkImpl must implement IMFClockStateSinkImpl by deriving from CInterfaceImplBase< IMFClockStateSink >
		template< class TIMFMediaSinkImpl, class TIMFClockStateSinkImpl >
		class __QOR_INTERFACE(__WINQL_MEDIA) CBaseCustomMediaSink : public CIUnknownImplBase<>, public CCOObjectBase
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CBaseCustomMediaSink );

			//--------------------------------------------------------------------------------
			CBaseCustomMediaSink() : 
			  m_MFMediaSinkPtr( this )
			, m_MFClockStateSinkPtr( this )
			{
			}

			//--------------------------------------------------------------------------------
			virtual ~CBaseCustomMediaSink()
			{
			}

		protected:

			CTInterfaceMember< TIMFMediaSinkImpl > m_MFMediaSinkPtr;				//IMFMediaSink required interface
			CTInterfaceMember< TIMFClockStateSinkImpl > m_MFClockStateSinkPtr;		//IMFClockStateSink required interface 

		private:

			CBaseCustomMediaSink( const CBaseCustomMediaSink& src );
			CBaseCustomMediaSink& operator = ( const CBaseCustomMediaSink& src );
		};

	}//nsMediaFoundation

}//nsWin32

#endif//WINQL_MEDIAFOUND_MEDSINK_H_3
