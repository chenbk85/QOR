//Caret.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GUI_CARET_H_3
#define WINQL_GUI_CARET_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Macros/codingmacros.h"
#include "WinQL/Definitions/Handles.h"
#include "WinQL/GUI/GUI.h"
#include "WinQL/Application/User/WinQLUserObject.h"
#include "CodeQOR/DataStructures/TLRef.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CUser32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	class __QOR_INTERFACE( __WINQL ) CBitmap;
	class __QOR_INTERFACE( __WINQL_GUI ) COSWindow;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CCaret
	{
	public:

		typedef nsCodeQOR::CTLRef< CCaret > refType;

		__QOR_DECLARE_OCLASS_ID( CCaret );

		CCaret( COSWindow& Window, CBitmap& Bitmap, int nWidth, int nHeight );
		static refType Create( COSWindow& Window, CBitmap& Bitmap, int nWidth, int nHeight );
		virtual ~CCaret();
		unsigned int GetBlinkTime( void );
		bool GetPos( nsWin32::POINT& Point );
		bool Hide( COSWindow& Window );
		bool SetBlinkTime( unsigned int uMSeconds );
		bool SetPos( int X, int Y );
		bool Show( COSWindow& Window );
		int Status( void );

	protected:

		int m_iStatus;

	private:			

		nsWinQAPI::CUser32& m_User32Library;

		CCaret();
		__QCS_DECLARE_NONCOPYABLE( CCaret );
	};

}//nsWin32


#endif//WINQL_GUI_CARET_H_3
