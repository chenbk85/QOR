//ComboBox.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GUI_WND_COMBOBOX_H_3
#define WINQL_GUI_WND_COMBOBOX_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/GUI/Views/WindowView.h"
#include "WinQL/GUI/Windows/WinCtrlWindow.h"
#include "WinQL/GUI/WindowFactory.h"
#include "WinQL/Application/Graphics/WinQLRectangle.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CComboBoxClass : public CWindowClass
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CComboBoxClass );

		CComboBoxClass();
		virtual ~CComboBoxClass();
		virtual bool Preregistered();
		const TCHAR* Name();

	private:

		CComboBoxClass( const CComboBoxClass& );
		CComboBoxClass& operator = ( const CComboBoxClass& );
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CComboBox : public CWinCtrlWindow
	{
	public:

		//--------------------------------------------------------------------------------
		typedef struct tagCOMBOBOXINFO
		{
			unsigned long cbSize;
			RECT rcItem;
			RECT rcButton;
			unsigned long stateButton;
			CWindowHandle::refType hwndCombo;
			CWindowHandle::refType hwndItem;
			CWindowHandle::refType hwndList;
		} COMBOBOXINFO, *PCOMBOBOXINFO, *LPCOMBOBOXINFO;

		// Combo Box Notification Codes

		__QCMP_STATIC_CONSTANT( int, CBN_ERRSPACE        = (-1) );
		__QCMP_STATIC_CONSTANT( int, CBN_SELCHANGE       = 1	 );
		__QCMP_STATIC_CONSTANT( int, CBN_DBLCLK          = 2	 );
		__QCMP_STATIC_CONSTANT( int, CBN_SETFOCUS        = 3	 );
		__QCMP_STATIC_CONSTANT( int, CBN_KILLFOCUS       = 4	 );
		__QCMP_STATIC_CONSTANT( int, CBN_EDITCHANGE      = 5	 );
		__QCMP_STATIC_CONSTANT( int, CBN_EDITUPDATE      = 6	 );
		__QCMP_STATIC_CONSTANT( int, CBN_DROPDOWN        = 7	 );
		__QCMP_STATIC_CONSTANT( int, CBN_CLOSEUP         = 8	 );
		__QCMP_STATIC_CONSTANT( int, CBN_SELENDOK        = 9	 );
		__QCMP_STATIC_CONSTANT( int, CBN_SELENDCANCEL    = 10 );

		//Combo Box messages

		__QCMP_STATIC_CONSTANT( int, CB_GETEDITSEL               = 0x0140 );
		__QCMP_STATIC_CONSTANT( int, CB_LIMITTEXT                = 0x0141 );
		__QCMP_STATIC_CONSTANT( int, CB_SETEDITSEL               = 0x0142 );
		__QCMP_STATIC_CONSTANT( int, CB_ADDSTRING                = 0x0143 );
		__QCMP_STATIC_CONSTANT( int, CB_DELETESTRING             = 0x0144 );
		__QCMP_STATIC_CONSTANT( int, CB_DIR                      = 0x0145 );
		__QCMP_STATIC_CONSTANT( int, CB_GETCOUNT                 = 0x0146 );
		__QCMP_STATIC_CONSTANT( int, CB_GETCURSEL                = 0x0147 );
		__QCMP_STATIC_CONSTANT( int, CB_GETLBTEXT                = 0x0148 );
		__QCMP_STATIC_CONSTANT( int, CB_GETLBTEXTLEN             = 0x0149 );
		__QCMP_STATIC_CONSTANT( int, CB_INSERTSTRING             = 0x014A );
		__QCMP_STATIC_CONSTANT( int, CB_RESETCONTENT             = 0x014B );
		__QCMP_STATIC_CONSTANT( int, CB_FINDSTRING               = 0x014C );
		__QCMP_STATIC_CONSTANT( int, CB_SELECTSTRING             = 0x014D );
		__QCMP_STATIC_CONSTANT( int, CB_SETCURSEL                = 0x014E );
		__QCMP_STATIC_CONSTANT( int, CB_SHOWDROPDOWN             = 0x014F );
		__QCMP_STATIC_CONSTANT( int, CB_GETITEMDATA              = 0x0150 );
		__QCMP_STATIC_CONSTANT( int, CB_SETITEMDATA              = 0x0151 );
		__QCMP_STATIC_CONSTANT( int, CB_GETDROPPEDCONTROLRECT    = 0x0152 );
		__QCMP_STATIC_CONSTANT( int, CB_SETITEMHEIGHT            = 0x0153 );
		__QCMP_STATIC_CONSTANT( int, CB_GETITEMHEIGHT            = 0x0154 );
		__QCMP_STATIC_CONSTANT( int, CB_SETEXTENDEDUI            = 0x0155 );
		__QCMP_STATIC_CONSTANT( int, CB_GETEXTENDEDUI            = 0x0156 );
		__QCMP_STATIC_CONSTANT( int, CB_GETDROPPEDSTATE          = 0x0157 );
		__QCMP_STATIC_CONSTANT( int, CB_FINDSTRINGEXACT          = 0x0158 );
		__QCMP_STATIC_CONSTANT( int, CB_SETLOCALE                = 0x0159 );
		__QCMP_STATIC_CONSTANT( int, CB_GETLOCALE                = 0x015A );
#if(WINVER >= 0x0400)
		__QCMP_STATIC_CONSTANT( int, CB_GETTOPINDEX              = 0x015b );
		__QCMP_STATIC_CONSTANT( int, CB_SETTOPINDEX              = 0x015c );
		__QCMP_STATIC_CONSTANT( int, CB_GETHORIZONTALEXTENT      = 0x015d );
		__QCMP_STATIC_CONSTANT( int, CB_SETHORIZONTALEXTENT      = 0x015e );
		__QCMP_STATIC_CONSTANT( int, CB_GETDROPPEDWIDTH          = 0x015f );
		__QCMP_STATIC_CONSTANT( int, CB_SETDROPPEDWIDTH          = 0x0160 );
		__QCMP_STATIC_CONSTANT( int, CB_INITSTORAGE              = 0x0161 );
#if(_WIN32_WCE >= 0x0400)
		__QCMP_STATIC_CONSTANT( int, CB_MULTIPLEADDSTRING        = 0x0163 );
#endif
#endif /* WINVER >= 0x0400 */

#if(_WIN32_WINNT >= 0x0501)
		__QCMP_STATIC_CONSTANT( int, CB_GETCOMBOBOXINFO          = 0x0164 );
#endif /* _WIN32_WINNT >= 0x0501 */

#if(_WIN32_WINNT >= 0x0501)
		__QCMP_STATIC_CONSTANT( int, CB_MSGMAX                   = 0x0165 );
#elif(_WIN32_WCE >= 0x0400)
		__QCMP_STATIC_CONSTANT( int, CB_MSGMAX                   = 0x0163 );
#elif(WINVER >= 0x0400)
		__QCMP_STATIC_CONSTANT( int, CB_MSGMAX                   = 0x0162 );
#else
		__QCMP_STATIC_CONSTANT( int, CB_MSGMAX                   = 0x015B );
#endif

		__QOR_DECLARE_OCLASS_ID( CComboBox );

		CComboBox();
		virtual ~CComboBox();

		void OnCommand( unsigned short wCtrlID, unsigned short wCode );

		//--------------------------------------------------------------------------------
		virtual void OnErrSpace(){}
		virtual void OnSelChange(){}
		virtual void OnDblClick(){}
		virtual void OnSetFocus(){}
		virtual void OnKillFocus(){}
		virtual void OnEditChange(){}
		virtual void OnEditUpdate(){}
		virtual void OnDropDown(){}
		virtual void OnCloseUp(){}
		virtual void OnSelEndOK(){}
		virtual void OnSelEndCancel(){}

		long AddString( const TCHAR* strItem );
		long DeleteString( Cmp_uint_ptr Index );
		long Dir( Cmp_uint_ptr Flags, const TCHAR* strPath );
		long FindString( Cmp_uint_ptr Index, const TCHAR* strSearch );
		long FindStringExact( Cmp_uint_ptr Index, const TCHAR* strSearch );
		long GetInfo( COMBOBOXINFO& Info );
		long GetCount();
		long GetCueBanner( wchar_t* wstrBuffer, Cmp_long_ptr lBufferCount );
		long GetCurSel();
		long GetDroppedControlRect( CRectangle& rcCtrl );
		bool GetDroppedState();
		long GetDroppedWidth();
		long GetEditSel( unsigned long& dwBeginSel, unsigned long& dwEndSel );
		bool GetExtendedUI();
		long GetHorizontalExtent();
		long GetItemData( Cmp_uint_ptr Index );
		long GetItemHeight( Cmp_uint_ptr Index );
		long GetText( Cmp_uint_ptr Index, wchar_t* wstrBuffer );
		long GetTextLength( Cmp_uint_ptr Index );
		long GetLocale();
		long GetMinVisible();
		long GetTopIndex();
		long InitStorage( Cmp_uint_ptr ItemCount, long lBytes );
		long InsertString( Cmp_uint_ptr Index, const char* strItem );
		void LimitText( Cmp_uint_ptr CharCount );
		void ResetContent();
		long SelectString( Cmp_uint_ptr Index, const TCHAR* strSearch );
		long SetCueBanner( wchar_t* strCue );
		long SetCurSel( Cmp_uint_ptr Index );
		long SetDroppedWidth( Cmp_uint_ptr PixelWidth );
		long SetEditSel( unsigned short wSelBegin, unsigned short wSelEnd );
		long SetExtendedUI( bool bExtended );
		long SetHorizontalExtent( Cmp_uint_ptr PixelWidth );
		long SetItemData( Cmp_uint_ptr Index, Cmp_long_ptr lItemData );
		long SetItemHeight( Cmp_uint_ptr Index, long lPixelHeight );
		long SetLocale( Cmp_uint_ptr LocaleID );
		bool SetMinvisible( Cmp_uint_ptr MinVisible );
		long SetTopIndex( Cmp_uint_ptr TopIndex );
		void ShowDropDown( bool bShow );

	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CComboBoxFactory : public CWindowFactory
	{
	public:

		__QCMP_STATIC_CONSTANT( long, CBS_SIMPLE            = 0x0001L );
		__QCMP_STATIC_CONSTANT( long, CBS_DROPDOWN          = 0x0002L );
		__QCMP_STATIC_CONSTANT( long, CBS_DROPDOWNLIST      = 0x0003L );
		__QCMP_STATIC_CONSTANT( long, CBS_OWNERDRAWFIXED    = 0x0010L );
		__QCMP_STATIC_CONSTANT( long, CBS_OWNERDRAWVARIABLE = 0x0020L );
		__QCMP_STATIC_CONSTANT( long, CBS_AUTOHSCROLL       = 0x0040L );
		__QCMP_STATIC_CONSTANT( long, CBS_OEMCONVERT        = 0x0080L );
		__QCMP_STATIC_CONSTANT( long, CBS_SORT              = 0x0100L );
		__QCMP_STATIC_CONSTANT( long, CBS_HASSTRINGS        = 0x0200L );
		__QCMP_STATIC_CONSTANT( long, CBS_NOINTEGRALHEIGHT  = 0x0400L );
		__QCMP_STATIC_CONSTANT( long, CBS_DISABLENOSCROLL   = 0x0800L );
#if		(WINVER >= 0x0400)
		__QCMP_STATIC_CONSTANT( long, CBS_UPPERCASE         = 0x2000L );
		__QCMP_STATIC_CONSTANT( long, CBS_LOWERCASE         = 0x4000L );
#endif//WINVER >= 0x0400

		__QOR_DECLARE_OCLASS_ID( CComboBoxFactory );

		CComboBoxFactory();

		virtual ~CComboBoxFactory();
		virtual CComboBox* Create();

		bool GetAutoHScroll();
		void SetAutoHScroll( bool bFlag );
		bool GetSimple();
		void SetSimple( bool bFlag );
		bool GetDropDown();
		void SetDropDown( bool bFlag );
		bool GetDropDownList();
		void SetDropDownList( bool bFlag );
		bool GetOwnerDrawFixed();
		void SetOwnerDrawFixed( bool bFlag );
		bool GetOwnerDrawVariable();
		void SetOwnerDrawVariable( bool bFlag );
		bool GetOEMConvert();
		void SetOEMConvert( bool bFlag );
		bool GetSort();
		void SetSort( bool bFlag );
		bool GetHasStrings();
		void SetHasStrings( bool bFlag );
		bool GetNoIntegralHeight();
		void SetNoIntegralHeight( bool bFlag );
		bool GetDisableNoScroll();
		void SetDisableNoScroll( bool bFlag );
		bool GetUpperCase();
		void SetUpperCase( bool bFlag );
		bool GetLowerCase();
		void SetLowerCase( bool bFlag );

	};


}//nsWin32

#endif//WINQL_GUI_WND_COMBOBOX_H_3
