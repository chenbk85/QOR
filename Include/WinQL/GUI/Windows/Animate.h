//Animate.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Animatation Window classes

#ifndef WINQL_GUI_WND_CCTRL_ANIMATE_H_3
#define WINQL_GUI_WND_CCTRL_ANIMATE_H_3

#include "WinQL/GUI/Views/WindowView.h"
#include "WinQL/GUI/Windows/WinCtrlWindow.h"
#include "WinQL/GUI/Windows/CommonCtrlClass.h"
#include "WinQL/GUI/Windows/CommonCtrlFactory.h"
#include "WinQL/GUI/CommonCtrl.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//TODO: Add CAnimateVisualModel, CAnimateController, CAnimateDataModel, CAnimateClassModel

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CAnimateClass : public CCommonCtrlClass
	{
	public:
		CAnimateClass();
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CAnimate : public CWinCtrlWindow
	{
	public:

		typedef CAnimateClass TWndClass;

		//Notifications
		__QCMP_STATIC_CONSTANT( int, ACN_START              = 1 );
		__QCMP_STATIC_CONSTANT( int, ACN_STOP               = 2 );

		//Messages
		__QCMP_STATIC_CONSTANT( int, ACM_PLAY               = (COSWindow::wmUser + 101) );
		__QCMP_STATIC_CONSTANT( int, ACM_STOP               = (COSWindow::wmUser+102) );
		__QCMP_STATIC_CONSTANT( int, ACM_ISPLAYING          = (COSWindow::wmUser+104) );

#ifdef UNICODE
		__QCMP_STATIC_CONSTANT( int, ACM_OPEN               = (COSWindow::wmUser+103) );
#else
		__QCMP_STATIC_CONSTANT( int, ACM_OPEN				= (COSWindow::wmUser+100) );
#endif

		//--------------------------------------------------------------------------------
		CAnimate();
		~CAnimate();

		virtual void OnCommand( unsigned short wCtrlID, unsigned short wCode );
		virtual void OnStart( void );
		virtual void OnStop( void );

		bool IsPlaying();
		bool Open( nsWin32::InstanceHandle hInst, Cmp_long_ptr AVIResource );
		bool Play( unsigned int uiRepeatCount, unsigned short wBeginFrame, unsigned short wEndFrame );
		bool Stop( void );

	};

	//--------------------------------------------------------------------------------		
	class __QOR_INTERFACE( __WINQL_GUI ) CAnimateFactory : public CCommonCtrlFactory< CAnimate >
	{
	public:

		static const long ACS_CENTER;
		static const long ACS_TRANSPARENT;
		static const long ACS_AUTOPLAY;

#if		(_WIN32_IE >= 0x0300)
		static const long ACS_TIMER; // don't use threads... use timers
#endif//(_WIN32_IE >= 0x0300)

		CAnimateFactory();
		bool GetCenter();
		void SetCenter( bool bFlag );
		bool GetTransparent();
		void SetTransparent( bool bFlag );
		bool GetAutoPlay();
		void SetAutoPlay( bool bFlag );
		bool GetTimer();
		void SetTimer( bool bFlag );

	};

}//nsWin32

#endif//WINQL_GUI_WND_CCTRL_ANIMATE_H_3
