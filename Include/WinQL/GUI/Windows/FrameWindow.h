//FrameWindow.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Frame Window

#ifndef WINQL_GUI_WND_FRAME_H_3
#define WINQL_GUI_WND_FRAME_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/GUI/Window.h"
#include "../Controllers/FrameMenuController.h"
#include "../Controllers/FrameNCController.h"
#include "../Controllers/FrameRenderingController.h"
#include "../Controllers/FrameScrollController.h"
#include "../Controllers/FrameWindowController.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CFrameWindowClass : public CWindowClass
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CFrameWindowClass );

		CFrameWindowClass();
		~CFrameWindowClass();
		const mxTCHAR* Name();
		bool Registered( bool bRegister = false );

	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CFrameWindow : public COSWindow
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CFrameWindow );

		CFrameWindow();
		CFrameWindow( CWindowClass* pClass, unsigned long dwExStyle, const TCHAR* lpWindowName, unsigned long dwStyle, int x, int y, int nWidth, int nHeight, CWindowHandle::refType hWndParent, CMenuHandle::refType hMenu, CWinModule* pModule, void* lpParam );
		virtual ~CFrameWindow();

	private:
		
		CFrameWindow( const CFrameWindow& );
		CFrameWindow& operator = ( const CFrameWindow& );
	};

	class __QOR_INTERFACE( __WINQL ) CFrameWindowStyleModel;
	class __QOR_INTERFACE( __WINQL ) CFrameWindowClassModel;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CFrameWindowFactory : public CTWindowFactory< class CFrameWindowModel, class CFrameWindow >
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CFrameWindowFactory );
		
		CFrameWindowFactory();
		virtual ~CFrameWindowFactory();
		virtual CFrameWindow* Create( CWindowClass*, CMenu* );

	private:

		CFrameWindowFactory( const CFrameWindowFactory& );
		CFrameWindowFactory& operator = ( const CFrameWindowFactory& );
	};


}//nsWin32

#endif//WINQL_GUI_WND_FRAME_H_3
