//HotKey.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//HotKey Common Control Window

#ifndef WINQL_GUI_WND_CCTRL_HOTKEY_H_3
#define WINQL_GUI_WND_CCTRL_HOTKEY_H_3

#include "WinQL/GUI/Views/WindowView.h"
#include "WinQL/GUI/Windows/WinCtrlWindow.h"
#include "WinQL/WinQL.h"
#include "WinQL/GUI/CommonCtrl.h"
#include "WinQL/GUI/WindowFactory.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CHotKeyClass : public CWindowClass
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CHotKeyClass );

		CHotKeyClass();
		~CHotKeyClass();
		virtual bool Preregistered();
		const TCHAR* Name();

	private:

		CCommonCtrl m_ComCtrl32;

		CHotKeyClass( const CHotKeyClass& );
		CHotKeyClass& operator = ( const CHotKeyClass& );
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CWindowHotKey : public CWinCtrlWindow
	{
	public:

		//Notifications
		__QCMP_STATIC_CONSTANT( int, EN_CHANGE				= 0x0300 );

		//Messages
		__QCMP_STATIC_CONSTANT( int, HKM_SETHOTKEY           = ( COSWindow::wmUser+1 ) );
		__QCMP_STATIC_CONSTANT( int, HKM_GETHOTKEY           = ( COSWindow::wmUser+2 ) );
		__QCMP_STATIC_CONSTANT( int, HKM_SETRULES            = ( COSWindow::wmUser+3 ) );

		__QOR_DECLARE_OCLASS_ID( CWindowHotKey );

		CWindowHotKey();
		~CWindowHotKey();

		virtual void OnCommand( unsigned short wCtrlID, unsigned short wCode );
		virtual void OnChange();
		virtual void OnUnknownCommand( unsigned short wCode );

		long GetHotKey();
		void SetHotKey( unsigned long dwHotKey );
		void SetRules( unsigned long dwInvalid, unsigned short wDefault );

	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CHotKeyFactory : public CWindowFactory
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CHotKeyFactory );

		CHotKeyFactory();	
		virtual ~CHotKeyFactory();
		virtual CWindowHotKey* Create();
		
	private:

		CHotKeyFactory( const CHotKeyFactory& );
		CHotKeyFactory& operator = ( const CHotKeyFactory& );
	};

}//nsWin32

#endif//WINQL_GUI_WND_CCTRL_HOTKEY_H_3
