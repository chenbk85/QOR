//CommonCtrl.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GUI_COMMONCTRL_H_3
#define WINQL_GUI_COMMONCTRL_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Handles.h"
#include "WinQL/GUI/GUI.h"
#include "WinQL/GUI/Window.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CComCtl32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CCommonCtrl
	{
	public:

		__QCMP_STATIC_CONSTANT( unsigned long, CCLISTVIEW_CLASSES	= 0x00000001 );// listview, header
		__QCMP_STATIC_CONSTANT( unsigned long, CCTREEVIEW_CLASSES	= 0x00000002 );// treeview, tooltips
		__QCMP_STATIC_CONSTANT( unsigned long, CCBAR_CLASSES       	= 0x00000004 );// toolbar, statusbar, trackbar, tooltips
		__QCMP_STATIC_CONSTANT( unsigned long, CCTAB_CLASSES       	= 0x00000008 );// tab, tooltips
		__QCMP_STATIC_CONSTANT( unsigned long, CCUPDOWN_CLASS      	= 0x00000010 );// updown
		__QCMP_STATIC_CONSTANT( unsigned long, CCPROGRESS_CLASS    	= 0x00000020 );// progress
		__QCMP_STATIC_CONSTANT( unsigned long, CCHOTKEY_CLASS      	= 0x00000040 );// hotkey
		__QCMP_STATIC_CONSTANT( unsigned long, CCANIMATE_CLASS     	= 0x00000080 );// animate
		__QCMP_STATIC_CONSTANT( unsigned long, CCWIN95_CLASSES     	= 0x000000FF );
		__QCMP_STATIC_CONSTANT( unsigned long, CCDATE_CLASSES      	= 0x00000100 );// month picker, date picker, time picker, updown
		__QCMP_STATIC_CONSTANT( unsigned long, CCUSEREX_CLASSES    	= 0x00000200 );// comboex
		__QCMP_STATIC_CONSTANT( unsigned long, CCCOOL_CLASSES      	= 0x00000400 );// rebar (coolbar) control
#if (_WIN32_IE >= 0x0400)
		__QCMP_STATIC_CONSTANT( unsigned long, CCINTERNET_CLASSES   = 0x00000800 );
		__QCMP_STATIC_CONSTANT( unsigned long, CCPAGESCROLLER_CLASS = 0x00001000 );  // page scroller
		__QCMP_STATIC_CONSTANT( unsigned long, CCNATIVEFNTCTL_CLASS = 0x00002000 );  // native font control
#endif																	 	
																		 	
//#if (_WIN32_WINNT >= 0x0501)											 	
		__QCMP_STATIC_CONSTANT( unsigned long, CCSTANDARD_CLASSES   = 0x00004000 );
		__QCMP_STATIC_CONSTANT( unsigned long, CCLINK_CLASS         = 0x00008000 );
//#endif // (_WIN32_WINNT >= 0x0501)

		__QOR_DECLARE_OCLASS_ID( CCommonCtrl );

		CCommonCtrl();
		CCommonCtrl( unsigned long dwICC, int* pbResult = 0 );
		virtual ~CCommonCtrl();

		void DrawInsert( COSWindow::refType WndParent, COSWindow::refType LB, int nItem );
		int LBItemFromPt( COSWindow::refType LB, nsWin32::POINT pt, bool bAutoScroll );
		bool MakeDragList( COSWindow::refType LB );

	private:			

		nsWinQAPI::CComCtl32& m_ComCtl32Library;

		__QCS_DECLARE_NONCOPYABLE( CCommonCtrl );

	};

}//nsWin32

#endif//WINQL_GUI_COMMONCTRL_H_3
