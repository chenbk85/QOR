//BufferedPaintSession.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_OSGUI_THEME_BUFFPAINT_H_3
#define WINQL_OSGUI_THEME_BUFFPAINT_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "WinQL/Definitions/Handles.h"
#include "WinQL/Definitions/Data.h"
#include "WinQL/Application/Graphics/WinQLDeviceContext.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CUXTheme;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CBufferedPaintThreadSession
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CBufferedPaintThreadSession );

		CBufferedPaintThreadSession();
		~CBufferedPaintThreadSession();

	protected:

		nsWinQAPI::CUXTheme& m_UXTheme;
		long m_lStatus;

	private:

		CBufferedPaintThreadSession& operator = ( const CBufferedPaintThreadSession& );
	};

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CBufferedPaintSession
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CBufferedPaintSession );

		CBufferedPaintSession( CBufferedPaintThreadSession& ThreadSession, CDeviceContext::refType dcTarget, const nsWin32::RECT* prcTarget, nsWin32::BP_BUFFERFORMAT dwFormat, BP_PAINTPARAMS* pPaintParams, CDeviceContext::refType dc );
		~CBufferedPaintSession();

		void SetCopyOnClose( bool bCopy );
		long Clear( const nsWin32::RECT* prc );
		long SetAlpha( const nsWin32::RECT* prc, unsigned char alpha );
		long GetBits( nsWin32::RGBQUAD** ppbBuffer, int* pcxRow );
		CDeviceContext::refType GetDC( void );
		CDeviceContext::refType GetTargetDC();
		long GetTargetRect( nsWin32::RECT* prc );

	protected:

		nsWinQAPI::CUXTheme& m_UXTheme;
		CBufferedPaintThreadSession& m_ThreadSession;
		CPaintBufferHandle m_Handle;
		bool m_bCopyBuffer;
		long m_lStatus;

	private:

		CBufferedPaintSession& operator = ( const CBufferedPaintSession& );
	};


}//nsWin32

#endif//_QSYS_MSWINDOWS_WIN32_OSGUI_THEME_BUFFPAINT_H_
