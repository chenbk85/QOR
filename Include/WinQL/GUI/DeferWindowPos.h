//DeferWindowPos.h

// Copyright Querysoft Limited 2013, 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef WINQL_GUI_DEFERWINDOWPOS_H_3
#define WINQL_GUI_DEFERWINDOWPOS_H_3

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#include "CodeQOR/Macros/codingmacros.h"
#include "WinQL/Application/User/WinQLUserObject.h"
#include "WinQL/Definitions/Handles.h"
#include "WinQL/CodeServices/Handles/WinQLHandleMap.h"
#include "WinQL/CodeServices/Handles/WinQLRAIISessionHandle.h"
#include "CodeQOR/DataStructures/TLRef.h"

//--------------------------------------------------------------------------------
namespace nsWinQAPI
{
	class __QOR_INTERFACE( __WINQAPI ) CUser32;
}

//--------------------------------------------------------------------------------
namespace nsWin32
{
	class __QOR_INTERFACE( __WINQL_GUI ) COSWindow;
	class __QOR_INTERFACE( __WINQL_GUI ) CDeferWindowPos;

	typedef CRAIISessionHandle CDeferWindowPosHandle;
	typedef nsWin32::CTHandleMap< CDeferWindowPosHandle::refType, CDeferWindowPos > CDeferWindowPosHandleMap;

	extern __QCMP_DECLARE_PERTHREAD CDeferWindowPosHandleMap* p_tDeferWindowPosHandleMap;

	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __WINQL_GUI ) CDeferWindowPos
	{
	public:

		typedef nsCodeQOR::CTLRef< CDeferWindowPos > refType;

		__QOR_DECLARE_OCLASS_ID( CDeferWindowPos );

		CDeferWindowPos( int nNumWindows );		
		void operator()( COSWindow& Window, COSWindow& WindowInsertAfter, int x, int y, int cx, int cy, unsigned int uFlags );
		virtual ~CDeferWindowPos();
		CUserObject Security();
		int Status( void );

		static refType FromHandle( CDeferWindowPosHandle::refType hDWP );
		CDeferWindowPosHandle::refType Handle( void );

	protected:

		CDeferWindowPosHandle m_Handle;
		int m_iStatus;

		void Init( void );
		void Uninit( void );
		CDeferWindowPos( CDeferWindowPosHandle::refType hDWP );

	private:			

		nsWinQAPI::CUser32& m_User32Library;

		__QCS_DECLARE_NONCOPYABLE( CDeferWindowPos );

	};

}//nsWin32

#endif//WINQL_GUI_DEFERWINDOWPOS_H_3
