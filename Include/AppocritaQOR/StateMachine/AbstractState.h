//AbstractState.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Abstract base for all state machine states

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef APPOCRITAQOR_STATEMACHINE_ABSTRACTSTATE_H_3
#define APPOCRITAQOR_STATEMACHINE_ABSTRACTSTATE_H_3

//------------------------------------------------------------------------------
namespace nsAppocrita
{
	class __QOR_INTERFACE( __APPOCRITA ) CState;
	class __QOR_INTERFACE( __APPOCRITA ) CStateMachine;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __APPOCRITA ) CAbstractState
	{
	public:

		//------------------------------------------------------------------------------
		enum eStateType 
		{
			AbstractState,
			StandardState,
			FinalState,
			HistoryState
		};

		CAbstractState( eStateType type );
		virtual ~CAbstractState();

		CState* ParentState() const;
		CStateMachine* Machine() const;

		virtual void OnEntry( void ) = 0;
		virtual void OnExit( void ) = 0;

	protected:

		CAbstractState( CState* pParent = 0, eStateType type = AbstractState  );

	private:

		unsigned int stateType:31;
		unsigned int isMachine:1;

		mutable CState* parentState;

	};

}//nsAppocrita

#endif//APPOCRITAQOR_STATEMACHINE_ABSTRACTSTATE_H_3

