//WindowModel.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "CompilerQOR.h"

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef MAMMUTQOR_VISUALMODELS_WINDOW_H_3
#define MAMMUTQOR_VISUALMODELS_WINDOW_H_3

#include "SystemQOR.h"
#include "MammutQOR/Model.h"

//------------------------------------------------------------------------------
namespace nsMammut
{
    //------------------------------------------------------------------------------
    //Model for a Visual/GUI Window
    class __QOR_INTERFACE( __MAMMUT ) CWindowModel : public CModel
    {
    public:

		CWindowModel();
		virtual ~CWindowModel();

		//Classification data, names, ids and resources common to a type of window
		//Mode, iconized etc
		//Position
		//z-Order
		//Sizes, Minimums, Maximums etc
		//Scales, zoom factors, viewport, coordinate system of internals
		//Properties of background, e.g. transparency, erasure
		//Properties of scroll
		//Properties of parenting and ownership
		//Visual style, colour scheme, border style, painting metrics, frame layout, captions, fonts and user sizability
		//Update state and how to update properties
		//Clipping
		//Painting resources, icons, brushes etc
		//Focues, IME and input routing properties
	};

}//nsMammut

/*
typedef struct _win       // definition of a window
{						   
    int   _cury;          // current pseudo-cursor
    int   _curx;		   
    int   _maxy;          // max window coordinates
    int   _maxx;		   
    int   _begy;          // origin on screen 
    int   _begx;		   
    int   _flags;         // window properties 
    chtype _attrs;        // standard attributes and colors 
    chtype _bkgd;         // background, normally blank 
    bool  _clear;         // causes clear at next refresh 
    bool  _leaveit;       // leaves cursor where it is 
    bool  _scroll;        // allows window scrolling 
    bool  _nodelay;       // input character wait flag 
    bool  _immed;         // immediate update flag 
    bool  _sync;          // synchronise window ancestors 
    bool  _use_keypad;    // flags keypad key mode active 
    chtype **_y;          // pointer to line pointer array
    int   *_firstch;      // first changed character in line 
    int   *_lastch;       // last changed character in line 
    int   _tmarg;         // top of scrolling region 
    int   _bmarg;         // bottom of scrolling region 
    int   _delayms;       // milliseconds of delay for getch() 
    int   _parx, _pary;   // coords relative to parent (0,0) 
    struct _win *_parent; // subwin's pointer to parent win
} WINDOW;
*/

#endif//MAMMUTQOR_VISUALMODELS_WINDOW_H_3
