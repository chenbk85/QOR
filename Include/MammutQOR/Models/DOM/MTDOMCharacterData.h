//MTDOMCharacterData.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef MAMMUTQOR_MODELS_DOM_CHARACTERDATA_H_3
#define MAMMUTQOR_MODELS_DOM_CHARACTERDATA_H_3

#include "MammutQOR/Models/DOM/MTDOMNode.h"
#include "MammutQOR/Models/DOM/MTXMLDOM.h"

//------------------------------------------------------------------------------
namespace nsMammut
{
	//------------------------------------------------------------------------------
	class __QOR_INTERFACE(__MAMMUT) CCharacterData : public CDOMNode
	{
	public:

		typedef CDOMNode BaseType;

		CCharacterData(CModel* pContainer = 0);
		CCharacterData(const CCharacterData& src);
		CCharacterData(CPropertySet& src);

		virtual ~CCharacterData();

		CCharacterData& operator = (const CCharacterData& src);
		CCharacterData& operator = (CPropertySet& src);

		bool operator == (const CCharacterData& src);

		virtual bool HasChildNodes( void );

		unsigned long Length( void );
		CDOMString SubStringData( unsigned long ulOffset, unsigned long ulCount );
		void AppendData( CDOMString& arg );
		void InsertData( unsigned long ulOffset, CDOMString& arg );
		void DeleteData( unsigned long ulOffset, unsigned long ulCount );
		void ReplaceData( unsigned long ulOffset, unsigned long ulCount, CDOMString& arg );

	protected:

		virtual bool ValidChildType( CMUint16 NodeType );

		CProperty< CDOMString > m_Data;

	private:

	};

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE(__MAMMUT) CComment : public CCharacterData
	{
	public:

		typedef CCharacterData BaseType;

		CComment(CModel* pContainer = 0);
		CComment(const CComment& src);
		CComment(CPropertySet& src);

		virtual ~CComment();

		CComment& operator = (const CComment& src);
		CComment& operator = (CPropertySet& src);

		bool operator == (const CComment& src);
	};

}//nsMammut

#endif//MAMMUTQOR_MODELS_DOM_CHARACTERDATA_H_3
