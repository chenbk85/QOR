//MTDOMNode.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef MAMMUTQOR_MODELS_DOM_NODE_H_3
#define MAMMUTQOR_MODELS_DOM_NODE_H_3

#include "SystemQOR.h"
#include "MammutQOR/Models/VectorModel.h"
#include "MammutQOR/Models/MapModel.h"
#include "MammutQOR/Model/MPropertySet.h"
#include "MammutQOR/Model/MTypes.h"
#include "MammutQOR/Model/MRefProperty.h"
#include "MammutQOR/Models/DOM/MTXMLDOM.h"
#include "CodeQOR/Text/TString.h"

//------------------------------------------------------------------------------
namespace nsMammut
{
	class __QOR_INTERFACE( __MAMMUT ) CDOMDocument;

	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __MAMMUT ) CDOMNode : public CPropertySet
	{
	public:

		typedef CPropertySet BaseType;

		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, ELEMENT_NODE = 1);
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, ATTRIBUTE_NODE = 2);					//The node is an Attribute
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, TEXT_NODE = 3);						//The node is a Text node
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, CDATA_SECTION_NODE = 4);				//The node is a CDATASection
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, ENTITY_REFERENCE_NODE = 5);			//The node is an Entity Reference
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, ENTITY_NODE = 6);						//The node is an Entity
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, PROCESSING_INSTRUCTION_NODE = 7);		//The node is a ProcessingInstruction
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, COMMENT_NODE = 8);						//The node is a Comment
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, DOCUMENT_NODE = 9);					//The node is a Document
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, DOCUMENT_TYPE_NODE = 10);				//The node is a DocumentType
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, DOCUMENT_FRAGMENT_NODE = 11);			//The node is a DocumentFragment
		__QCMP_STATIC_CONSTANT( Cmp_unsigned__int16, NOTATION_NODE = 12);					//The node is a Notation

		CDOMNode( CModel* pContainer = 0 );
		CDOMNode( const CDOMNode& src );
		CDOMNode( CPropertySet& src );
		
		virtual ~CDOMNode();

		CDOMNode& operator = (const CDOMNode& src);
		CDOMNode& operator = (CPropertySet& src);

		bool operator == ( const CDOMNode& src);

		virtual CDOMNode& InsertBefore(CDOMNode& newChild, CDOMNode& refChild);
		virtual CDOMNode& ReplaceChild(CDOMNode& newChild, CDOMNode& oldChild);
		virtual CDOMNode& RemoveChild(CDOMNode& oldChild);
		virtual CDOMNode& AppendChild(CDOMNode& newChild);
		virtual bool HasChildNodes(void);
		CDOMNode& CloneNode(bool bDeep);

		CProperty< CDOMString > m_NodeName;
		CProperty< CDOMString > m_NodeValue;
		CProperty< CMUint16 > m_NodeType;
		CProperty< CDOMNode* > m_ParentNode;
		COptionalProperty< CVectorModel< CDOMNode > > m_ChildNodes;
		CRefProperty< CVectorModel< CDOMNode >::indexType > m_FirstChild;
		CRefProperty< CVectorModel< CDOMNode >::indexType > m_LastChild;
		CRefProperty< CVectorModel< CDOMNode >::indexType > m_PreviousSibling;
		CRefProperty< CVectorModel< CDOMNode >::indexType > m_NextSibling;
		CProperty< CMapModel< const nsCodeQOR::CUCS2String, CDOMNode > > m_Attributes;
		CProperty< CDOMDocument* > m_OwnerDocument;

	protected:

		virtual bool ValidChildType( CMUint16 NodeType );
	};

}//nsMammut

#endif//MAMMUTQOR_MODELS_DOM_NODE_H_3
