//MPropertySet.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifdef	__QCMP_OPTIMIZEINCLUDE
#pragma	__QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef MAMMUTQOR_MODEL_PROPERTY_SET_H_3
#define MAMMUTQOR_MODEL_PROPERTY_SET_H_3

#include "SystemQOR.h"
#include "CodeQOR/DataTypes/OTypes.h"
#include "CodeQOR/Observer/Observer.h"
#include "CodeQOR/DataStructures/TLRef.h"
#include "CodeQOR/Text/Char.h"
#include "CodeQOR/DataStructures/TMap.h"
#include "MammutQOR/Model/MProperty.h"
#include "MammutQOR/Model.h"

//------------------------------------------------------------------------------
namespace nsMammut
{
	//------------------------------------------------------------------------------
	class __QOR_INTERFACE( __MAMMUT ) CPropertySet : public CModel
	{
		friend class CPropertyIterator;

	public:

		CPropertySet();
		CPropertySet( CModel* pContainer );
		virtual ~CPropertySet();
		CPropertySet( const CPropertySet& src);
		CPropertySet& operator = ( const CPropertySet& src );

		//------------------------------------------------------------------------------
		template< class TValue >
		CModelItem::refType CreateProperty( const nsCodeQOR::CString& strName, const TValue& InitialValue )
		{
			CModelItem::refType Property( new CProperty< TValue >( *this, strName, InitialValue ), true );
			return Property;
		}
		
		virtual iterator insert( CModel::refType Item );
		CModelItem::refType operator[]( const nsCodeQOR::CString& strName ) const;
		
		virtual iterator begin();
		virtual iterator end();

	protected:

		virtual void OnChanged( CModel::refType Prop );
		unsigned long AddProperty( const nsCodeQOR::CString& strName, CModelItem::refType Prop );
		CModelItem::refType operator[]( unsigned long ulIndex );

		mutable nsCodeQOR::CTMap< nsCodeQOR::CString, CModel::refType > m_PropertyMap;
	};

}//nsMammut

#endif//MAMMUTQOR_MODEL_PROPERTY_SET_H_3
