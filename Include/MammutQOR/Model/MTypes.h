//MTypes.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifdef  __QCMP_OPTIMIZEINCLUDE
#pragma __QCMP_OPTIMIZEINCLUDE
#endif//__QCMP_OPTIMIZEINCLUDE

#ifndef MAMMUTQOR_MODEL_MTYPES_H_3
#define MAMMUTQOR_MODEL_MTYPES_H_3

#include "SystemQOR.h"
#include "CodeQOR/DataTypes/OTypes.h"
#include <ostream>

//------------------------------------------------------------------------------
namespace nsMammut
{
	//------------------------------------------------------------------------------
	class CMLongDouble : public nsCodeQOR::LongDouble
	{
	public:
		CMLongDouble();
		CMLongDouble( const CMLongDouble& x );
        explicit CMLongDouble( Cmp_C_long_double& x );

		friend std::ostream& operator << ( std::ostream& os, const CMLongDouble& mld );

	};

	std::ostream& operator << ( std::ostream& os, const CMLongDouble& mld );

	//------------------------------------------------------------------------------
	class CMUint16 : public nsCodeQOR::UInt16
	{
	public:
		CMUint16();
		CMUint16(const CMUint16& x);
		explicit CMUint16(Cmp_C_unsigned__int16& x);

		friend std::ostream& operator << (std::ostream& os, const CMUint16& mu16);
	};

	std::ostream& operator << (std::ostream& os, const CMUint16& mu16);

}//nsMammut

#endif//MAMMUTQOR_MODEL_MTYPES_H_3
