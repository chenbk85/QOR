//LIN_mqueue.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Linux overrides for mqueue

#ifndef SYSTEMQOR_LIN_MQUEUE_H_3
#define SYSTEMQOR_LIN_MQUEUE_H_3

#include "SystemQOR/Linux/types/mqueue_types.h"
//#include "SystemQOR/Posix/Baseregex.h"

//--------------------------------------------------------------------------------
namespace nsLinux
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cmqueue //: public nsBaseCRT::Cregex
	{
	public:

		Cmqueue(){}
		~Cmqueue(){}

		virtual int mq_close( mqd_t );
		virtual int mq_getattr( mqd_t, mq_attr* );
		virtual int mq_notify( mqd_t, const sigevent *);
		virtual mqd_t mq_open( const char *, int, ... );
		virtual ssize_t mq_receive( mqd_t, char *, size_t, unsigned* );
		virtual int mq_send( mqd_t, const char *, size_t, unsigned );
		virtual int mq_setattr( mqd_t, const mq_attr* __restrict, mq_attr* __restrict );
		virtual ssize_t mq_timedreceive( mqd_t, char *__restrict, size_t, unsigned* __restrict, const timespec* __restrict );
		virtual int mq_timedsend( mqd_t, const char *, size_t, unsigned, const timespec* );
		virtual int mq_unlink( const char* );

	private:

		Cmqueue( const Cmqueue& );
		Cmqueue& operator = ( const Cmqueue& );

	};

}//nsLinux

#endif//SYSTEMQOR_LIN_MQUEUE_H_3
