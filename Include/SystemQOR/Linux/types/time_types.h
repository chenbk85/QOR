//time_types.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.


#ifndef SYSTEMQOR_LIN_TYPES_TIME_H_3
#define SYSTEMQOR_LIN_TYPES_TIME_H_3

#include "SystemQOR/Linux/LIN_features.h"

#ifdef __cplusplus
#	define NULL 0L
#else
#	define NULL ((void*)0)
#endif

#define __NEED_size_t
#define __NEED_time_t
#define __NEED_clock_t
#define __NEED_struct_timespec
#define __NEED_suseconds_t

#if defined(_POSIX_SOURCE) || defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
#	define __NEED_clockid_t
#	define __NEED_timer_t
#	define __NEED_pid_t
#	define __NEED_locale_t
#endif

#include QOR_SYS_ARCHHEADER(alltypes.h)

#if defined(_BSD_SOURCE) || defined(_GNU_SOURCE)
#	define __tm_gmtoff tm_gmtoff
#	define __tm_zone tm_zone
#endif

//------------------------------------------------------------------------------
namespace nsLinux
{
    typedef time_t __time32_t;
    typedef time_t __time64_t;

	//------------------------------------------------------------------------------
	struct tm
	{
		int tm_sec;
		int tm_min;
		int tm_hour;
		int tm_mday;
		int tm_mon;
		int tm_year;
		int tm_wday;
		int tm_yday;
		int tm_isdst;
		long __tm_gmtoff;
		const char *__tm_zone;
	};

	//------------------------------------------------------------------------------
	struct _utimbuf
	{
        time_t actime;
        time_t modtime;
	};

    typedef _utimbuf __utimbuf32;
    typedef _utimbuf __utimbuf64;

    typedef int errno_t;
}//nsLinux

#define CLOCKS_PER_SEC 1000000L

#define TIME_UTC 1

#if defined(_POSIX_SOURCE) || defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE)

//------------------------------------------------------------------------------
namespace nsLinux
{
	//------------------------------------------------------------------------------
	struct itimerspec
	{
		timespec it_interval;
		timespec it_value;
	};

	struct sigevent;

	//compatibility
	//--------------------------------------------------------------------------------
	struct __timeb32
	{
        __time32_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
	};

	//compatibility
	//--------------------------------------------------------------------------------
	struct timeb
	{
        time_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
	};

	//compatibility
	//--------------------------------------------------------------------------------
	struct __timeb64
	{
        __time64_t time;
        unsigned short millitm;
        short timezone;
        short dstflag;
	};

}//nsLinux

#	define CLOCK_REALTIME           0
#	define CLOCK_MONOTONIC          1
#	define CLOCK_PROCESS_CPUTIME_ID 2
#	define CLOCK_THREAD_CPUTIME_ID  3
#	define CLOCK_MONOTONIC_RAW      4
#	define CLOCK_REALTIME_COARSE    5
#	define CLOCK_MONOTONIC_COARSE   6
#	define CLOCK_BOOTTIME           7
#	define CLOCK_REALTIME_ALARM     8
#	define CLOCK_BOOTTIME_ALARM     9
#	define CLOCK_SGI_CYCLE         10
#	define CLOCK_TAI               11

#	define TIMER_ABSTIME 1

#endif


#if defined(_XOPEN_SOURCE) || defined(_BSD_SOURCE) || defined(_GNU_SOURCE)
extern "C"
{
    extern int _daylight;
    extern long _timezone;
    extern char *_tzname[2];
    extern int getdate_err;
}
#endif


#endif//SYSTEMQOR_LIN_TYPES_TIME_H_3
