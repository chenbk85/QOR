//stdlib_types.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.


#ifndef SYSTEMQOR_LIN_TYPES_STDLIB_H_3
#define SYSTEMQOR_LIN_TYPES_STDLIB_H_3

#include "SystemQOR/Linux/LIN_features.h"

#ifdef __cplusplus
#	define NULL 0L
#else
#	define NULL ((void*)0)
#endif

#define __NEED_size_t
#define __NEED_wchar_t
#define __NEED_intptr_t
#define __NEED_uintptr_t
#define __NEED_wint_t

#include QOR_SYS_ARCHHEADER(alltypes.h)

#include "SystemQOR/Linux/types/locale_types.h"
#include "SystemQOR/Linux/types/stddef_types.h"
#include "SystemQOR/Linux/types/sys/stat_types.h"
//--------------------------------------------------------------------------------
namespace nsLinux
{
	//compatibility
	typedef int (__cdecl * _onexit_t)(void);

	//--------------------------------------------------------------------------------
	//compatibility
	struct HeapInfo
	{
		int* _pentry;
		size_t _size;
		int _useflag;
	};

	//--------------------------------------------------------------------------------
	typedef struct
	{
		int quot, rem;
	} div_t;

	//--------------------------------------------------------------------------------
	typedef struct
	{
		long quot, rem;
	} ldiv_t;

	//--------------------------------------------------------------------------------
	typedef struct
	{
		long long quot, rem;
	} lldiv_t;

	struct __locale_struct;

    __QCMP_STATIC_CONSTANT( int, ExitFailure        = 1 );          //#define EXIT_FAILURE 1
    __QCMP_STATIC_CONSTANT( int, ExitSuccess        = 0 );          //#define EXIT_SUCCESS 0
    __QCMP_STATIC_CONSTANT( unsigned long, RandMax  = 0x7fffffff ); //#define RAND_MAX (0x7fffffff)

    //__QOR_INTERFACE( __QSYS ) int MBCurMax( void );//{ return ((size_t)+4); }  //#define MB_CUR_MAX ((size_t)+4)

}//nsLinux


#if defined(_POSIX_SOURCE) || defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
#	define WNOHANG    1
#	define WUNTRACED  2
#	define WEXITSTATUS(s) (((s) & 0xff00) >> 8)
#	define WTERMSIG(s) ((s) & 0x7f)
#	define WSTOPSIG(s) WEXITSTATUS(s)
#	define WIFEXITED(s) (!WTERMSIG(s))
#	define WIFSTOPPED(s) ((short)((((s)&0xffff)*0x10001)>>8) > 0x7f00)
#	define WIFSIGNALED(s) (((s)&0xffff)-1U < 0xffu)
#endif


#if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
#	include "SystemQOR/Linux/types/alloca_types.h"
#	define WCOREDUMP(s) ((s) & 0x80)
#	define WIFCONTINUED(s) ((s) == 0xffff)
#endif

#if defined(_LARGEFILE64_SOURCE) || defined(_GNU_SOURCE)
#	define mkstemp64 mkstemp
#	define mkostemp64 mkostemp
#	if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
#		define mkstemps64 mkstemps
#		define mkostemps64 mkostemps
#	endif
#endif


#endif//SYSTEMQOR_LIN_TYPES_STDLIB_H_3
