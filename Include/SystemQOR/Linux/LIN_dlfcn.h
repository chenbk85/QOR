//LIN_dlfcn.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Linux overrides for dlfcn

#ifndef SYSTEMQOR_LIN_DLFCN_H_3
#define SYSTEMQOR_LIN_DLFCN_H_3

#include "SystemQOR/Posix/Basedlfcn.h"

//--------------------------------------------------------------------------------
namespace nsLinux
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cdlfcn : public nsBaseCRT::Cdlfcn
	{
	public:

		Cdlfcn();
		~Cdlfcn();

        virtual int dlclose( void* );
        virtual char* dlerror( void );
        virtual void* dlopen( const char*, int );
        virtual void* dlsym( void* __QCMP_RESTRICT, const char* __QCMP_RESTRICT );

#if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
		virtual int dladdr( const void*, Dl_info* );
		virtual int dlinfo( void*, int, void* );
#endif

	private:

		Cdlfcn( const Cdlfcn& );
		Cdlfcn& operator = ( const Cdlfcn& );

        int __dladdr(const void *addr, Dl_info *info);
        void* __tls_get_new(size_t *v);
        void update_tls_size( void );
        void* __dynlink( int argc, char** argv );
        int invalid_dso_handle( void* h );
        void* __dlsym( void* p, const char* s, void* ra );
        //int dl_iterate_phdr( (int)(*callback)( void* , size_t , void* ), void* data );
        void* do_dlsym( void* p, const char* s, void* ra );

	};

}//nsLinux

#endif//SYSTEMQOR_LIN_AIO_H_3
