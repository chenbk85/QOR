//LIN_ctype.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Linux overrides for ctype

#ifndef SYSTEMQOR_LIN_CTYPE_H_3
#define SYSTEMQOR_LIN_CTYPE_H_3

#include "SystemQOR/Linux/types/ctype_types.h"
//#include "SystemQOR/Posix/Baseregex.h"

//--------------------------------------------------------------------------------
namespace nsLinux
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cctype //: public nsBaseCRT::Cregex
	{
	public:

		Cctype(){}
		~Cctype(){}

		virtual int   isalnum(int);
		virtual int   isalpha(int);
		virtual int   isblank(int);
		virtual int   iscntrl(int);
		virtual int   isdigit(int);
		virtual int   isgraph(int);
		virtual int   islower(int);
		virtual int   isprint(int);
		virtual int   ispunct(int);
		virtual int   isspace(int);
		virtual int   isupper(int);
		virtual int   isxdigit(int);
		virtual int   tolower(int);
		virtual int   toupper(int);


#if defined(_POSIX_SOURCE) || defined(_POSIX_C_SOURCE) || defined(_XOPEN_SOURCE) || defined(_GNU_SOURCE) || defined(_BSD_SOURCE)

		virtual int   isalnum_l(int, locale_t);
		virtual int   isalpha_l(int, locale_t);
		virtual int   isblank_l(int, locale_t);
		virtual int   iscntrl_l(int, locale_t);
		virtual int   isdigit_l(int, locale_t);
		virtual int   isgraph_l(int, locale_t);
		virtual int   islower_l(int, locale_t);
		virtual int   isprint_l(int, locale_t);
		virtual int   ispunct_l(int, locale_t);
		virtual int   isspace_l(int, locale_t);
		virtual int   isupper_l(int, locale_t);
		virtual int   isxdigit_l(int, locale_t);
		virtual int   tolower_l(int, locale_t);
		virtual int   toupper_l(int, locale_t);

		virtual int   isascii(int);
		virtual int   toascii(int);
#endif

        virtual int isatty( int fd );

	private:

		Cctype( const Cctype& );
		Cctype& operator = ( const Cctype& );

	};

}//nsLinux

#endif//SYSTEMQOR_LIN_CTYPE_H_3
