//LIN_fcntl.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Linux overrides for fcntl

#ifndef SYSTEMQOR_LIN_FCNTL_H_3
#define SYSTEMQOR_LIN_FCNTL_H_3

#include "SystemQOR/Linux/types/fcntl_types.h"
//#include "SystemQOR/Posix/Baseregex.h"

//--------------------------------------------------------------------------------
namespace nsLinux
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cfcntl //: public nsBaseCRT::Cregex
	{
	public:

		Cfcntl(){}
		~Cfcntl(){}

		virtual int creat(const char *, mode_t);
		virtual int fcntl(int, int, ...);
		virtual int open(const char *, int, ...);
		virtual int openat(int, const char *, int, ...);
		virtual int posix_fadvise(int, off_t, off_t, int);
		virtual int posix_fallocate(int, off_t, off_t);

#if defined(_GNU_SOURCE) || defined(_BSD_SOURCE)
		virtual int lockf(int, int, off_t);
#endif

#if defined(_GNU_SOURCE)
		virtual int fallocate(int, int, off_t, off_t);
		virtual ssize_t readahead(int, off_t, size_t);
		virtual int sync_file_range(int, off_t, off_t, unsigned);
		virtual ssize_t vmsplice(int, const struct iovec *, size_t, unsigned);
		virtual ssize_t splice(int, off_t *, int, off_t *, size_t, unsigned);
		virtual ssize_t tee( int, int, size_t, unsigned );
#endif

	private:

		Cfcntl( const Cfcntl& );
		Cfcntl& operator = ( const Cfcntl& );

	};

}//nsLinux

#endif//SYSTEMQOR_LIN_FCNTL_H_3
