//SAN_stdio.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//SanOS overrides for stdio

#ifndef SYSTEMQOR_SAN_STDIO_H_1
#define SYSTEMQOR_SAN_STDIO_H_1

#include "SystemQOR/Posix/Basestdio.h"

//--------------------------------------------------------------------------------
namespace nsSanOS
{
    //--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cstdio : public nsBaseCRT::Cstdio
	{
	public:

		__QOR_DECLARE_OCLASS_ID( Cstdio );

		Cstdio();
		virtual ~Cstdio();

		virtual int fflush( FILE* stream );
		virtual int fputc( int c, FILE* stream );
		virtual int fputs( const char* s, FILE* stream );
		virtual int getchar( void );
		virtual size_t fwrite( const void* ptr, size_t size, size_t nmemb, FILE* stream );
		virtual int printf( const char* format, va_list vargs );
		virtual int putchar( int c );
		virtual int puts( const char* s );
		int sprintf( char* s, const char* format, va_list vargs );
		int vfprintf( FILE* stream, const char* format, va_list arg );
		int vprintf( const char* format, va_list arg );

	};

}//nsSanOS

#endif//SYSTEMQOR_SAN_STDIO_H_1

