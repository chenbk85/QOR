//MSW_mman.h

// Copyright Querysoft Limited 2015
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef SYSTEMQOR_MSW_SYS_MMAN_H_3
#define SYSTEMQOR_MSW_SYS_MMAN_H_3

#include "SystemQOR/Posix/sys/Basemman.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) Cmman : public nsBaseCRT::Csys_mman
	{
	public:	

		Cmman();
		virtual ~Cmman();

		virtual int mlock( const void*, size_t );
		virtual int mlockall( int );
		virtual void* mmap( void*, size_t, int, int, int, off_t );
		virtual int mprotect( void*, size_t, int );
		virtual int msync( void*, size_t, int );
		virtual int munlock( const void*, size_t );
		virtual int munlockall( void );
		virtual int munmap( void*, size_t );
		virtual int posix_madvise( void*, size_t, int );
		virtual int posix_mem_offset( const void* __QCMP_RESTRICT, size_t, off_t* __QCMP_RESTRICT, size_t* __QCMP_RESTRICT, int* __QCMP_RESTRICT );
		virtual int posix_typed_mem_get_info( int, posix_typed_mem_info* );
		virtual int posix_typed_mem_open( const char*, int, int );
		virtual int shm_open( const char*, int, mode_t );
		virtual int shm_unlink( const char* );

	private:

		Cmman( const Cmman& );
		Cmman& operator = ( const Cmman& );
	};

}//nsWin32

#endif//SYSTEMQOR_MSW_SYS_MMAN_H_3
