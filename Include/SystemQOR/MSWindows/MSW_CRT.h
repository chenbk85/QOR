//MSW_CRT.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef _WIN32_CRT_H_3
#define _WIN32_CRT_H_3

#include "CompilerQOR.h"
#include "WinQL/WinQL.h"
#include "CodeQOR/Instancing/STMember.h"
#include "WinQL/Application/Threading/WinQLCriticalSection.h"
#include "SystemQOR/Posix/BaseCrt.h"

//--------------------------------------------------------------------------------
namespace nsWin32
{
	//--------------------------------------------------------------------------------
	class __QOR_INTERFACE( __QSYS ) CCRTLocks
	{
	public:

		__QOR_DECLARE_OCLASS_ID( CCRTLocks );

		//--------------------------------------------------------------------------------
		enum E_Lock
		{
			EnvironmentVariables = 7
		};

		//--------------------------------------------------------------------------------
		class __QOR_INTERFACE( __QSYS ) CLock
		{
		public:

			__QOR_DECLARE_OCLASS_ID( CLock );

			CLock( E_Lock LockNum );
			~CLock();

		private:

			//nsWin32::nsSync::CCriticalSectionLock m_Lock;
			CLock();//not to be implemented
			__QCS_DECLARE_NONCOPYABLE( CLock );
		};

		friend class CLock;

	private:

		nsWin32::CCriticalSection m_aSections[ 16 ];
	};

	//--------------------------------------------------------------------------------
    class __QOR_INTERFACE( __QSYS ) CmxCRT : public nsBaseCRT::CCRTImpl
	{
	public:

		CmxCRT();
		virtual ~CmxCRT();

        virtual void Init();
		virtual void Cleanup();

		//Get the CRT execution context from the WWL Execution context;
		virtual void* GetExecutionContext();

		nsCodeQOR::CSTMember< CCRTLocks > Locks;
	};

}//nsWin32

#endif//_WIN32_CRT_H_3
