//Baseinet.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

//Base CRT class for arpa/inet

#ifndef SYSTEMQOR_POSIX_ARPA_BASEINET_H_3
#define SYSTEMQOR_POSIX_ARPA_BASEINET_H_3

#include "SystemQOR.h"
#include QOR_SYS_PLATFORMARPATYPES(inet)
#include "CodeQOR/ClassReg/ClassRegEntry.h"

//--------------------------------------------------------------------------------
namespace nsBaseCRT
{
	using nsPlatform::uint16_t;
	using nsPlatform::uint32_t;
	using nsPlatform::in_addr;
	using nsPlatform::in_addr_t;
	using nsPlatform::socklen_t;
	using nsPlatform::uint64_t;

    //--------------------------------------------------------------------------------
    class __QOR_INTERFACE( __QSYS ) Cinet
    {
    public:

		__QOR_DECLARE_OCLASS_ID( Cinet );

        virtual uint32_t htonl( uint32_t );
        virtual uint16_t htons( uint16_t );
        virtual uint32_t ntohl( uint32_t );
        virtual uint16_t ntohs( uint16_t );
        //virtual in_addr_t inet_addr( const char* );
        virtual char* inet_ntoa( in_addr );
        virtual const char* inet_ntop( int, const void* __QCMP_RESTRICT, char* __QCMP_RESTRICT, socklen_t );
        virtual int inet_pton( int, const char* __QCMP_RESTRICT, void* __QCMP_RESTRICT );

	protected:

		Cinet();
		virtual ~Cinet();

		int __aton(const char* s0, in_addr* dest);

	private:

		Cinet( const Cinet& );
		Cinet& operator = ( const Cinet& );

		int hexval(unsigned c);
		

		//--------------------------------------------------------------------------------
		static __inline uint16_t __bswap_16(uint16_t __x)
		{
			return __x << 8 | __x >> 8;
		}

		//--------------------------------------------------------------------------------
		static __inline uint32_t __bswap_32(uint32_t __x)
		{
			return __x >> 24 | __x >> 8 & 0xff00 | __x << 8 & 0xff0000 | __x << 24;
		}

		//--------------------------------------------------------------------------------
		static __inline uint64_t __bswap_64(uint64_t __x)
		{
			return __bswap_32(__x) + 0ULL << 32 | __bswap_32(__x >> 32);
		}

    };

}//nsBaseCRT

#endif//SYSTEMQOR_POSIX_ARPA_BASEINET_H_3
