//ctype.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_CTYPE_H_3
#define QOR_CTYPE_H_3

//NOTE: This file is included by <windows.h> when used under Windows. Beware circular dependencies

#ifndef _QSYS_CTYPE_DEFINES	//If we get here without having chosen an OS and set the basic definitions yet
#   include "SystemQOR.h"	//then do it now or it will be too late
#endif						//but don't include it again if we got here by including windows.h

#include QOR_SYS_PLATFORMTYPES(ctype) //Include the OS specific types and definitions necessary to declare this interface
#include QOR_SYS_PLATFORMTYPES(locale)

typedef nsPlatform::wint_t wint_t;

#ifndef _WCTYPE_T_DEFINED
	typedef nsPlatform::wctype_t wctype_t;
#	define _WCTYPE_T_DEFINED
#endif

__QCMP_STARTLINKAGE_C

    __QOR_INTERFACE( __CQOR ) int isalnum( int c );
    __QOR_INTERFACE( __CQOR ) int isalpha(int c);
    __QOR_INTERFACE( __CQOR ) int isblank(int c);
    __QOR_INTERFACE( __CQOR ) int iscntrl(int c);
    __QOR_INTERFACE( __CQOR ) int isdigit(int c);
    __QOR_INTERFACE( __CQOR ) int isgraph(int c);
    __QOR_INTERFACE( __CQOR ) int islower(int c);
    __QOR_INTERFACE( __CQOR ) int isprint(int c);
    __QOR_INTERFACE( __CQOR ) int ispunct(int c);
    __QOR_INTERFACE( __CQOR ) int isspace(int c);
    __QOR_INTERFACE( __CQOR ) int isupper(int c);
    __QOR_INTERFACE( __CQOR ) int isxdigit(int c);
    __QOR_INTERFACE( __CQOR ) int tolower(int c);
    __QOR_INTERFACE( __CQOR ) int toupper(int c);
    __QOR_INTERFACE( __CQOR ) int isascii(int c);
    __QOR_INTERFACE( __CQOR ) int toascii(int c);
	__QOR_INTERFACE( __CQOR ) int _tolower( int c );
	__QOR_INTERFACE( __CQOR ) int _toupper( int c );
	__QOR_INTERFACE( __CQOR ) int _setmbcp( int codepage );
	__QOR_INTERFACE( __CQOR ) int _isatty( int fd );
	__QOR_INTERFACE( __CQOR ) int _isctype( int c, int desc );
	__QOR_INTERFACE( __CQOR ) int _ismbbalnum( unsigned int c  );
	__QOR_INTERFACE( __CQOR ) int _ismbbalnum_l( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbalpha( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbalpha_l( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbgraph ( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbkalnum( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbkana( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbkprint( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbkpunct( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbblead( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbprint( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbpunct( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbbtrail( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcalnum( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcalpha( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcdigit( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcgraph( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbchira( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbckata( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcl0( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcl1( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcl2( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbclegal( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbclower( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcprint( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcpunct( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcspace( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcsymbol( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbcupper( unsigned int c );
	__QOR_INTERFACE( __CQOR ) int _ismbslead( const unsigned char* str, const unsigned char* current );
	__QOR_INTERFACE( __CQOR ) int _ismbstrail( const unsigned char* str, const unsigned char* current );
	__QOR_INTERFACE( __CQOR ) const unsigned short* __pctype_func( void );

#	define _toupper( _X ) ( toupper( _X ) )
#	define _tolower( _X ) ( tolower( _X ) )

	__QOR_INTERFACE( __CQOR ) int islower_l( int c, nsPlatform::locale_t l );
	__QOR_INTERFACE( __CQOR ) int isupper_l( int c, nsPlatform::locale_t l );
	__QOR_INTERFACE( __CQOR ) int toupper_l( int c, nsPlatform::locale_t l );
	__QOR_INTERFACE( __CQOR ) int tolower_l( int c, nsPlatform::locale_t l );
	__QOR_INTERFACE( __CQOR ) int isdigit_l( int c, nsPlatform::locale_t l );
	__QOR_INTERFACE( __CQOR ) int isxdigit_l( int c , nsPlatform::locale_t l );

__QCMP_ENDLINKAGE_C

#endif//QOR_CTYPE_H_3
