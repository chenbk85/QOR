//unistd.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_UNISTD_H_3
#define QOR_UNISTD_H_3

#include <sys/types.h>
#include <inttypes.h>
#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(unistd)

#define _POSIX_VERSION				200809L				//Integer value indicating version of this standard (C-language binding) to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.
#define _POSIX2_VERSION				200809L				//Integer value indicating version of the Shell and Utilities volume of POSIX.1 to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.
#define _XOPEN_VERSION				700

#define _POSIX_ADVISORY_INFO		0					//The implementation supports the Advisory Information option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_ASYNCHRONOUS_IO		0					//The implementation supports asynchronous input and output. This symbol shall always be set to the value 200809L.
#define _POSIX_BARRIERS				200112L				//The implementation supports barriers. This symbol shall always be set to the value 200809L.
#define _POSIX_CHOWN_RESTRICTED		0					//The use of chown() and fchown() is restricted to a process with appropriate privileges, and to changing the group ID of a file only to the effective group ID of the process or to one of its supplementary group IDs. This symbol shall be defined with a value other than -1.
#define _POSIX_CLOCK_SELECTION		200112				//The implementation supports clock selection. This symbol shall always be set to the value 200809L.
#define _POSIX_CPUTIME				200809L				//[CPT] The implementation supports the Process CPU-Time Clocks option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_FSYNC				0					//[FSC] The implementation supports the File Synchronization option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_IPV6					0					//The implementation supports the IPv6 option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_JOB_CONTROL			0					//The implementation supports job control. This symbol shall always be set to a value greater than zero.
#define _POSIX_MAPPED_FILES			0					//The implementation supports memory mapped Files. This symbol shall always be set to the value 200809L.
#define	_POSIX_MEMLOCK				0					//[ML] The implementation supports the Process Memory Locking option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_MEMLOCK_RANGE		0					//[MLR] The implementation supports the Range Memory Locking option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_MEMORY_PROTECTION	0					//The implementation supports memory protection. This symbol shall always be set to the value 200809L.
#define _POSIX_MESSAGE_PASSING		0					//[MSG] The implementation supports the Message Passing option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_MONOTONIC_CLOCK		200809L				//[MON] The implementation supports the Monotonic Clock option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_NO_TRUNC				0					//Pathname components longer than {NAME_MAX} generate an error. This symbol shall be defined with a value other than -1.
#define _POSIX_PRIORITIZED_IO		0					//[PIO] The implementation supports the Prioritized Input and Output option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_PRIORITY_SCHEDULING	0					//[PS] The implementation supports the Process Scheduling option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_RAW_SOCKETS			0					//[RS] The implementation supports the Raw Sockets option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_READER_WRITER_LOCKS	200112L				//The implementation supports read-write locks. This symbol shall always be set to the value 200809L.
#define _POSIX_REALTIME_SIGNALS		0					//The implementation supports realtime signals. This symbol shall always be set to the value 200809L.
#define _POSIX_REGEXP				0					//The implementation supports the Regular Expression Handling option. This symbol shall always be set to a value greater than zero.
#define _POSIX_SAVED_IDS			0					//Each process has a saved set-user-ID and a saved set-group-ID. This symbol shall always be set to a value greater than zero.
#define _POSIX_SEMAPHORES			200112				//The implementation supports semaphores. This symbol shall always be set to the value 200809L.
#define _POSIX_SHARED_MEMORY_OBJECTS 0					//[SHM] The implementation supports the Shared Memory Objects option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_SHELL				1					//The implementation supports the POSIX shell. This symbol shall always be set to a value greater than zero.
#define _POSIX_SPAWN				0					//[SPN] The implementation supports the Spawn option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_SPIN_LOCKS			200112L				//The implementation supports spin locks. This symbol shall always be set to the value 200809L.
#define _POSIX_SPORADIC_SERVER		0					//[SS] The implementation supports the Process Sporadic Server option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_SYNCHRONIZED_IO		0					//[SIO] The implementation supports the Synchronized Input and Output option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_ATTR_STACKADDR 0					//[TSA] The implementation supports the Thread Stack Address Attribute option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_ATTR_STACKSIZE 0					//[TSS] The implementation supports the Thread Stack Size Attribute option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_CPUTIME		200809L				//[TCT] The implementation supports the Thread CPU-Time Clocks option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_PRIO_INHERIT	0					//[TPI] The implementation supports the Non-Robust Mutex Priority Inheritance option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_PRIO_PROTECT	0					//[TPP] The implementation supports the Non-Robust Mutex Priority Protection option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_PRIORITY_SCHEDULING				//[TPS] The implementation supports the Thread Execution Scheduling option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_PROCESS_SHARED 0					//[TSH] The implementation supports the Thread Process-Shared Synchronization option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_ROBUST_PRIO_INHERIT 0				//[RPI] The implementation supports the Robust Mutex Priority Inheritance option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_ROBUST_PRIO_PROTECT 0				//[RPP] The implementation supports the Robust Mutex Priority Protection option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREAD_SAFE_FUNCTIONS 200112L			//The implementation supports thread-safe functions. This symbol shall always be set to the value 200809L.
#define _POSIX_THREAD_SPORADIC_SERVER 0					//[TSP] The implementation supports the Thread Sporadic Server option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_THREADS				200112L				//The implementation supports threads. This symbol shall always be set to the value 200809L.
#define _POSIX_TIMEOUTS				200112L				//The implementation supports timeouts. This symbol shall always be set to the value 200809L.
#define _POSIX_TIMERS				200809L				//The implementation supports timers. This symbol shall always be set to the value 200809L.
#define _POSIX_TRACE				0					//[OB TRC] The implementation supports the Trace option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_TRACE_EVENT_FILTER	0					//[OB TEF] The implementation supports the Trace Event Filter option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_TRACE_INHERIT		0					//[OB TRI] The implementation supports the Trace Inherit option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_TRACE_LOG			0					//[OB TRL] The implementation supports the Trace Log option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_TYPED_MEMORY_OBJECTS 0					//[TYM] The implementation supports the Typed Memory Objects option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX_V6_ILP32_OFF32		0					//[OB] The implementation provides a C-language compilation environment with 32-bit int, long, pointer, and off_t types.
#define _POSIX_V6_ILP32_OFFBIG		0					//[OB] The implementation provides a C-language compilation environment with 32-bit int, long, and pointer types and an off_t type using at least 64 bits.
#define _POSIX_V6_LP64_OFF64		0					//[OB] The implementation provides a C-language compilation environment with 32-bit int and 64-bit long, pointer, and off_t types.
#define _POSIX_V6_LPBIG_OFFBIG		0					//[OB] The implementation provides a C-language compilation environment with an int type using at least 32 bits and long, pointer, and off_t types using at least 64 bits.
#define _POSIX_V7_ILP32_OFF32		0					//The implementation provides a C-language compilation environment with 32-bit int, long, pointer, and off_t types.
#define _POSIX_V7_ILP32_OFFBIG		0					//The implementation provides a C-language compilation environment with 32-bit int, long, and pointer types and an off_t type using at least 64 bits.
#define _POSIX_V7_LP64_OFF64		0					//The implementation provides a C-language compilation environment with 32-bit int and 64-bit long, pointer, and off_t types.
#define _POSIX_V7_LPBIG_OFFBIG		0					//The implementation provides a C-language compilation environment with an int type using at least 32 bits and long, pointer, and off_t types using at least 64 bits.
#define _POSIX2_C_BIND				0					//The implementation supports the C-Language Binding option. This symbol shall always have the value 200809L.
#define _POSIX2_C_DEV				0					//[CD] The implementation supports the C-Language Development Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_CHAR_TERM			0					//The implementation supports the Terminal Characteristics option. The value of this symbol reported by sysconf() shall either be -1 or a value greater than zero.
#define _POSIX2_FORT_DEV			0					//[FD] The implementation supports the FORTRAN Development Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_FORT_RUN			0					//[FR] The implementation supports the FORTRAN Runtime Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_LOCALEDEF			0					//The implementation supports the creation of locales by the localedef utility. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS					0					//[OB BE] The implementation supports the Batch Environment Services and Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS_ACCOUNTING		0					//[OB BE] The implementation supports the Batch Accounting option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS_CHECKPOINT		0					//[OB BE] The implementation supports the Batch Checkpoint/Restart option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS_LOCATE			0					//[OB BE] The implementation supports the Locate Batch Job Request option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS_MESSAGE			0					//[OB BE] The implementation supports the Batch Job Message Request option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_PBS_TRACK			0					//[OB BE] The implementation supports the Track Batch Job Request option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_SW_DEV				0					//[SD] The implementation supports the Software Development Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _POSIX2_UPE					0					//[UP] The implementation supports the User Portability Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall either be -1 or 200809L.
#define _XOPEN_CRYPT				0					//[XSI] The implementation supports the X/Open Encryption Option Group.
#define _XOPEN_ENH_I18N				0					//The implementation supports the Issue 4, Version 2 Enhanced Internationalization Option Group. This symbol shall always be set to a value other than -1.
#define _XOPEN_REALTIME				0					//The implementation supports the X/Open Realtime Option Group.
#define _XOPEN_REALTIME_THREADS		0					//The implementation supports the X/Open Realtime Threads Option Group.
#define _XOPEN_SHM					0					//The implementation supports the Issue 4, Version 2 Shared Memory Option Group. This symbol shall always be set to a value other than -1.
#define _XOPEN_STREAMS				0					//[OB XSR] The implementation supports the XSI STREAMS Option Group.
#define _XOPEN_UNIX					0					//[XSI] The implementation supports the XSI option.
#define _XOPEN_UUCP					0					//[UU] The implementation supports the UUCP Utilities option. If this symbol is defined in <unistd.h>, it shall be defined to be -1, 0, or 200809L. The value of this symbol reported by sysconf() shall be either -1 or 200809L.

#define _POSIX_ASYNC_IO				1					//Asynchronous input or output operations may be performed for the associated file.
#define _POSIX_PRIO_IO				1					//Prioritized input or output operations may be performed for the associated file.
#define _POSIX_SYNC_IO				1					//Synchronized input or output operations may be performed for the associated file.

#define _POSIX_TIMESTAMP_RESOLUTION 20000000			//The resolution in nanoseconds for all file timestamps.
#define _POSIX2_SYMLINKS			1					//Symbolic links can be created.

//the following symbolic constants for use with the access() function. The values shall be suitable for use in #if preprocessing directives.

#define F_OK			( nsPlatform::FileOK )				//Test for existence of file.
#define R_OK			( nsPlatform::ReadOK )				//Test for read permission.
#define W_OK			( nsPlatform::WriteOK )				//Test for write permission.
#define X_OK			( nsPlatform::ExeOK )				//Test for execute (search) permission.

//the following symbolic constants for the confstr() function:

#define _CS_PATH		( nsPlatform::CSPath )				//This is the value for the PATH environment variable that finds all standard utilities.
#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS						//If sysconf(_SC_V7_ILP32_OFF32) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of initial options to be given to the c99 utility to build an application using a programming model with 32-bit int, long, pointer, and off_t types.
#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS					//If sysconf(_SC_V7_ILP32_OFF32) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of final options to be given to the c99 utility to build an application using a programming model with 32-bit int, long, pointer, and off_t types.
#define _CS_POSIX_V7_ILP32_OFF32_LIBS						//If sysconf(_SC_V7_ILP32_OFF32) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of libraries to be given to the c99 utility to build an application using a programming model with 32-bit int, long, pointer, and off_t types.
#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS					//If sysconf(_SC_V7_ILP32_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of initial options to be given to the c99 utility to build an application using a programming model with 32-bit int, long, and pointer types, and an off_t type using at least 64 bits.
#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS					//If sysconf(_SC_V7_ILP32_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of final options to be given to the c99 utility to build an application using a programming model with 32-bit int, long, and pointer types, and an off_t type using at least 64 bits.
#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS						//If sysconf(_SC_V7_ILP32_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of libraries to be given to the c99 utility to build an application using a programming model with 32-bit int, long, and pointer types, and an off_t type using at least 64 bits.
#define _CS_POSIX_V7_LP64_OFF64_CFLAGS						//If sysconf(_SC_V7_LP64_OFF64) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of initial options to be given to the c99 utility to build an application using a programming model with 32-bit int and 64-bit long, pointer, and off_t types.
#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS						//If sysconf(_SC_V7_LP64_OFF64) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of final options to be given to the c99 utility to build an application using a programming model with 32-bit int and 64-bit long, pointer, and off_t types.
#define _CS_POSIX_V7_LP64_OFF64_LIBS						//If sysconf(_SC_V7_LP64_OFF64) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of libraries to be given to the c99 utility to build an application using a programming model with 32-bit int and 64-bit long, pointer, and off_t types.
#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS					//If sysconf(_SC_V7_LPBIG_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of initial options to be given to the c99 utility to build an application using a programming model with an int type using at least 32 bits and long, pointer, and off_t types using at least 64 bits.
#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS					//If sysconf(_SC_V7_LPBIG_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of final options to be given to the c99 utility to build an application using a programming model with an int type using at least 32 bits and long, pointer, and off_t types using at least 64 bits.
#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS						//If sysconf(_SC_V7_LPBIG_OFFBIG) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of libraries to be given to the c99 utility to build an application using a programming model with an int type using at least 32 bits and long, pointer, and off_t types using at least 64 bits.
#define _CS_POSIX_V7_THREADS_CFLAGS							//If sysconf(_SC_POSIX_THREADS) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of initial options to be given to the c99 utility to build a multi-threaded application. These flags are in addition to those associated with any of the other _CS_POSIX_V7_*_CFLAGS values used to specify particular type size programing environments.
#define _CS_POSIX_V7_THREADS_LDFLAGS						//If sysconf(_SC_POSIX_THREADS) returns -1, the meaning of this value is unspecified. Otherwise, this value is the set of final options to be given to the c99 utility to build a multi-threaded application. These flags are in addition to those associated with any of the other _CS_POSIX_V7_*_LDFLAGS values used to specify particular type size programing environments.
#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS					//This value is a <newline>-separated list of names of programming environments supported by the implementation in which the widths of the blksize_t, cc_t, mode_t, nfds_t, pid_t, ptrdiff_t, size_t, speed_t, ssize_t, suseconds_t, tcflag_t, wchar_t, and wint_t types are no greater than the width of type long. The format of each name shall be suitable for use with the getconf -v option.
#define _CS_V7_ENV											//This is the value that provides the environment variable information (other than that provided by _CS_PATH) that is required by the implementation to create a conforming environment, as described in the implementation's conformance documentation.

#define SEEK_CUR			( nsPlatform::sc_Seek_Cur )					//Seek relative to current position.
#define SEEK_END			( nsPlatform::sc_Seek_End )					//Seek relative to end-of-file.
#define SEEK_SET			( nsPlatform::sc_Seek_Set )					//Seek relative to start-of-file.

#define F_ULOCK ( nsPlatform::FileUnlock )
#define F_LOCK	( nsPlatform::FileLock )
#define F_TLOCK	( nsPlatform::FileTryLock )
#define F_TEST	( nsPlatform::FileTestLock )

//the following symbolic constants for pathconf():

#define _PC_2_SYMLINKS
#define _PC_ALLOC_SIZE_MIN
#define _PC_ASYNC_IO
#define _PC_CHOWN_RESTRICTED
#define _PC_FILESIZEBITS
#define _PC_LINK_MAX
#define _PC_MAX_CANON
#define _PC_MAX_INPUT
#define _PC_NAME_MAX
#define _PC_NO_TRUNC
#define _PC_PATH_MAX
#define _PC_PIPE_BUF
#define _PC_PRIO_IO
#define _PC_REC_INCR_XFER_SIZE
#define _PC_REC_MAX_XFER_SIZE
#define _PC_REC_MIN_XFER_SIZE
#define _PC_REC_XFER_ALIGN
#define _PC_SYMLINK_MAX
#define _PC_SYNC_IO
#define _PC_TIMESTAMP_RESOLUTION
#define _PC_VDISABLE

//the following symbolic constants for sysconf():

#define _SC_2_C_BIND
#define _SC_2_C_DEV
#define _SC_2_CHAR_TERM
#define _SC_2_FORT_DEV
#define _SC_2_FORT_RUN
#define _SC_2_LOCALEDEF
#define _SC_2_PBS
#define _SC_2_PBS_ACCOUNTING
#define _SC_2_PBS_CHECKPOINT
#define _SC_2_PBS_LOCATE
#define _SC_2_PBS_MESSAGE
#define _SC_2_PBS_TRACK
#define _SC_2_SW_DEV
#define _SC_2_UPE
#define _SC_2_VERSION
#define _SC_ADVISORY_INFO
#define _SC_AIO_LISTIO_MAX
#define _SC_AIO_MAX
#define _SC_AIO_PRIO_DELTA_MAX
#define _SC_ARG_MAX
#define _SC_ASYNCHRONOUS_IO
#define _SC_ATEXIT_MAX
#define _SC_BARRIERS
#define _SC_BC_BASE_MAX
#define _SC_BC_DIM_MAX
#define _SC_BC_SCALE_MAX
#define _SC_BC_STRING_MAX
#define _SC_CHILD_MAX
#define _SC_CLK_TCK						( nsPlatform::SCClockTick )
#define _SC_CLOCK_SELECTION
#define _SC_COLL_WEIGHTS_MAX
#define _SC_CPUTIME
#define _SC_DELAYTIMER_MAX
#define _SC_EXPR_NEST_MAX
#define _SC_FSYNC
#define _SC_GETGR_R_SIZE_MAX
#define _SC_GETPW_R_SIZE_MAX
#define _SC_HOST_NAME_MAX
#define _SC_IOV_MAX
#define _SC_IPV6
#define _SC_JOB_CONTROL
#define _SC_LINE_MAX
#define _SC_LOGIN_NAME_MAX
#define _SC_MAPPED_FILES
#define _SC_MEMLOCK
#define _SC_MEMLOCK_RANGE
#define _SC_MEMORY_PROTECTION
#define _SC_MESSAGE_PASSING
#define _SC_MONOTONIC_CLOCK
#define _SC_MQ_OPEN_MAX
#define _SC_MQ_PRIO_MAX
#define _SC_NGROUPS_MAX
#define _SC_OPEN_MAX
#define _SC_PAGE_SIZE
#define _SC_PAGESIZE
#define _SC_PRIORITIZED_IO
#define _SC_PRIORITY_SCHEDULING
#define _SC_RAW_SOCKETS
#define _SC_RE_DUP_MAX
#define _SC_READER_WRITER_LOCKS
#define _SC_REALTIME_SIGNALS
#define _SC_REGEXP
#define _SC_RTSIG_MAX
#define _SC_SAVED_IDS
#define _SC_SEM_NSEMS_MAX
#define _SC_SEM_VALUE_MAX
#define _SC_SEMAPHORES
#define _SC_SHARED_MEMORY_OBJECTS
#define _SC_SHELL
#define _SC_SIGQUEUE_MAX
#define _SC_SPAWN
#define _SC_SPIN_LOCKS
#define _SC_SPORADIC_SERVER
#define _SC_SS_REPL_MAX
#define _SC_STREAM_MAX
#define _SC_SYMLOOP_MAX
#define _SC_SYNCHRONIZED_IO
#define _SC_THREAD_ATTR_STACKADDR
#define _SC_THREAD_ATTR_STACKSIZE
#define _SC_THREAD_CPUTIME
#define _SC_THREAD_DESTRUCTOR_ITERATIONS
#define _SC_THREAD_KEYS_MAX
#define _SC_THREAD_PRIO_INHERIT
#define _SC_THREAD_PRIO_PROTECT
#define _SC_THREAD_PRIORITY_SCHEDULING
#define _SC_THREAD_PROCESS_SHARED
#define _SC_THREAD_ROBUST_PRIO_INHERIT
#define _SC_THREAD_ROBUST_PRIO_PROTECT
#define _SC_THREAD_SAFE_FUNCTIONS
#define _SC_THREAD_SPORADIC_SERVER
#define _SC_THREAD_STACK_MIN
#define _SC_THREAD_THREADS_MAX
#define _SC_THREADS
#define _SC_TIMEOUTS
#define _SC_TIMER_MAX
#define _SC_TIMERS
#define _SC_TRACE
#define _SC_TRACE_EVENT_FILTER
#define _SC_TRACE_EVENT_NAME_MAX
#define _SC_TRACE_INHERIT
#define _SC_TRACE_LOG
#define _SC_TRACE_NAME_MAX
#define _SC_TRACE_SYS_MAX
#define _SC_TRACE_USER_EVENT_MAX
#define _SC_TTY_NAME_MAX
#define _SC_TYPED_MEMORY_OBJECTS
#define _SC_TZNAME_MAX
#define _SC_V7_ILP32_OFF32
#define _SC_V7_ILP32_OFFBIG
#define _SC_V7_LP64_OFF64
#define _SC_V7_LPBIG_OFFBIG
#define _SC_V6_ILP32_OFF32
#define _SC_V6_ILP32_OFFBIG
#define _SC_V6_LP64_OFF64
#define _SC_V6_LPBIG_OFFBIG
#define _SC_VERSION
#define _SC_XOPEN_CRYPT
#define _SC_XOPEN_ENH_I18N
#define _SC_XOPEN_REALTIME
#define _SC_XOPEN_REALTIME_THREADS
#define _SC_XOPEN_SHM
#define _SC_XOPEN_STREAMS
#define _SC_XOPEN_UNIX
#define _SC_XOPEN_UUCP
#define _SC_XOPEN_VERSION

//the following symbolic constants for file streams:

#define STDERR_FILENO			2				//File number of stderr
#define STDIN_FILENO			0				//File number of stdin
#define STDOUT_FILENO			1				//File number of stdout

#define _POSIX_VDISABLE			( nsPlatform::cPosixVDisable )

typedef nsPlatform::off_t off_t;
typedef nsPlatform::ssize_t ssize_t;
typedef nsPlatform::gid_t gid_t;
typedef nsPlatform::uid_t uid_t;
typedef nsPlatform::pid_t pid_t;
typedef nsPlatform::intptr_t intptr_t;

__QCMP_STARTLINKAGE_C

    __QOR_INTERFACE( __CQOR ) int			access(const char *, int);
    __QOR_INTERFACE( __CQOR ) unsigned     alarm(unsigned);
    __QOR_INTERFACE( __CQOR ) int          chdir(const char *);
    __QOR_INTERFACE( __CQOR ) int          chown(const char *, uid_t, gid_t);
    __QOR_INTERFACE( __CQOR ) int          close(int);
    __QOR_INTERFACE( __CQOR ) size_t       confstr(int, char *, size_t);
    __QOR_INTERFACE( __CQOR ) char*			crypt(const char *, const char *);
    __QOR_INTERFACE( __CQOR ) char*			ctermid(char *);
    __QOR_INTERFACE( __CQOR ) int          dup(int);
    __QOR_INTERFACE( __CQOR ) int          dup2(int, int);
	__QOR_INTERFACE( __CQOR ) void        _exit(int);
    __QOR_INTERFACE( __CQOR ) void         encrypt(char[64], int);
    __QOR_INTERFACE( __CQOR ) int          execl(const char *, const char *, ...);
    __QOR_INTERFACE( __CQOR ) int          execle(const char *, const char *, ...);
    __QOR_INTERFACE( __CQOR ) int          execlp(const char *, const char *, ...);
    __QOR_INTERFACE( __CQOR ) int          execv(const char *, char *const []);
    __QOR_INTERFACE( __CQOR ) int          execve(const char *, char *const [], char *const []);
    __QOR_INTERFACE( __CQOR ) int          execvp(const char *, char *const []);
    __QOR_INTERFACE( __CQOR ) int          faccessat( int, const char*, int, int );
    __QOR_INTERFACE( __CQOR ) int          fchown(int, uid_t, gid_t);
    __QOR_INTERFACE( __CQOR ) int          fchdir(int);
	__QOR_INTERFACE( __CQOR ) int          fchownat( int, const char*, uid_t, gid_t, int );
    __QOR_INTERFACE( __CQOR ) int          fdatasync(int);
	__QOR_INTERFACE( __CQOR ) int          fexecve( int, char* const [], char* const [] );
    __QOR_INTERFACE( __CQOR ) pid_t        fork(void);
    __QOR_INTERFACE( __CQOR ) long         fpathconf(int, int);
    __QOR_INTERFACE( __CQOR ) int          fsync(int);
    __QOR_INTERFACE( __CQOR ) int          ftruncate(int, off_t);
    __QOR_INTERFACE( __CQOR ) char*		  getcwd(char *, size_t);
    __QOR_INTERFACE( __CQOR ) gid_t        getegid(void);
    __QOR_INTERFACE( __CQOR ) uid_t        geteuid(void);
    __QOR_INTERFACE( __CQOR ) gid_t        getgid(void);
    __QOR_INTERFACE( __CQOR ) int          getgroups(int, gid_t []);
    __QOR_INTERFACE( __CQOR ) long         gethostid(void);

#ifndef OS_EXPORTS_UNISTD_GETHOSTNAME
    __QOR_INTERFACE( __CQOR ) int          gethostname(char *, size_t);
#endif//OS_EXPORTS_UNISTD_GETHOSTNAME

    __QOR_INTERFACE( __CQOR ) char        *getlogin(void);
    __QOR_INTERFACE( __CQOR ) int          getlogin_r(char *, size_t);
    __QOR_INTERFACE( __CQOR ) int          getopt(int, char * const [ ], const char *);
    __QOR_INTERFACE( __CQOR ) pid_t        getpgid(pid_t);
    __QOR_INTERFACE( __CQOR ) pid_t        getpgrp(void);
    __QOR_INTERFACE( __CQOR ) pid_t        getpid(void);
    __QOR_INTERFACE( __CQOR ) pid_t        getppid(void);
    __QOR_INTERFACE( __CQOR ) pid_t        getsid(pid_t);
    __QOR_INTERFACE( __CQOR ) uid_t        getuid(void);
    __QOR_INTERFACE( __CQOR ) char        *getwd(char *); //(LEGACY )
    __QOR_INTERFACE( __CQOR ) int          isatty(int);
    __QOR_INTERFACE( __CQOR ) int          lchown(const char *, uid_t, gid_t);
    __QOR_INTERFACE( __CQOR ) int          link(const char *, const char *);
	__QOR_INTERFACE( __CQOR ) int          linkat( int, const char*, int, const char*, int );
    __QOR_INTERFACE( __CQOR ) int          lockf(int, int, off_t);
    __QOR_INTERFACE( __CQOR ) off_t        lseek(int, off_t, int);
    __QOR_INTERFACE( __CQOR ) int          nice(int);
    __QOR_INTERFACE( __CQOR ) long         pathconf(const char *, int);
    __QOR_INTERFACE( __CQOR ) int          pause(void);
    __QOR_INTERFACE( __CQOR ) int          pipe(int [2]);
    __QOR_INTERFACE( __CQOR ) int          pipe2( int[ 2 ], int );
    __QOR_INTERFACE( __CQOR ) ssize_t      pread(int, void *, size_t, off_t);
    __QOR_INTERFACE( __CQOR ) ssize_t      pwrite(int, const void *, size_t, off_t);
    __QOR_INTERFACE( __CQOR ) ssize_t      read(int, void *, size_t);
    __QOR_INTERFACE( __CQOR ) ssize_t      readlink(const char* __QCMP_RESTRICT, char* __QCMP_RESTRICT, size_t);
	__QOR_INTERFACE( __CQOR ) ssize_t      readlinkat( int, const char* __QCMP_RESTRICT, char* __QCMP_RESTRICT, size_t );
    __QOR_INTERFACE( __CQOR ) int          rmdir(const char *);
    __QOR_INTERFACE( __CQOR ) int          setegid(gid_t);
    __QOR_INTERFACE( __CQOR ) int          seteuid(uid_t);
    __QOR_INTERFACE( __CQOR ) int          setgid(gid_t);
    __QOR_INTERFACE( __CQOR ) int          setpgid(pid_t, pid_t);
    __QOR_INTERFACE( __CQOR ) pid_t        setpgrp(void);
    __QOR_INTERFACE( __CQOR ) int          setregid(gid_t, gid_t);
    __QOR_INTERFACE( __CQOR ) int          setreuid(uid_t, uid_t);
    __QOR_INTERFACE( __CQOR ) pid_t        setsid(void);
    __QOR_INTERFACE( __CQOR ) int          setuid(uid_t);
    __QOR_INTERFACE( __CQOR ) unsigned     sleep(unsigned);
	__QOR_INTERFACE( __CQOR ) unsigned     _sleep(unsigned);
    __QOR_INTERFACE( __CQOR ) void         swab(const void* __QCMP_RESTRICT, void* __QCMP_RESTRICT, ssize_t);
	__QOR_INTERFACE( __CQOR ) void         _swab( char*, char*, int );
    __QOR_INTERFACE( __CQOR ) int          symlink(const char *, const char *);
	__QOR_INTERFACE( __CQOR ) int          symlinkat( const char*, int, const char* );
    __QOR_INTERFACE( __CQOR ) void         sync(void);
    __QOR_INTERFACE( __CQOR ) long         sysconf(int);
    __QOR_INTERFACE( __CQOR ) pid_t        tcgetpgrp(int);
    __QOR_INTERFACE( __CQOR ) int          tcsetpgrp(int, pid_t);
    __QOR_INTERFACE( __CQOR ) int          truncate(const char *, off_t);
    __QOR_INTERFACE( __CQOR ) char        *ttyname(int);
    __QOR_INTERFACE( __CQOR ) int          ttyname_r(int, char *, size_t);
    __QOR_INTERFACE( __CQOR ) useconds_t   ualarm(useconds_t, useconds_t);
    __QOR_INTERFACE( __CQOR ) int          unlink(const char *);
	__QOR_INTERFACE( __CQOR ) int          unlinkat( int, const char*, int );
    __QOR_INTERFACE( __CQOR ) int          usleep(useconds_t);
    __QOR_INTERFACE( __CQOR ) pid_t        vfork(void);
    __QOR_INTERFACE( __CQOR ) ssize_t      write(int, const void *, size_t);
	__QOR_INTERFACE( __CQOR ) int		  _write( int fd, const void* buffer, unsigned int count );
	__QOR_INTERFACE( __CQOR ) int		  _unlink( const char* filename );
	__QOR_INTERFACE( __CQOR ) int		  _wunlink( const wchar_t* filename );
	__QOR_INTERFACE( __CQOR ) int		  _read( int fd, void* buffer, unsigned int count );

	//extensions for UNIX compatibility

	__QOR_INTERFACE( __CQOR ) void*		sbrk( intptr_t delta );

	__QOR_INTERFACE( __CQOR ) char*&	f_optarg();
#	define optarg (f_optarg())

	__QOR_INTERFACE( __CQOR ) int&		f_opterr();
#	define opterr (f_opterr())

	__QOR_INTERFACE( __CQOR ) int&		f_optind();
#	define optind (f_optind())

	__QOR_INTERFACE( __CQOR ) int&		f_optopt();
#	define optopt (f_optopt())


#	ifndef _USRDLL
#		ifndef __QORLIB
	//__QOR_INTERFACE( __CQOR ) extern int		opterr;
	//__QOR_INTERFACE( __CQOR ) extern int		optind;
	//__QOR_INTERFACE( __CQOR ) extern int		optopt;
#		endif
#endif

__QCMP_ENDLINKAGE_C

#endif//QOR_UNISTD_H_3
