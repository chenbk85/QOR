//fmtmsg.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_FMTMSG_H_3
#define QOR_FMTMSG_H_3

#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(fmtmsg)

#define MM_HARD				( nsPlatform::MMHard )				//Source of the condition is hardware. 
#define MM_SOFT				( nsPlatform::MMSoft )				//Source of the condition is software. 
#define MM_FIRM				( nsPlatform::MMFirm )				//Source of the condition is firmware. 
#define MM_APPL				( nsPlatform::MMApplication )		//Condition detected by application. 
#define MM_UTIL				( nsPlatform::MMUtility )			//Condition detected by utility. 
#define MM_OPSYS			( nsPlatform::MMOpSys )				//Condition detected by operating system. 
#define MM_RECOVER			( nsPlatform::MMRecoverable )		//Recoverable error. 
#define MM_NRECOV			( nsPlatform::MMNotRecoverable )	//Non-recoverable error. 
#define MM_HALT				( nsPlatform::MMHalt )				//Error causing application to halt. 
#define MM_ERROR			( nsPlatform::MMError )				//Application has encountered a non-fatal fault. 
#define MM_WARNING			( nsPlatform::MMWarning )			//Application has detected unusual non-error condition. 
#define MM_INFO				( nsPlatform::MMInfo )				//Informative message. 
#define MM_NOSEV			( nsPlatform::MMNoSeverity )		//No severity level provided for the message. 
#define MM_PRINT			( nsPlatform::MMPrint )				//Display message on standard error. 
#define MM_CONSOLE			( nsPlatform::MMConsole )			//Display message on system console. 

#define MM_OK				( nsPlatform::MMOK )				//The function succeeded. 
#define MM_NOTOK			( nsPlatform::MMNotOK )				//The function failed completely. 
#define MM_NOMSG			( nsPlatform::MMNoMsg )				//The function was unable to generate a message on standard error, but otherwise succeeded. 
#define MM_NOCON			( nsPlatform::MMNoConsole )			//The function was unable to generate a console message, but otherwise succeeded. 

#define MM_NULLLBL			( (char*)0 )
#define MM_NULLSEV			( (int)0 )
#define MM_NULLMC			( (long)0 )
#define MM_NULLTXT			( (char*)0 )
#define MM_NULLACT			( (char*)0 ) 
#define MM_NULLTAG			( (char*)0 ) 

__QCMP_STARTLINKAGE_C

    __QOR_INTERFACE( __CQOR ) int fmtmsg( long classification, const char* label, int severity , const char* text, const char* action, const char* tag );

__QCMP_ENDLINKAGE_C

#endif//QOR_FMTMSG_H_3
