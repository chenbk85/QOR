//wordexp.h

// Copyright Querysoft Limited 2013
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef	QOR_WORDEXP_H_3
#define QOR_WORDEXP_H_3

#include "SystemQOR.h"
#include QOR_SYS_PLATFORMTYPES(wordexp)

typedef nsPlatform::wordexp_t wordexp_t;

//the following symbolic constants for use as flags for the wordexp() function:

#define WRDE_APPEND				( nsPlatform::WrdEAppend )			//Append words to those previously generated. 
#define WRDE_DOOFFS				( nsPlatform::WrdEDoOffs )			//Number of null pointers to prepend to we_wordv. 
#define WRDE_NOCMD				( nsPlatform::WrdENoCmd )			//Fail if command substitution is requested. 
#define WRDE_REUSE				( nsPlatform::WrdEReuse )			//The pwordexp argument was passed to a previous successful call to wordexp(), and has not been passed to wordfree(). The result is the same as if the application had called wordfree() and then called wordexp() without WRDE_REUSE. 
#define WRDE_SHOWERR			( nsPlatform::WrdEShowErr )			//Do not redirect stderr to /dev/null. 
#define WRDE_UNDEF				( nsPlatform::WrdEUndef )			//Report error on an attempt to expand an undefined shell variable. 

//the following symbolic constants as error return values:

#define WRDE_BADCHAR			( nsPlatform::WrdEBadChar )			//One of the unquoted characters- <newline>, '|' , '&' , ';' , '<' , '>' , '(' , ')' , '{' , '}' - appears in words in an inappropriate context. 
#define WRDE_BADVAL				( nsPlatform::WrdEBadVal )			//Reference to undefined shell variable when WRDE_UNDEF is set in flags. 
#define WRDE_CMDSUB				( nsPlatform::WrdECmdSub )			//Command substitution requested when WRDE_NOCMD was set in flags. 
#define WRDE_NOSPACE			( nsPlatform::WrdENoSpace )			//Attempt to allocate memory failed. 
#define WRDE_SYNTAX				( nsPlatform::WrdESyntax )			//Shell syntax error, such as unbalanced parentheses or unterminated string. 

__QCMP_STARTLINKAGE_C
	
	__QOR_INTERFACE( __CQOR ) int  wordexp( const char* __QCMP_RESTRICT words, wordexp_t* __QCMP_RESTRICT pwordexp, int flags );
	__QOR_INTERFACE( __CQOR ) void wordfree( wordexp_t* pwordexp );

__QCMP_ENDLINKAGE_C

#endif//QOR_WORDEXP_H_3
